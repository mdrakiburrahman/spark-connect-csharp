// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: spark/connect/base.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spark.Connect {

  /// <summary>Holder for reflection information generated from spark/connect/base.proto</summary>
  public static partial class BaseReflection {

    #region Descriptor
    /// <summary>File descriptor for spark/connect/base.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BaseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhzcGFyay9jb25uZWN0L2Jhc2UucHJvdG8SDXNwYXJrLmNvbm5lY3QaGWdv",
            "b2dsZS9wcm90b2J1Zi9hbnkucHJvdG8aHHNwYXJrL2Nvbm5lY3QvY29tbWFu",
            "ZHMucHJvdG8aGnNwYXJrL2Nvbm5lY3QvY29tbW9uLnByb3RvGh9zcGFyay9j",
            "b25uZWN0L2V4cHJlc3Npb25zLnByb3RvGh1zcGFyay9jb25uZWN0L3JlbGF0",
            "aW9ucy5wcm90bxoZc3BhcmsvY29ubmVjdC90eXBlcy5wcm90byJlCgRQbGFu",
            "EicKBHJvb3QYASABKAsyFy5zcGFyay5jb25uZWN0LlJlbGF0aW9uSAASKQoH",
            "Y29tbWFuZBgCIAEoCzIWLnNwYXJrLmNvbm5lY3QuQ29tbWFuZEgAQgkKB29w",
            "X3R5cGUiXAoLVXNlckNvbnRleHQSDwoHdXNlcl9pZBgBIAEoCRIRCgl1c2Vy",
            "X25hbWUYAiABKAkSKQoKZXh0ZW5zaW9ucxjnByADKAsyFC5nb29nbGUucHJv",
            "dG9idWYuQW55IoMQChJBbmFseXplUGxhblJlcXVlc3QSEgoKc2Vzc2lvbl9p",
            "ZBgBIAEoCRIwCgx1c2VyX2NvbnRleHQYAiABKAsyGi5zcGFyay5jb25uZWN0",
            "LlVzZXJDb250ZXh0EhgKC2NsaWVudF90eXBlGAMgASgJSAGIAQESOgoGc2No",
            "ZW1hGAQgASgLMiguc3BhcmsuY29ubmVjdC5BbmFseXplUGxhblJlcXVlc3Qu",
            "U2NoZW1hSAASPAoHZXhwbGFpbhgFIAEoCzIpLnNwYXJrLmNvbm5lY3QuQW5h",
            "bHl6ZVBsYW5SZXF1ZXN0LkV4cGxhaW5IABJDCgt0cmVlX3N0cmluZxgGIAEo",
            "CzIsLnNwYXJrLmNvbm5lY3QuQW5hbHl6ZVBsYW5SZXF1ZXN0LlRyZWVTdHJp",
            "bmdIABI9Cghpc19sb2NhbBgHIAEoCzIpLnNwYXJrLmNvbm5lY3QuQW5hbHl6",
            "ZVBsYW5SZXF1ZXN0LklzTG9jYWxIABJFCgxpc19zdHJlYW1pbmcYCCABKAsy",
            "LS5zcGFyay5jb25uZWN0LkFuYWx5emVQbGFuUmVxdWVzdC5Jc1N0cmVhbWlu",
            "Z0gAEkMKC2lucHV0X2ZpbGVzGAkgASgLMiwuc3BhcmsuY29ubmVjdC5BbmFs",
            "eXplUGxhblJlcXVlc3QuSW5wdXRGaWxlc0gAEkcKDXNwYXJrX3ZlcnNpb24Y",
            "CiABKAsyLi5zcGFyay5jb25uZWN0LkFuYWx5emVQbGFuUmVxdWVzdC5TcGFy",
            "a1ZlcnNpb25IABI/CglkZGxfcGFyc2UYCyABKAsyKi5zcGFyay5jb25uZWN0",
            "LkFuYWx5emVQbGFuUmVxdWVzdC5ERExQYXJzZUgAEkkKDnNhbWVfc2VtYW50",
            "aWNzGAwgASgLMi8uc3BhcmsuY29ubmVjdC5BbmFseXplUGxhblJlcXVlc3Qu",
            "U2FtZVNlbWFudGljc0gAEkcKDXNlbWFudGljX2hhc2gYDSABKAsyLi5zcGFy",
            "ay5jb25uZWN0LkFuYWx5emVQbGFuUmVxdWVzdC5TZW1hbnRpY0hhc2hIABI8",
            "CgdwZXJzaXN0GA4gASgLMikuc3BhcmsuY29ubmVjdC5BbmFseXplUGxhblJl",
            "cXVlc3QuUGVyc2lzdEgAEkAKCXVucGVyc2lzdBgPIAEoCzIrLnNwYXJrLmNv",
            "bm5lY3QuQW5hbHl6ZVBsYW5SZXF1ZXN0LlVucGVyc2lzdEgAEk4KEWdldF9z",
            "dG9yYWdlX2xldmVsGBAgASgLMjEuc3BhcmsuY29ubmVjdC5BbmFseXplUGxh",
            "blJlcXVlc3QuR2V0U3RvcmFnZUxldmVsSAAaKwoGU2NoZW1hEiEKBHBsYW4Y",
            "ASABKAsyEy5zcGFyay5jb25uZWN0LlBsYW4aqAIKB0V4cGxhaW4SIQoEcGxh",
            "bhgBIAEoCzITLnNwYXJrLmNvbm5lY3QuUGxhbhJLCgxleHBsYWluX21vZGUY",
            "AiABKA4yNS5zcGFyay5jb25uZWN0LkFuYWx5emVQbGFuUmVxdWVzdC5FeHBs",
            "YWluLkV4cGxhaW5Nb2RlIqwBCgtFeHBsYWluTW9kZRIcChhFWFBMQUlOX01P",
            "REVfVU5TUEVDSUZJRUQQABIXChNFWFBMQUlOX01PREVfU0lNUExFEAESGQoV",
            "RVhQTEFJTl9NT0RFX0VYVEVOREVEEAISGAoURVhQTEFJTl9NT0RFX0NPREVH",
            "RU4QAxIVChFFWFBMQUlOX01PREVfQ09TVBAEEhoKFkVYUExBSU5fTU9ERV9G",
            "T1JNQVRURUQQBRovCgpUcmVlU3RyaW5nEiEKBHBsYW4YASABKAsyEy5zcGFy",
            "ay5jb25uZWN0LlBsYW4aLAoHSXNMb2NhbBIhCgRwbGFuGAEgASgLMhMuc3Bh",
            "cmsuY29ubmVjdC5QbGFuGjAKC0lzU3RyZWFtaW5nEiEKBHBsYW4YASABKAsy",
            "Ey5zcGFyay5jb25uZWN0LlBsYW4aLwoKSW5wdXRGaWxlcxIhCgRwbGFuGAEg",
            "ASgLMhMuc3BhcmsuY29ubmVjdC5QbGFuGg4KDFNwYXJrVmVyc2lvbhoeCghE",
            "RExQYXJzZRISCgpkZGxfc3RyaW5nGAEgASgJGmIKDVNhbWVTZW1hbnRpY3MS",
            "KAoLdGFyZ2V0X3BsYW4YASABKAsyEy5zcGFyay5jb25uZWN0LlBsYW4SJwoK",
            "b3RoZXJfcGxhbhgCIAEoCzITLnNwYXJrLmNvbm5lY3QuUGxhbhoxCgxTZW1h",
            "bnRpY0hhc2gSIQoEcGxhbhgBIAEoCzITLnNwYXJrLmNvbm5lY3QuUGxhbhp/",
            "CgdQZXJzaXN0EikKCHJlbGF0aW9uGAEgASgLMhcuc3BhcmsuY29ubmVjdC5S",
            "ZWxhdGlvbhI3Cg1zdG9yYWdlX2xldmVsGAIgASgLMhsuc3BhcmsuY29ubmVj",
            "dC5TdG9yYWdlTGV2ZWxIAIgBAUIQCg5fc3RvcmFnZV9sZXZlbBpaCglVbnBl",
            "cnNpc3QSKQoIcmVsYXRpb24YASABKAsyFy5zcGFyay5jb25uZWN0LlJlbGF0",
            "aW9uEhUKCGJsb2NraW5nGAIgASgISACIAQFCCwoJX2Jsb2NraW5nGjwKD0dl",
            "dFN0b3JhZ2VMZXZlbBIpCghyZWxhdGlvbhgBIAEoCzIXLnNwYXJrLmNvbm5l",
            "Y3QuUmVsYXRpb25CCQoHYW5hbHl6ZUIOCgxfY2xpZW50X3R5cGUihgsKE0Fu",
            "YWx5emVQbGFuUmVzcG9uc2USEgoKc2Vzc2lvbl9pZBgBIAEoCRI7CgZzY2hl",
            "bWEYAiABKAsyKS5zcGFyay5jb25uZWN0LkFuYWx5emVQbGFuUmVzcG9uc2Uu",
            "U2NoZW1hSAASPQoHZXhwbGFpbhgDIAEoCzIqLnNwYXJrLmNvbm5lY3QuQW5h",
            "bHl6ZVBsYW5SZXNwb25zZS5FeHBsYWluSAASRAoLdHJlZV9zdHJpbmcYBCAB",
            "KAsyLS5zcGFyay5jb25uZWN0LkFuYWx5emVQbGFuUmVzcG9uc2UuVHJlZVN0",
            "cmluZ0gAEj4KCGlzX2xvY2FsGAUgASgLMiouc3BhcmsuY29ubmVjdC5BbmFs",
            "eXplUGxhblJlc3BvbnNlLklzTG9jYWxIABJGCgxpc19zdHJlYW1pbmcYBiAB",
            "KAsyLi5zcGFyay5jb25uZWN0LkFuYWx5emVQbGFuUmVzcG9uc2UuSXNTdHJl",
            "YW1pbmdIABJECgtpbnB1dF9maWxlcxgHIAEoCzItLnNwYXJrLmNvbm5lY3Qu",
            "QW5hbHl6ZVBsYW5SZXNwb25zZS5JbnB1dEZpbGVzSAASSAoNc3BhcmtfdmVy",
            "c2lvbhgIIAEoCzIvLnNwYXJrLmNvbm5lY3QuQW5hbHl6ZVBsYW5SZXNwb25z",
            "ZS5TcGFya1ZlcnNpb25IABJACglkZGxfcGFyc2UYCSABKAsyKy5zcGFyay5j",
            "b25uZWN0LkFuYWx5emVQbGFuUmVzcG9uc2UuRERMUGFyc2VIABJKCg5zYW1l",
            "X3NlbWFudGljcxgKIAEoCzIwLnNwYXJrLmNvbm5lY3QuQW5hbHl6ZVBsYW5S",
            "ZXNwb25zZS5TYW1lU2VtYW50aWNzSAASSAoNc2VtYW50aWNfaGFzaBgLIAEo",
            "CzIvLnNwYXJrLmNvbm5lY3QuQW5hbHl6ZVBsYW5SZXNwb25zZS5TZW1hbnRp",
            "Y0hhc2hIABI9CgdwZXJzaXN0GAwgASgLMiouc3BhcmsuY29ubmVjdC5BbmFs",
            "eXplUGxhblJlc3BvbnNlLlBlcnNpc3RIABJBCgl1bnBlcnNpc3QYDSABKAsy",
            "LC5zcGFyay5jb25uZWN0LkFuYWx5emVQbGFuUmVzcG9uc2UuVW5wZXJzaXN0",
            "SAASTwoRZ2V0X3N0b3JhZ2VfbGV2ZWwYDiABKAsyMi5zcGFyay5jb25uZWN0",
            "LkFuYWx5emVQbGFuUmVzcG9uc2UuR2V0U3RvcmFnZUxldmVsSAAaMQoGU2No",
            "ZW1hEicKBnNjaGVtYRgBIAEoCzIXLnNwYXJrLmNvbm5lY3QuRGF0YVR5cGUa",
            "IQoHRXhwbGFpbhIWCg5leHBsYWluX3N0cmluZxgBIAEoCRohCgpUcmVlU3Ry",
            "aW5nEhMKC3RyZWVfc3RyaW5nGAEgASgJGhsKB0lzTG9jYWwSEAoIaXNfbG9j",
            "YWwYASABKAgaIwoLSXNTdHJlYW1pbmcSFAoMaXNfc3RyZWFtaW5nGAEgASgI",
            "GhsKCklucHV0RmlsZXMSDQoFZmlsZXMYASADKAkaHwoMU3BhcmtWZXJzaW9u",
            "Eg8KB3ZlcnNpb24YASABKAkaMwoIRERMUGFyc2USJwoGcGFyc2VkGAEgASgL",
            "Mhcuc3BhcmsuY29ubmVjdC5EYXRhVHlwZRofCg1TYW1lU2VtYW50aWNzEg4K",
            "BnJlc3VsdBgBIAEoCBoeCgxTZW1hbnRpY0hhc2gSDgoGcmVzdWx0GAEgASgF",
            "GgkKB1BlcnNpc3QaCwoJVW5wZXJzaXN0GkUKD0dldFN0b3JhZ2VMZXZlbBIy",
            "Cg1zdG9yYWdlX2xldmVsGAEgASgLMhsuc3BhcmsuY29ubmVjdC5TdG9yYWdl",
            "TGV2ZWxCCAoGcmVzdWx0IqcBChJFeGVjdXRlUGxhblJlcXVlc3QSEgoKc2Vz",
            "c2lvbl9pZBgBIAEoCRIwCgx1c2VyX2NvbnRleHQYAiABKAsyGi5zcGFyay5j",
            "b25uZWN0LlVzZXJDb250ZXh0EiEKBHBsYW4YAyABKAsyEy5zcGFyay5jb25u",
            "ZWN0LlBsYW4SGAoLY2xpZW50X3R5cGUYBCABKAlIAIgBAUIOCgxfY2xpZW50",
            "X3R5cGUipwgKE0V4ZWN1dGVQbGFuUmVzcG9uc2USEgoKc2Vzc2lvbl9pZBgB",
            "IAEoCRJECgthcnJvd19iYXRjaBgCIAEoCzItLnNwYXJrLmNvbm5lY3QuRXhl",
            "Y3V0ZVBsYW5SZXNwb25zZS5BcnJvd0JhdGNoSAASUQoSc3FsX2NvbW1hbmRf",
            "cmVzdWx0GAUgASgLMjMuc3BhcmsuY29ubmVjdC5FeGVjdXRlUGxhblJlc3Bv",
            "bnNlLlNxbENvbW1hbmRSZXN1bHRIABIqCglleHRlbnNpb24Y5wcgASgLMhQu",
            "Z29vZ2xlLnByb3RvYnVmLkFueUgAEjsKB21ldHJpY3MYBCABKAsyKi5zcGFy",
            "ay5jb25uZWN0LkV4ZWN1dGVQbGFuUmVzcG9uc2UuTWV0cmljcxJMChBvYnNl",
            "cnZlZF9tZXRyaWNzGAYgAygLMjIuc3BhcmsuY29ubmVjdC5FeGVjdXRlUGxh",
            "blJlc3BvbnNlLk9ic2VydmVkTWV0cmljcxInCgZzY2hlbWEYByABKAsyFy5z",
            "cGFyay5jb25uZWN0LkRhdGFUeXBlGj0KEFNxbENvbW1hbmRSZXN1bHQSKQoI",
            "cmVsYXRpb24YASABKAsyFy5zcGFyay5jb25uZWN0LlJlbGF0aW9uGi0KCkFy",
            "cm93QmF0Y2gSEQoJcm93X2NvdW50GAEgASgDEgwKBGRhdGEYAiABKAwarwMK",
            "B01ldHJpY3MSSAoHbWV0cmljcxgBIAMoCzI3LnNwYXJrLmNvbm5lY3QuRXhl",
            "Y3V0ZVBsYW5SZXNwb25zZS5NZXRyaWNzLk1ldHJpY09iamVjdBqYAgoMTWV0",
            "cmljT2JqZWN0EgwKBG5hbWUYASABKAkSDwoHcGxhbl9pZBgCIAEoAxIOCgZw",
            "YXJlbnQYAyABKAMSaAoRZXhlY3V0aW9uX21ldHJpY3MYBCADKAsyTS5zcGFy",
            "ay5jb25uZWN0LkV4ZWN1dGVQbGFuUmVzcG9uc2UuTWV0cmljcy5NZXRyaWNP",
            "YmplY3QuRXhlY3V0aW9uTWV0cmljc0VudHJ5Gm8KFUV4ZWN1dGlvbk1ldHJp",
            "Y3NFbnRyeRILCgNrZXkYASABKAkSRQoFdmFsdWUYAiABKAsyNi5zcGFyay5j",
            "b25uZWN0LkV4ZWN1dGVQbGFuUmVzcG9uc2UuTWV0cmljcy5NZXRyaWNWYWx1",
            "ZToCOAEaPwoLTWV0cmljVmFsdWUSDAoEbmFtZRgBIAEoCRINCgV2YWx1ZRgC",
            "IAEoAxITCgttZXRyaWNfdHlwZRgDIAEoCRpSCg9PYnNlcnZlZE1ldHJpY3MS",
            "DAoEbmFtZRgBIAEoCRIxCgZ2YWx1ZXMYAiADKAsyIS5zcGFyay5jb25uZWN0",
            "LkV4cHJlc3Npb24uTGl0ZXJhbEIPCg1yZXNwb25zZV90eXBlIjUKCEtleVZh",
            "bHVlEgsKA2tleRgBIAEoCRISCgV2YWx1ZRgCIAEoCUgAiAEBQggKBl92YWx1",
            "ZSLlBgoNQ29uZmlnUmVxdWVzdBISCgpzZXNzaW9uX2lkGAEgASgJEjAKDHVz",
            "ZXJfY29udGV4dBgCIAEoCzIaLnNwYXJrLmNvbm5lY3QuVXNlckNvbnRleHQS",
            "OQoJb3BlcmF0aW9uGAMgASgLMiYuc3BhcmsuY29ubmVjdC5Db25maWdSZXF1",
            "ZXN0Lk9wZXJhdGlvbhIYCgtjbGllbnRfdHlwZRgEIAEoCUgAiAEBGrADCglP",
            "cGVyYXRpb24SLwoDc2V0GAEgASgLMiAuc3BhcmsuY29ubmVjdC5Db25maWdS",
            "ZXF1ZXN0LlNldEgAEi8KA2dldBgCIAEoCzIgLnNwYXJrLmNvbm5lY3QuQ29u",
            "ZmlnUmVxdWVzdC5HZXRIABJHChBnZXRfd2l0aF9kZWZhdWx0GAMgASgLMisu",
            "c3BhcmsuY29ubmVjdC5Db25maWdSZXF1ZXN0LkdldFdpdGhEZWZhdWx0SAAS",
            "PAoKZ2V0X29wdGlvbhgEIAEoCzImLnNwYXJrLmNvbm5lY3QuQ29uZmlnUmVx",
            "dWVzdC5HZXRPcHRpb25IABI2CgdnZXRfYWxsGAUgASgLMiMuc3BhcmsuY29u",
            "bmVjdC5Db25maWdSZXF1ZXN0LkdldEFsbEgAEjMKBXVuc2V0GAYgASgLMiIu",
            "c3BhcmsuY29ubmVjdC5Db25maWdSZXF1ZXN0LlVuc2V0SAASQgoNaXNfbW9k",
            "aWZpYWJsZRgHIAEoCzIpLnNwYXJrLmNvbm5lY3QuQ29uZmlnUmVxdWVzdC5J",
            "c01vZGlmaWFibGVIAEIJCgdvcF90eXBlGi0KA1NldBImCgVwYWlycxgBIAMo",
            "CzIXLnNwYXJrLmNvbm5lY3QuS2V5VmFsdWUaEwoDR2V0EgwKBGtleXMYASAD",
            "KAkaOAoOR2V0V2l0aERlZmF1bHQSJgoFcGFpcnMYASADKAsyFy5zcGFyay5j",
            "b25uZWN0LktleVZhbHVlGhkKCUdldE9wdGlvbhIMCgRrZXlzGAEgAygJGigK",
            "BkdldEFsbBITCgZwcmVmaXgYASABKAlIAIgBAUIJCgdfcHJlZml4GhUKBVVu",
            "c2V0EgwKBGtleXMYASADKAkaHAoMSXNNb2RpZmlhYmxlEgwKBGtleXMYASAD",
            "KAlCDgoMX2NsaWVudF90eXBlIl4KDkNvbmZpZ1Jlc3BvbnNlEhIKCnNlc3Np",
            "b25faWQYASABKAkSJgoFcGFpcnMYAiADKAsyFy5zcGFyay5jb25uZWN0Lktl",
            "eVZhbHVlEhAKCHdhcm5pbmdzGAMgAygJItwFChNBZGRBcnRpZmFjdHNSZXF1",
            "ZXN0EhIKCnNlc3Npb25faWQYASABKAkSMAoMdXNlcl9jb250ZXh0GAIgASgL",
            "Mhouc3BhcmsuY29ubmVjdC5Vc2VyQ29udGV4dBIYCgtjbGllbnRfdHlwZRgG",
            "IAEoCUgBiAEBEjkKBWJhdGNoGAMgASgLMiguc3BhcmsuY29ubmVjdC5BZGRB",
            "cnRpZmFjdHNSZXF1ZXN0LkJhdGNoSAASTgoLYmVnaW5fY2h1bmsYBCABKAsy",
            "Ny5zcGFyay5jb25uZWN0LkFkZEFydGlmYWN0c1JlcXVlc3QuQmVnaW5DaHVu",
            "a2VkQXJ0aWZhY3RIABJBCgVjaHVuaxgFIAEoCzIwLnNwYXJrLmNvbm5lY3Qu",
            "QWRkQXJ0aWZhY3RzUmVxdWVzdC5BcnRpZmFjdENodW5rSAAaKgoNQXJ0aWZh",
            "Y3RDaHVuaxIMCgRkYXRhGAEgASgMEgsKA2NyYxgCIAEoAxpjChNTaW5nbGVD",
            "aHVua0FydGlmYWN0EgwKBG5hbWUYASABKAkSPgoEZGF0YRgCIAEoCzIwLnNw",
            "YXJrLmNvbm5lY3QuQWRkQXJ0aWZhY3RzUmVxdWVzdC5BcnRpZmFjdENodW5r",
            "GlIKBUJhdGNoEkkKCWFydGlmYWN0cxgBIAMoCzI2LnNwYXJrLmNvbm5lY3Qu",
            "QWRkQXJ0aWZhY3RzUmVxdWVzdC5TaW5nbGVDaHVua0FydGlmYWN0GpYBChRC",
            "ZWdpbkNodW5rZWRBcnRpZmFjdBIMCgRuYW1lGAEgASgJEhMKC3RvdGFsX2J5",
            "dGVzGAIgASgDEhIKCm51bV9jaHVua3MYAyABKAMSRwoNaW5pdGlhbF9jaHVu",
            "axgEIAEoCzIwLnNwYXJrLmNvbm5lY3QuQWRkQXJ0aWZhY3RzUmVxdWVzdC5B",
            "cnRpZmFjdENodW5rQgkKB3BheWxvYWRCDgoMX2NsaWVudF90eXBlIpoBChRB",
            "ZGRBcnRpZmFjdHNSZXNwb25zZRJGCglhcnRpZmFjdHMYASADKAsyMy5zcGFy",
            "ay5jb25uZWN0LkFkZEFydGlmYWN0c1Jlc3BvbnNlLkFydGlmYWN0U3VtbWFy",
            "eRo6Cg9BcnRpZmFjdFN1bW1hcnkSDAoEbmFtZRgBIAEoCRIZChFpc19jcmNf",
            "c3VjY2Vzc2Z1bBgCIAEoCDLtAgoTU3BhcmtDb25uZWN0U2VydmljZRJYCgtF",
            "eGVjdXRlUGxhbhIhLnNwYXJrLmNvbm5lY3QuRXhlY3V0ZVBsYW5SZXF1ZXN0",
            "GiIuc3BhcmsuY29ubmVjdC5FeGVjdXRlUGxhblJlc3BvbnNlIgAwARJWCgtB",
            "bmFseXplUGxhbhIhLnNwYXJrLmNvbm5lY3QuQW5hbHl6ZVBsYW5SZXF1ZXN0",
            "GiIuc3BhcmsuY29ubmVjdC5BbmFseXplUGxhblJlc3BvbnNlIgASRwoGQ29u",
            "ZmlnEhwuc3BhcmsuY29ubmVjdC5Db25maWdSZXF1ZXN0Gh0uc3BhcmsuY29u",
            "bmVjdC5Db25maWdSZXNwb25zZSIAElsKDEFkZEFydGlmYWN0cxIiLnNwYXJr",
            "LmNvbm5lY3QuQWRkQXJ0aWZhY3RzUmVxdWVzdBojLnNwYXJrLmNvbm5lY3Qu",
            "QWRkQXJ0aWZhY3RzUmVzcG9uc2UiACgBQiIKHm9yZy5hcGFjaGUuc3Bhcmsu",
            "Y29ubmVjdC5wcm90b1ABYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Spark.Connect.CommandsReflection.Descriptor, global::Spark.Connect.CommonReflection.Descriptor, global::Spark.Connect.ExpressionsReflection.Descriptor, global::Spark.Connect.RelationsReflection.Descriptor, global::Spark.Connect.TypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.Plan), global::Spark.Connect.Plan.Parser, new[]{ "Root", "Command" }, new[]{ "OpType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.UserContext), global::Spark.Connect.UserContext.Parser, new[]{ "UserId", "UserName", "Extensions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanRequest), global::Spark.Connect.AnalyzePlanRequest.Parser, new[]{ "SessionId", "UserContext", "ClientType", "Schema", "Explain", "TreeString", "IsLocal", "IsStreaming", "InputFiles", "SparkVersion", "DdlParse", "SameSemantics", "SemanticHash", "Persist", "Unpersist", "GetStorageLevel" }, new[]{ "Analyze", "ClientType" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanRequest.Types.Schema), global::Spark.Connect.AnalyzePlanRequest.Types.Schema.Parser, new[]{ "Plan" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanRequest.Types.Explain), global::Spark.Connect.AnalyzePlanRequest.Types.Explain.Parser, new[]{ "Plan", "ExplainMode" }, null, new[]{ typeof(global::Spark.Connect.AnalyzePlanRequest.Types.Explain.Types.ExplainMode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanRequest.Types.TreeString), global::Spark.Connect.AnalyzePlanRequest.Types.TreeString.Parser, new[]{ "Plan" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanRequest.Types.IsLocal), global::Spark.Connect.AnalyzePlanRequest.Types.IsLocal.Parser, new[]{ "Plan" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanRequest.Types.IsStreaming), global::Spark.Connect.AnalyzePlanRequest.Types.IsStreaming.Parser, new[]{ "Plan" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanRequest.Types.InputFiles), global::Spark.Connect.AnalyzePlanRequest.Types.InputFiles.Parser, new[]{ "Plan" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanRequest.Types.SparkVersion), global::Spark.Connect.AnalyzePlanRequest.Types.SparkVersion.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanRequest.Types.DDLParse), global::Spark.Connect.AnalyzePlanRequest.Types.DDLParse.Parser, new[]{ "DdlString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanRequest.Types.SameSemantics), global::Spark.Connect.AnalyzePlanRequest.Types.SameSemantics.Parser, new[]{ "TargetPlan", "OtherPlan" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanRequest.Types.SemanticHash), global::Spark.Connect.AnalyzePlanRequest.Types.SemanticHash.Parser, new[]{ "Plan" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanRequest.Types.Persist), global::Spark.Connect.AnalyzePlanRequest.Types.Persist.Parser, new[]{ "Relation", "StorageLevel" }, new[]{ "StorageLevel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanRequest.Types.Unpersist), global::Spark.Connect.AnalyzePlanRequest.Types.Unpersist.Parser, new[]{ "Relation", "Blocking" }, new[]{ "Blocking" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanRequest.Types.GetStorageLevel), global::Spark.Connect.AnalyzePlanRequest.Types.GetStorageLevel.Parser, new[]{ "Relation" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanResponse), global::Spark.Connect.AnalyzePlanResponse.Parser, new[]{ "SessionId", "Schema", "Explain", "TreeString", "IsLocal", "IsStreaming", "InputFiles", "SparkVersion", "DdlParse", "SameSemantics", "SemanticHash", "Persist", "Unpersist", "GetStorageLevel" }, new[]{ "Result" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanResponse.Types.Schema), global::Spark.Connect.AnalyzePlanResponse.Types.Schema.Parser, new[]{ "Schema_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanResponse.Types.Explain), global::Spark.Connect.AnalyzePlanResponse.Types.Explain.Parser, new[]{ "ExplainString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanResponse.Types.TreeString), global::Spark.Connect.AnalyzePlanResponse.Types.TreeString.Parser, new[]{ "TreeString_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanResponse.Types.IsLocal), global::Spark.Connect.AnalyzePlanResponse.Types.IsLocal.Parser, new[]{ "IsLocal_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanResponse.Types.IsStreaming), global::Spark.Connect.AnalyzePlanResponse.Types.IsStreaming.Parser, new[]{ "IsStreaming_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanResponse.Types.InputFiles), global::Spark.Connect.AnalyzePlanResponse.Types.InputFiles.Parser, new[]{ "Files" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanResponse.Types.SparkVersion), global::Spark.Connect.AnalyzePlanResponse.Types.SparkVersion.Parser, new[]{ "Version" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanResponse.Types.DDLParse), global::Spark.Connect.AnalyzePlanResponse.Types.DDLParse.Parser, new[]{ "Parsed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanResponse.Types.SameSemantics), global::Spark.Connect.AnalyzePlanResponse.Types.SameSemantics.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanResponse.Types.SemanticHash), global::Spark.Connect.AnalyzePlanResponse.Types.SemanticHash.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanResponse.Types.Persist), global::Spark.Connect.AnalyzePlanResponse.Types.Persist.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanResponse.Types.Unpersist), global::Spark.Connect.AnalyzePlanResponse.Types.Unpersist.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AnalyzePlanResponse.Types.GetStorageLevel), global::Spark.Connect.AnalyzePlanResponse.Types.GetStorageLevel.Parser, new[]{ "StorageLevel" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.ExecutePlanRequest), global::Spark.Connect.ExecutePlanRequest.Parser, new[]{ "SessionId", "UserContext", "Plan", "ClientType" }, new[]{ "ClientType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.ExecutePlanResponse), global::Spark.Connect.ExecutePlanResponse.Parser, new[]{ "SessionId", "ArrowBatch", "SqlCommandResult", "Extension", "Metrics", "ObservedMetrics", "Schema" }, new[]{ "ResponseType" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.ExecutePlanResponse.Types.SqlCommandResult), global::Spark.Connect.ExecutePlanResponse.Types.SqlCommandResult.Parser, new[]{ "Relation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.ExecutePlanResponse.Types.ArrowBatch), global::Spark.Connect.ExecutePlanResponse.Types.ArrowBatch.Parser, new[]{ "RowCount", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.ExecutePlanResponse.Types.Metrics), global::Spark.Connect.ExecutePlanResponse.Types.Metrics.Parser, new[]{ "Metrics_" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.ExecutePlanResponse.Types.Metrics.Types.MetricObject), global::Spark.Connect.ExecutePlanResponse.Types.Metrics.Types.MetricObject.Parser, new[]{ "Name", "PlanId", "Parent", "ExecutionMetrics" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.ExecutePlanResponse.Types.Metrics.Types.MetricValue), global::Spark.Connect.ExecutePlanResponse.Types.Metrics.Types.MetricValue.Parser, new[]{ "Name", "Value", "MetricType" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.ExecutePlanResponse.Types.ObservedMetrics), global::Spark.Connect.ExecutePlanResponse.Types.ObservedMetrics.Parser, new[]{ "Name", "Values" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.KeyValue), global::Spark.Connect.KeyValue.Parser, new[]{ "Key", "Value" }, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.ConfigRequest), global::Spark.Connect.ConfigRequest.Parser, new[]{ "SessionId", "UserContext", "Operation", "ClientType" }, new[]{ "ClientType" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.ConfigRequest.Types.Operation), global::Spark.Connect.ConfigRequest.Types.Operation.Parser, new[]{ "Set", "Get", "GetWithDefault", "GetOption", "GetAll", "Unset", "IsModifiable" }, new[]{ "OpType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.ConfigRequest.Types.Set), global::Spark.Connect.ConfigRequest.Types.Set.Parser, new[]{ "Pairs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.ConfigRequest.Types.Get), global::Spark.Connect.ConfigRequest.Types.Get.Parser, new[]{ "Keys" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.ConfigRequest.Types.GetWithDefault), global::Spark.Connect.ConfigRequest.Types.GetWithDefault.Parser, new[]{ "Pairs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.ConfigRequest.Types.GetOption), global::Spark.Connect.ConfigRequest.Types.GetOption.Parser, new[]{ "Keys" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.ConfigRequest.Types.GetAll), global::Spark.Connect.ConfigRequest.Types.GetAll.Parser, new[]{ "Prefix" }, new[]{ "Prefix" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.ConfigRequest.Types.Unset), global::Spark.Connect.ConfigRequest.Types.Unset.Parser, new[]{ "Keys" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.ConfigRequest.Types.IsModifiable), global::Spark.Connect.ConfigRequest.Types.IsModifiable.Parser, new[]{ "Keys" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.ConfigResponse), global::Spark.Connect.ConfigResponse.Parser, new[]{ "SessionId", "Pairs", "Warnings" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AddArtifactsRequest), global::Spark.Connect.AddArtifactsRequest.Parser, new[]{ "SessionId", "UserContext", "ClientType", "Batch", "BeginChunk", "Chunk" }, new[]{ "Payload", "ClientType" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AddArtifactsRequest.Types.ArtifactChunk), global::Spark.Connect.AddArtifactsRequest.Types.ArtifactChunk.Parser, new[]{ "Data", "Crc" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AddArtifactsRequest.Types.SingleChunkArtifact), global::Spark.Connect.AddArtifactsRequest.Types.SingleChunkArtifact.Parser, new[]{ "Name", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AddArtifactsRequest.Types.Batch), global::Spark.Connect.AddArtifactsRequest.Types.Batch.Parser, new[]{ "Artifacts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AddArtifactsRequest.Types.BeginChunkedArtifact), global::Spark.Connect.AddArtifactsRequest.Types.BeginChunkedArtifact.Parser, new[]{ "Name", "TotalBytes", "NumChunks", "InitialChunk" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AddArtifactsResponse), global::Spark.Connect.AddArtifactsResponse.Parser, new[]{ "Artifacts" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.AddArtifactsResponse.Types.ArtifactSummary), global::Spark.Connect.AddArtifactsResponse.Types.ArtifactSummary.Parser, new[]{ "Name", "IsCrcSuccessful" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A [[Plan]] is the structure that carries the runtime information for the execution from the
  /// client to the server. A [[Plan]] can either be of the type [[Relation]] which is a reference
  /// to the underlying logical plan or it can be of the [[Command]] type that is used to execute
  /// commands on the server.
  /// </summary>
  public sealed partial class Plan : pb::IMessage<Plan>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Plan> _parser = new pb::MessageParser<Plan>(() => new Plan());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Plan> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spark.Connect.BaseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Plan() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Plan(Plan other) : this() {
      switch (other.OpTypeCase) {
        case OpTypeOneofCase.Root:
          Root = other.Root.Clone();
          break;
        case OpTypeOneofCase.Command:
          Command = other.Command.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Plan Clone() {
      return new Plan(this);
    }

    /// <summary>Field number for the "root" field.</summary>
    public const int RootFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.Relation Root {
      get { return opTypeCase_ == OpTypeOneofCase.Root ? (global::Spark.Connect.Relation) opType_ : null; }
      set {
        opType_ = value;
        opTypeCase_ = value == null ? OpTypeOneofCase.None : OpTypeOneofCase.Root;
      }
    }

    /// <summary>Field number for the "command" field.</summary>
    public const int CommandFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.Command Command {
      get { return opTypeCase_ == OpTypeOneofCase.Command ? (global::Spark.Connect.Command) opType_ : null; }
      set {
        opType_ = value;
        opTypeCase_ = value == null ? OpTypeOneofCase.None : OpTypeOneofCase.Command;
      }
    }

    private object opType_;
    /// <summary>Enum of possible cases for the "op_type" oneof.</summary>
    public enum OpTypeOneofCase {
      None = 0,
      Root = 1,
      Command = 2,
    }
    private OpTypeOneofCase opTypeCase_ = OpTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OpTypeOneofCase OpTypeCase {
      get { return opTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOpType() {
      opTypeCase_ = OpTypeOneofCase.None;
      opType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Plan);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Plan other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Root, other.Root)) return false;
      if (!object.Equals(Command, other.Command)) return false;
      if (OpTypeCase != other.OpTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (opTypeCase_ == OpTypeOneofCase.Root) hash ^= Root.GetHashCode();
      if (opTypeCase_ == OpTypeOneofCase.Command) hash ^= Command.GetHashCode();
      hash ^= (int) opTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (opTypeCase_ == OpTypeOneofCase.Root) {
        output.WriteRawTag(10);
        output.WriteMessage(Root);
      }
      if (opTypeCase_ == OpTypeOneofCase.Command) {
        output.WriteRawTag(18);
        output.WriteMessage(Command);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (opTypeCase_ == OpTypeOneofCase.Root) {
        output.WriteRawTag(10);
        output.WriteMessage(Root);
      }
      if (opTypeCase_ == OpTypeOneofCase.Command) {
        output.WriteRawTag(18);
        output.WriteMessage(Command);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (opTypeCase_ == OpTypeOneofCase.Root) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Root);
      }
      if (opTypeCase_ == OpTypeOneofCase.Command) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Command);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Plan other) {
      if (other == null) {
        return;
      }
      switch (other.OpTypeCase) {
        case OpTypeOneofCase.Root:
          if (Root == null) {
            Root = new global::Spark.Connect.Relation();
          }
          Root.MergeFrom(other.Root);
          break;
        case OpTypeOneofCase.Command:
          if (Command == null) {
            Command = new global::Spark.Connect.Command();
          }
          Command.MergeFrom(other.Command);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Spark.Connect.Relation subBuilder = new global::Spark.Connect.Relation();
            if (opTypeCase_ == OpTypeOneofCase.Root) {
              subBuilder.MergeFrom(Root);
            }
            input.ReadMessage(subBuilder);
            Root = subBuilder;
            break;
          }
          case 18: {
            global::Spark.Connect.Command subBuilder = new global::Spark.Connect.Command();
            if (opTypeCase_ == OpTypeOneofCase.Command) {
              subBuilder.MergeFrom(Command);
            }
            input.ReadMessage(subBuilder);
            Command = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Spark.Connect.Relation subBuilder = new global::Spark.Connect.Relation();
            if (opTypeCase_ == OpTypeOneofCase.Root) {
              subBuilder.MergeFrom(Root);
            }
            input.ReadMessage(subBuilder);
            Root = subBuilder;
            break;
          }
          case 18: {
            global::Spark.Connect.Command subBuilder = new global::Spark.Connect.Command();
            if (opTypeCase_ == OpTypeOneofCase.Command) {
              subBuilder.MergeFrom(Command);
            }
            input.ReadMessage(subBuilder);
            Command = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// User Context is used to refer to one particular user session that is executing
  /// queries in the backend.
  /// </summary>
  public sealed partial class UserContext : pb::IMessage<UserContext>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserContext> _parser = new pb::MessageParser<UserContext>(() => new UserContext());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserContext> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spark.Connect.BaseReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserContext() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserContext(UserContext other) : this() {
      userId_ = other.userId_;
      userName_ = other.userName_;
      extensions_ = other.extensions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserContext Clone() {
      return new UserContext(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_name" field.</summary>
    public const int UserNameFieldNumber = 2;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extensions" field.</summary>
    public const int ExtensionsFieldNumber = 999;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_extensions_codec
        = pb::FieldCodec.ForMessage(7994, global::Google.Protobuf.WellKnownTypes.Any.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> extensions_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
    /// <summary>
    /// To extend the existing user context message that is used to identify incoming requests,
    /// Spark Connect leverages the Any protobuf type that can be used to inject arbitrary other
    /// messages into this message. Extensions are stored as a `repeated` type to be able to
    /// handle multiple active extensions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Extensions {
      get { return extensions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserContext);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserContext other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (UserName != other.UserName) return false;
      if(!extensions_.Equals(other.extensions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      hash ^= extensions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      extensions_.WriteTo(output, _repeated_extensions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      extensions_.WriteTo(ref output, _repeated_extensions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      size += extensions_.CalculateSize(_repeated_extensions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserContext other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      extensions_.Add(other.extensions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 7994: {
            extensions_.AddEntriesFrom(input, _repeated_extensions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 7994: {
            extensions_.AddEntriesFrom(ref input, _repeated_extensions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request to perform plan analyze, optionally to explain the plan.
  /// </summary>
  public sealed partial class AnalyzePlanRequest : pb::IMessage<AnalyzePlanRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnalyzePlanRequest> _parser = new pb::MessageParser<AnalyzePlanRequest>(() => new AnalyzePlanRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnalyzePlanRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spark.Connect.BaseReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyzePlanRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyzePlanRequest(AnalyzePlanRequest other) : this() {
      sessionId_ = other.sessionId_;
      userContext_ = other.userContext_ != null ? other.userContext_.Clone() : null;
      clientType_ = other.clientType_;
      switch (other.AnalyzeCase) {
        case AnalyzeOneofCase.Schema:
          Schema = other.Schema.Clone();
          break;
        case AnalyzeOneofCase.Explain:
          Explain = other.Explain.Clone();
          break;
        case AnalyzeOneofCase.TreeString:
          TreeString = other.TreeString.Clone();
          break;
        case AnalyzeOneofCase.IsLocal:
          IsLocal = other.IsLocal.Clone();
          break;
        case AnalyzeOneofCase.IsStreaming:
          IsStreaming = other.IsStreaming.Clone();
          break;
        case AnalyzeOneofCase.InputFiles:
          InputFiles = other.InputFiles.Clone();
          break;
        case AnalyzeOneofCase.SparkVersion:
          SparkVersion = other.SparkVersion.Clone();
          break;
        case AnalyzeOneofCase.DdlParse:
          DdlParse = other.DdlParse.Clone();
          break;
        case AnalyzeOneofCase.SameSemantics:
          SameSemantics = other.SameSemantics.Clone();
          break;
        case AnalyzeOneofCase.SemanticHash:
          SemanticHash = other.SemanticHash.Clone();
          break;
        case AnalyzeOneofCase.Persist:
          Persist = other.Persist.Clone();
          break;
        case AnalyzeOneofCase.Unpersist:
          Unpersist = other.Unpersist.Clone();
          break;
        case AnalyzeOneofCase.GetStorageLevel:
          GetStorageLevel = other.GetStorageLevel.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyzePlanRequest Clone() {
      return new AnalyzePlanRequest(this);
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private string sessionId_ = "";
    /// <summary>
    /// (Required)
    ///
    /// The session_id specifies a spark session for a user id (which is specified
    /// by user_context.user_id). The session_id is set by the client to be able to
    /// collate streaming responses from different queries within the dedicated session.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_context" field.</summary>
    public const int UserContextFieldNumber = 2;
    private global::Spark.Connect.UserContext userContext_;
    /// <summary>
    /// (Required) User context
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.UserContext UserContext {
      get { return userContext_; }
      set {
        userContext_ = value;
      }
    }

    /// <summary>Field number for the "client_type" field.</summary>
    public const int ClientTypeFieldNumber = 3;
    private readonly static string ClientTypeDefaultValue = "";

    private string clientType_;
    /// <summary>
    /// Provides optional information about the client sending the request. This field
    /// can be used for language or version specific information and is only intended for
    /// logging purposes and will not be interpreted by the server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientType {
      get { return clientType_ ?? ClientTypeDefaultValue; }
      set {
        clientType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "client_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientType {
      get { return clientType_ != null; }
    }
    /// <summary>Clears the value of the "client_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientType() {
      clientType_ = null;
    }

    /// <summary>Field number for the "schema" field.</summary>
    public const int SchemaFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanRequest.Types.Schema Schema {
      get { return analyzeCase_ == AnalyzeOneofCase.Schema ? (global::Spark.Connect.AnalyzePlanRequest.Types.Schema) analyze_ : null; }
      set {
        analyze_ = value;
        analyzeCase_ = value == null ? AnalyzeOneofCase.None : AnalyzeOneofCase.Schema;
      }
    }

    /// <summary>Field number for the "explain" field.</summary>
    public const int ExplainFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanRequest.Types.Explain Explain {
      get { return analyzeCase_ == AnalyzeOneofCase.Explain ? (global::Spark.Connect.AnalyzePlanRequest.Types.Explain) analyze_ : null; }
      set {
        analyze_ = value;
        analyzeCase_ = value == null ? AnalyzeOneofCase.None : AnalyzeOneofCase.Explain;
      }
    }

    /// <summary>Field number for the "tree_string" field.</summary>
    public const int TreeStringFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanRequest.Types.TreeString TreeString {
      get { return analyzeCase_ == AnalyzeOneofCase.TreeString ? (global::Spark.Connect.AnalyzePlanRequest.Types.TreeString) analyze_ : null; }
      set {
        analyze_ = value;
        analyzeCase_ = value == null ? AnalyzeOneofCase.None : AnalyzeOneofCase.TreeString;
      }
    }

    /// <summary>Field number for the "is_local" field.</summary>
    public const int IsLocalFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanRequest.Types.IsLocal IsLocal {
      get { return analyzeCase_ == AnalyzeOneofCase.IsLocal ? (global::Spark.Connect.AnalyzePlanRequest.Types.IsLocal) analyze_ : null; }
      set {
        analyze_ = value;
        analyzeCase_ = value == null ? AnalyzeOneofCase.None : AnalyzeOneofCase.IsLocal;
      }
    }

    /// <summary>Field number for the "is_streaming" field.</summary>
    public const int IsStreamingFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanRequest.Types.IsStreaming IsStreaming {
      get { return analyzeCase_ == AnalyzeOneofCase.IsStreaming ? (global::Spark.Connect.AnalyzePlanRequest.Types.IsStreaming) analyze_ : null; }
      set {
        analyze_ = value;
        analyzeCase_ = value == null ? AnalyzeOneofCase.None : AnalyzeOneofCase.IsStreaming;
      }
    }

    /// <summary>Field number for the "input_files" field.</summary>
    public const int InputFilesFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanRequest.Types.InputFiles InputFiles {
      get { return analyzeCase_ == AnalyzeOneofCase.InputFiles ? (global::Spark.Connect.AnalyzePlanRequest.Types.InputFiles) analyze_ : null; }
      set {
        analyze_ = value;
        analyzeCase_ = value == null ? AnalyzeOneofCase.None : AnalyzeOneofCase.InputFiles;
      }
    }

    /// <summary>Field number for the "spark_version" field.</summary>
    public const int SparkVersionFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanRequest.Types.SparkVersion SparkVersion {
      get { return analyzeCase_ == AnalyzeOneofCase.SparkVersion ? (global::Spark.Connect.AnalyzePlanRequest.Types.SparkVersion) analyze_ : null; }
      set {
        analyze_ = value;
        analyzeCase_ = value == null ? AnalyzeOneofCase.None : AnalyzeOneofCase.SparkVersion;
      }
    }

    /// <summary>Field number for the "ddl_parse" field.</summary>
    public const int DdlParseFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanRequest.Types.DDLParse DdlParse {
      get { return analyzeCase_ == AnalyzeOneofCase.DdlParse ? (global::Spark.Connect.AnalyzePlanRequest.Types.DDLParse) analyze_ : null; }
      set {
        analyze_ = value;
        analyzeCase_ = value == null ? AnalyzeOneofCase.None : AnalyzeOneofCase.DdlParse;
      }
    }

    /// <summary>Field number for the "same_semantics" field.</summary>
    public const int SameSemanticsFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanRequest.Types.SameSemantics SameSemantics {
      get { return analyzeCase_ == AnalyzeOneofCase.SameSemantics ? (global::Spark.Connect.AnalyzePlanRequest.Types.SameSemantics) analyze_ : null; }
      set {
        analyze_ = value;
        analyzeCase_ = value == null ? AnalyzeOneofCase.None : AnalyzeOneofCase.SameSemantics;
      }
    }

    /// <summary>Field number for the "semantic_hash" field.</summary>
    public const int SemanticHashFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanRequest.Types.SemanticHash SemanticHash {
      get { return analyzeCase_ == AnalyzeOneofCase.SemanticHash ? (global::Spark.Connect.AnalyzePlanRequest.Types.SemanticHash) analyze_ : null; }
      set {
        analyze_ = value;
        analyzeCase_ = value == null ? AnalyzeOneofCase.None : AnalyzeOneofCase.SemanticHash;
      }
    }

    /// <summary>Field number for the "persist" field.</summary>
    public const int PersistFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanRequest.Types.Persist Persist {
      get { return analyzeCase_ == AnalyzeOneofCase.Persist ? (global::Spark.Connect.AnalyzePlanRequest.Types.Persist) analyze_ : null; }
      set {
        analyze_ = value;
        analyzeCase_ = value == null ? AnalyzeOneofCase.None : AnalyzeOneofCase.Persist;
      }
    }

    /// <summary>Field number for the "unpersist" field.</summary>
    public const int UnpersistFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanRequest.Types.Unpersist Unpersist {
      get { return analyzeCase_ == AnalyzeOneofCase.Unpersist ? (global::Spark.Connect.AnalyzePlanRequest.Types.Unpersist) analyze_ : null; }
      set {
        analyze_ = value;
        analyzeCase_ = value == null ? AnalyzeOneofCase.None : AnalyzeOneofCase.Unpersist;
      }
    }

    /// <summary>Field number for the "get_storage_level" field.</summary>
    public const int GetStorageLevelFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanRequest.Types.GetStorageLevel GetStorageLevel {
      get { return analyzeCase_ == AnalyzeOneofCase.GetStorageLevel ? (global::Spark.Connect.AnalyzePlanRequest.Types.GetStorageLevel) analyze_ : null; }
      set {
        analyze_ = value;
        analyzeCase_ = value == null ? AnalyzeOneofCase.None : AnalyzeOneofCase.GetStorageLevel;
      }
    }

    private object analyze_;
    /// <summary>Enum of possible cases for the "analyze" oneof.</summary>
    public enum AnalyzeOneofCase {
      None = 0,
      Schema = 4,
      Explain = 5,
      TreeString = 6,
      IsLocal = 7,
      IsStreaming = 8,
      InputFiles = 9,
      SparkVersion = 10,
      DdlParse = 11,
      SameSemantics = 12,
      SemanticHash = 13,
      Persist = 14,
      Unpersist = 15,
      GetStorageLevel = 16,
    }
    private AnalyzeOneofCase analyzeCase_ = AnalyzeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyzeOneofCase AnalyzeCase {
      get { return analyzeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAnalyze() {
      analyzeCase_ = AnalyzeOneofCase.None;
      analyze_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnalyzePlanRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnalyzePlanRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (!object.Equals(UserContext, other.UserContext)) return false;
      if (ClientType != other.ClientType) return false;
      if (!object.Equals(Schema, other.Schema)) return false;
      if (!object.Equals(Explain, other.Explain)) return false;
      if (!object.Equals(TreeString, other.TreeString)) return false;
      if (!object.Equals(IsLocal, other.IsLocal)) return false;
      if (!object.Equals(IsStreaming, other.IsStreaming)) return false;
      if (!object.Equals(InputFiles, other.InputFiles)) return false;
      if (!object.Equals(SparkVersion, other.SparkVersion)) return false;
      if (!object.Equals(DdlParse, other.DdlParse)) return false;
      if (!object.Equals(SameSemantics, other.SameSemantics)) return false;
      if (!object.Equals(SemanticHash, other.SemanticHash)) return false;
      if (!object.Equals(Persist, other.Persist)) return false;
      if (!object.Equals(Unpersist, other.Unpersist)) return false;
      if (!object.Equals(GetStorageLevel, other.GetStorageLevel)) return false;
      if (AnalyzeCase != other.AnalyzeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (userContext_ != null) hash ^= UserContext.GetHashCode();
      if (HasClientType) hash ^= ClientType.GetHashCode();
      if (analyzeCase_ == AnalyzeOneofCase.Schema) hash ^= Schema.GetHashCode();
      if (analyzeCase_ == AnalyzeOneofCase.Explain) hash ^= Explain.GetHashCode();
      if (analyzeCase_ == AnalyzeOneofCase.TreeString) hash ^= TreeString.GetHashCode();
      if (analyzeCase_ == AnalyzeOneofCase.IsLocal) hash ^= IsLocal.GetHashCode();
      if (analyzeCase_ == AnalyzeOneofCase.IsStreaming) hash ^= IsStreaming.GetHashCode();
      if (analyzeCase_ == AnalyzeOneofCase.InputFiles) hash ^= InputFiles.GetHashCode();
      if (analyzeCase_ == AnalyzeOneofCase.SparkVersion) hash ^= SparkVersion.GetHashCode();
      if (analyzeCase_ == AnalyzeOneofCase.DdlParse) hash ^= DdlParse.GetHashCode();
      if (analyzeCase_ == AnalyzeOneofCase.SameSemantics) hash ^= SameSemantics.GetHashCode();
      if (analyzeCase_ == AnalyzeOneofCase.SemanticHash) hash ^= SemanticHash.GetHashCode();
      if (analyzeCase_ == AnalyzeOneofCase.Persist) hash ^= Persist.GetHashCode();
      if (analyzeCase_ == AnalyzeOneofCase.Unpersist) hash ^= Unpersist.GetHashCode();
      if (analyzeCase_ == AnalyzeOneofCase.GetStorageLevel) hash ^= GetStorageLevel.GetHashCode();
      hash ^= (int) analyzeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      if (userContext_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserContext);
      }
      if (HasClientType) {
        output.WriteRawTag(26);
        output.WriteString(ClientType);
      }
      if (analyzeCase_ == AnalyzeOneofCase.Schema) {
        output.WriteRawTag(34);
        output.WriteMessage(Schema);
      }
      if (analyzeCase_ == AnalyzeOneofCase.Explain) {
        output.WriteRawTag(42);
        output.WriteMessage(Explain);
      }
      if (analyzeCase_ == AnalyzeOneofCase.TreeString) {
        output.WriteRawTag(50);
        output.WriteMessage(TreeString);
      }
      if (analyzeCase_ == AnalyzeOneofCase.IsLocal) {
        output.WriteRawTag(58);
        output.WriteMessage(IsLocal);
      }
      if (analyzeCase_ == AnalyzeOneofCase.IsStreaming) {
        output.WriteRawTag(66);
        output.WriteMessage(IsStreaming);
      }
      if (analyzeCase_ == AnalyzeOneofCase.InputFiles) {
        output.WriteRawTag(74);
        output.WriteMessage(InputFiles);
      }
      if (analyzeCase_ == AnalyzeOneofCase.SparkVersion) {
        output.WriteRawTag(82);
        output.WriteMessage(SparkVersion);
      }
      if (analyzeCase_ == AnalyzeOneofCase.DdlParse) {
        output.WriteRawTag(90);
        output.WriteMessage(DdlParse);
      }
      if (analyzeCase_ == AnalyzeOneofCase.SameSemantics) {
        output.WriteRawTag(98);
        output.WriteMessage(SameSemantics);
      }
      if (analyzeCase_ == AnalyzeOneofCase.SemanticHash) {
        output.WriteRawTag(106);
        output.WriteMessage(SemanticHash);
      }
      if (analyzeCase_ == AnalyzeOneofCase.Persist) {
        output.WriteRawTag(114);
        output.WriteMessage(Persist);
      }
      if (analyzeCase_ == AnalyzeOneofCase.Unpersist) {
        output.WriteRawTag(122);
        output.WriteMessage(Unpersist);
      }
      if (analyzeCase_ == AnalyzeOneofCase.GetStorageLevel) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(GetStorageLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      if (userContext_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserContext);
      }
      if (HasClientType) {
        output.WriteRawTag(26);
        output.WriteString(ClientType);
      }
      if (analyzeCase_ == AnalyzeOneofCase.Schema) {
        output.WriteRawTag(34);
        output.WriteMessage(Schema);
      }
      if (analyzeCase_ == AnalyzeOneofCase.Explain) {
        output.WriteRawTag(42);
        output.WriteMessage(Explain);
      }
      if (analyzeCase_ == AnalyzeOneofCase.TreeString) {
        output.WriteRawTag(50);
        output.WriteMessage(TreeString);
      }
      if (analyzeCase_ == AnalyzeOneofCase.IsLocal) {
        output.WriteRawTag(58);
        output.WriteMessage(IsLocal);
      }
      if (analyzeCase_ == AnalyzeOneofCase.IsStreaming) {
        output.WriteRawTag(66);
        output.WriteMessage(IsStreaming);
      }
      if (analyzeCase_ == AnalyzeOneofCase.InputFiles) {
        output.WriteRawTag(74);
        output.WriteMessage(InputFiles);
      }
      if (analyzeCase_ == AnalyzeOneofCase.SparkVersion) {
        output.WriteRawTag(82);
        output.WriteMessage(SparkVersion);
      }
      if (analyzeCase_ == AnalyzeOneofCase.DdlParse) {
        output.WriteRawTag(90);
        output.WriteMessage(DdlParse);
      }
      if (analyzeCase_ == AnalyzeOneofCase.SameSemantics) {
        output.WriteRawTag(98);
        output.WriteMessage(SameSemantics);
      }
      if (analyzeCase_ == AnalyzeOneofCase.SemanticHash) {
        output.WriteRawTag(106);
        output.WriteMessage(SemanticHash);
      }
      if (analyzeCase_ == AnalyzeOneofCase.Persist) {
        output.WriteRawTag(114);
        output.WriteMessage(Persist);
      }
      if (analyzeCase_ == AnalyzeOneofCase.Unpersist) {
        output.WriteRawTag(122);
        output.WriteMessage(Unpersist);
      }
      if (analyzeCase_ == AnalyzeOneofCase.GetStorageLevel) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(GetStorageLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (userContext_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserContext);
      }
      if (HasClientType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientType);
      }
      if (analyzeCase_ == AnalyzeOneofCase.Schema) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schema);
      }
      if (analyzeCase_ == AnalyzeOneofCase.Explain) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Explain);
      }
      if (analyzeCase_ == AnalyzeOneofCase.TreeString) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TreeString);
      }
      if (analyzeCase_ == AnalyzeOneofCase.IsLocal) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IsLocal);
      }
      if (analyzeCase_ == AnalyzeOneofCase.IsStreaming) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IsStreaming);
      }
      if (analyzeCase_ == AnalyzeOneofCase.InputFiles) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InputFiles);
      }
      if (analyzeCase_ == AnalyzeOneofCase.SparkVersion) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SparkVersion);
      }
      if (analyzeCase_ == AnalyzeOneofCase.DdlParse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DdlParse);
      }
      if (analyzeCase_ == AnalyzeOneofCase.SameSemantics) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SameSemantics);
      }
      if (analyzeCase_ == AnalyzeOneofCase.SemanticHash) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SemanticHash);
      }
      if (analyzeCase_ == AnalyzeOneofCase.Persist) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Persist);
      }
      if (analyzeCase_ == AnalyzeOneofCase.Unpersist) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unpersist);
      }
      if (analyzeCase_ == AnalyzeOneofCase.GetStorageLevel) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetStorageLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnalyzePlanRequest other) {
      if (other == null) {
        return;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.userContext_ != null) {
        if (userContext_ == null) {
          UserContext = new global::Spark.Connect.UserContext();
        }
        UserContext.MergeFrom(other.UserContext);
      }
      if (other.HasClientType) {
        ClientType = other.ClientType;
      }
      switch (other.AnalyzeCase) {
        case AnalyzeOneofCase.Schema:
          if (Schema == null) {
            Schema = new global::Spark.Connect.AnalyzePlanRequest.Types.Schema();
          }
          Schema.MergeFrom(other.Schema);
          break;
        case AnalyzeOneofCase.Explain:
          if (Explain == null) {
            Explain = new global::Spark.Connect.AnalyzePlanRequest.Types.Explain();
          }
          Explain.MergeFrom(other.Explain);
          break;
        case AnalyzeOneofCase.TreeString:
          if (TreeString == null) {
            TreeString = new global::Spark.Connect.AnalyzePlanRequest.Types.TreeString();
          }
          TreeString.MergeFrom(other.TreeString);
          break;
        case AnalyzeOneofCase.IsLocal:
          if (IsLocal == null) {
            IsLocal = new global::Spark.Connect.AnalyzePlanRequest.Types.IsLocal();
          }
          IsLocal.MergeFrom(other.IsLocal);
          break;
        case AnalyzeOneofCase.IsStreaming:
          if (IsStreaming == null) {
            IsStreaming = new global::Spark.Connect.AnalyzePlanRequest.Types.IsStreaming();
          }
          IsStreaming.MergeFrom(other.IsStreaming);
          break;
        case AnalyzeOneofCase.InputFiles:
          if (InputFiles == null) {
            InputFiles = new global::Spark.Connect.AnalyzePlanRequest.Types.InputFiles();
          }
          InputFiles.MergeFrom(other.InputFiles);
          break;
        case AnalyzeOneofCase.SparkVersion:
          if (SparkVersion == null) {
            SparkVersion = new global::Spark.Connect.AnalyzePlanRequest.Types.SparkVersion();
          }
          SparkVersion.MergeFrom(other.SparkVersion);
          break;
        case AnalyzeOneofCase.DdlParse:
          if (DdlParse == null) {
            DdlParse = new global::Spark.Connect.AnalyzePlanRequest.Types.DDLParse();
          }
          DdlParse.MergeFrom(other.DdlParse);
          break;
        case AnalyzeOneofCase.SameSemantics:
          if (SameSemantics == null) {
            SameSemantics = new global::Spark.Connect.AnalyzePlanRequest.Types.SameSemantics();
          }
          SameSemantics.MergeFrom(other.SameSemantics);
          break;
        case AnalyzeOneofCase.SemanticHash:
          if (SemanticHash == null) {
            SemanticHash = new global::Spark.Connect.AnalyzePlanRequest.Types.SemanticHash();
          }
          SemanticHash.MergeFrom(other.SemanticHash);
          break;
        case AnalyzeOneofCase.Persist:
          if (Persist == null) {
            Persist = new global::Spark.Connect.AnalyzePlanRequest.Types.Persist();
          }
          Persist.MergeFrom(other.Persist);
          break;
        case AnalyzeOneofCase.Unpersist:
          if (Unpersist == null) {
            Unpersist = new global::Spark.Connect.AnalyzePlanRequest.Types.Unpersist();
          }
          Unpersist.MergeFrom(other.Unpersist);
          break;
        case AnalyzeOneofCase.GetStorageLevel:
          if (GetStorageLevel == null) {
            GetStorageLevel = new global::Spark.Connect.AnalyzePlanRequest.Types.GetStorageLevel();
          }
          GetStorageLevel.MergeFrom(other.GetStorageLevel);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
          case 18: {
            if (userContext_ == null) {
              UserContext = new global::Spark.Connect.UserContext();
            }
            input.ReadMessage(UserContext);
            break;
          }
          case 26: {
            ClientType = input.ReadString();
            break;
          }
          case 34: {
            global::Spark.Connect.AnalyzePlanRequest.Types.Schema subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.Schema();
            if (analyzeCase_ == AnalyzeOneofCase.Schema) {
              subBuilder.MergeFrom(Schema);
            }
            input.ReadMessage(subBuilder);
            Schema = subBuilder;
            break;
          }
          case 42: {
            global::Spark.Connect.AnalyzePlanRequest.Types.Explain subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.Explain();
            if (analyzeCase_ == AnalyzeOneofCase.Explain) {
              subBuilder.MergeFrom(Explain);
            }
            input.ReadMessage(subBuilder);
            Explain = subBuilder;
            break;
          }
          case 50: {
            global::Spark.Connect.AnalyzePlanRequest.Types.TreeString subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.TreeString();
            if (analyzeCase_ == AnalyzeOneofCase.TreeString) {
              subBuilder.MergeFrom(TreeString);
            }
            input.ReadMessage(subBuilder);
            TreeString = subBuilder;
            break;
          }
          case 58: {
            global::Spark.Connect.AnalyzePlanRequest.Types.IsLocal subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.IsLocal();
            if (analyzeCase_ == AnalyzeOneofCase.IsLocal) {
              subBuilder.MergeFrom(IsLocal);
            }
            input.ReadMessage(subBuilder);
            IsLocal = subBuilder;
            break;
          }
          case 66: {
            global::Spark.Connect.AnalyzePlanRequest.Types.IsStreaming subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.IsStreaming();
            if (analyzeCase_ == AnalyzeOneofCase.IsStreaming) {
              subBuilder.MergeFrom(IsStreaming);
            }
            input.ReadMessage(subBuilder);
            IsStreaming = subBuilder;
            break;
          }
          case 74: {
            global::Spark.Connect.AnalyzePlanRequest.Types.InputFiles subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.InputFiles();
            if (analyzeCase_ == AnalyzeOneofCase.InputFiles) {
              subBuilder.MergeFrom(InputFiles);
            }
            input.ReadMessage(subBuilder);
            InputFiles = subBuilder;
            break;
          }
          case 82: {
            global::Spark.Connect.AnalyzePlanRequest.Types.SparkVersion subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.SparkVersion();
            if (analyzeCase_ == AnalyzeOneofCase.SparkVersion) {
              subBuilder.MergeFrom(SparkVersion);
            }
            input.ReadMessage(subBuilder);
            SparkVersion = subBuilder;
            break;
          }
          case 90: {
            global::Spark.Connect.AnalyzePlanRequest.Types.DDLParse subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.DDLParse();
            if (analyzeCase_ == AnalyzeOneofCase.DdlParse) {
              subBuilder.MergeFrom(DdlParse);
            }
            input.ReadMessage(subBuilder);
            DdlParse = subBuilder;
            break;
          }
          case 98: {
            global::Spark.Connect.AnalyzePlanRequest.Types.SameSemantics subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.SameSemantics();
            if (analyzeCase_ == AnalyzeOneofCase.SameSemantics) {
              subBuilder.MergeFrom(SameSemantics);
            }
            input.ReadMessage(subBuilder);
            SameSemantics = subBuilder;
            break;
          }
          case 106: {
            global::Spark.Connect.AnalyzePlanRequest.Types.SemanticHash subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.SemanticHash();
            if (analyzeCase_ == AnalyzeOneofCase.SemanticHash) {
              subBuilder.MergeFrom(SemanticHash);
            }
            input.ReadMessage(subBuilder);
            SemanticHash = subBuilder;
            break;
          }
          case 114: {
            global::Spark.Connect.AnalyzePlanRequest.Types.Persist subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.Persist();
            if (analyzeCase_ == AnalyzeOneofCase.Persist) {
              subBuilder.MergeFrom(Persist);
            }
            input.ReadMessage(subBuilder);
            Persist = subBuilder;
            break;
          }
          case 122: {
            global::Spark.Connect.AnalyzePlanRequest.Types.Unpersist subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.Unpersist();
            if (analyzeCase_ == AnalyzeOneofCase.Unpersist) {
              subBuilder.MergeFrom(Unpersist);
            }
            input.ReadMessage(subBuilder);
            Unpersist = subBuilder;
            break;
          }
          case 130: {
            global::Spark.Connect.AnalyzePlanRequest.Types.GetStorageLevel subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.GetStorageLevel();
            if (analyzeCase_ == AnalyzeOneofCase.GetStorageLevel) {
              subBuilder.MergeFrom(GetStorageLevel);
            }
            input.ReadMessage(subBuilder);
            GetStorageLevel = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
          case 18: {
            if (userContext_ == null) {
              UserContext = new global::Spark.Connect.UserContext();
            }
            input.ReadMessage(UserContext);
            break;
          }
          case 26: {
            ClientType = input.ReadString();
            break;
          }
          case 34: {
            global::Spark.Connect.AnalyzePlanRequest.Types.Schema subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.Schema();
            if (analyzeCase_ == AnalyzeOneofCase.Schema) {
              subBuilder.MergeFrom(Schema);
            }
            input.ReadMessage(subBuilder);
            Schema = subBuilder;
            break;
          }
          case 42: {
            global::Spark.Connect.AnalyzePlanRequest.Types.Explain subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.Explain();
            if (analyzeCase_ == AnalyzeOneofCase.Explain) {
              subBuilder.MergeFrom(Explain);
            }
            input.ReadMessage(subBuilder);
            Explain = subBuilder;
            break;
          }
          case 50: {
            global::Spark.Connect.AnalyzePlanRequest.Types.TreeString subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.TreeString();
            if (analyzeCase_ == AnalyzeOneofCase.TreeString) {
              subBuilder.MergeFrom(TreeString);
            }
            input.ReadMessage(subBuilder);
            TreeString = subBuilder;
            break;
          }
          case 58: {
            global::Spark.Connect.AnalyzePlanRequest.Types.IsLocal subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.IsLocal();
            if (analyzeCase_ == AnalyzeOneofCase.IsLocal) {
              subBuilder.MergeFrom(IsLocal);
            }
            input.ReadMessage(subBuilder);
            IsLocal = subBuilder;
            break;
          }
          case 66: {
            global::Spark.Connect.AnalyzePlanRequest.Types.IsStreaming subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.IsStreaming();
            if (analyzeCase_ == AnalyzeOneofCase.IsStreaming) {
              subBuilder.MergeFrom(IsStreaming);
            }
            input.ReadMessage(subBuilder);
            IsStreaming = subBuilder;
            break;
          }
          case 74: {
            global::Spark.Connect.AnalyzePlanRequest.Types.InputFiles subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.InputFiles();
            if (analyzeCase_ == AnalyzeOneofCase.InputFiles) {
              subBuilder.MergeFrom(InputFiles);
            }
            input.ReadMessage(subBuilder);
            InputFiles = subBuilder;
            break;
          }
          case 82: {
            global::Spark.Connect.AnalyzePlanRequest.Types.SparkVersion subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.SparkVersion();
            if (analyzeCase_ == AnalyzeOneofCase.SparkVersion) {
              subBuilder.MergeFrom(SparkVersion);
            }
            input.ReadMessage(subBuilder);
            SparkVersion = subBuilder;
            break;
          }
          case 90: {
            global::Spark.Connect.AnalyzePlanRequest.Types.DDLParse subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.DDLParse();
            if (analyzeCase_ == AnalyzeOneofCase.DdlParse) {
              subBuilder.MergeFrom(DdlParse);
            }
            input.ReadMessage(subBuilder);
            DdlParse = subBuilder;
            break;
          }
          case 98: {
            global::Spark.Connect.AnalyzePlanRequest.Types.SameSemantics subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.SameSemantics();
            if (analyzeCase_ == AnalyzeOneofCase.SameSemantics) {
              subBuilder.MergeFrom(SameSemantics);
            }
            input.ReadMessage(subBuilder);
            SameSemantics = subBuilder;
            break;
          }
          case 106: {
            global::Spark.Connect.AnalyzePlanRequest.Types.SemanticHash subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.SemanticHash();
            if (analyzeCase_ == AnalyzeOneofCase.SemanticHash) {
              subBuilder.MergeFrom(SemanticHash);
            }
            input.ReadMessage(subBuilder);
            SemanticHash = subBuilder;
            break;
          }
          case 114: {
            global::Spark.Connect.AnalyzePlanRequest.Types.Persist subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.Persist();
            if (analyzeCase_ == AnalyzeOneofCase.Persist) {
              subBuilder.MergeFrom(Persist);
            }
            input.ReadMessage(subBuilder);
            Persist = subBuilder;
            break;
          }
          case 122: {
            global::Spark.Connect.AnalyzePlanRequest.Types.Unpersist subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.Unpersist();
            if (analyzeCase_ == AnalyzeOneofCase.Unpersist) {
              subBuilder.MergeFrom(Unpersist);
            }
            input.ReadMessage(subBuilder);
            Unpersist = subBuilder;
            break;
          }
          case 130: {
            global::Spark.Connect.AnalyzePlanRequest.Types.GetStorageLevel subBuilder = new global::Spark.Connect.AnalyzePlanRequest.Types.GetStorageLevel();
            if (analyzeCase_ == AnalyzeOneofCase.GetStorageLevel) {
              subBuilder.MergeFrom(GetStorageLevel);
            }
            input.ReadMessage(subBuilder);
            GetStorageLevel = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AnalyzePlanRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class Schema : pb::IMessage<Schema>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Schema> _parser = new pb::MessageParser<Schema>(() => new Schema());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Schema> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Schema() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Schema(Schema other) : this() {
          plan_ = other.plan_ != null ? other.plan_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Schema Clone() {
          return new Schema(this);
        }

        /// <summary>Field number for the "plan" field.</summary>
        public const int PlanFieldNumber = 1;
        private global::Spark.Connect.Plan plan_;
        /// <summary>
        /// (Required) The logical plan to be analyzed.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.Plan Plan {
          get { return plan_; }
          set {
            plan_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Schema);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Schema other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Plan, other.Plan)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (plan_ != null) hash ^= Plan.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (plan_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Plan);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (plan_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Plan);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (plan_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Plan);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Schema other) {
          if (other == null) {
            return;
          }
          if (other.plan_ != null) {
            if (plan_ == null) {
              Plan = new global::Spark.Connect.Plan();
            }
            Plan.MergeFrom(other.Plan);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (plan_ == null) {
                  Plan = new global::Spark.Connect.Plan();
                }
                input.ReadMessage(Plan);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (plan_ == null) {
                  Plan = new global::Spark.Connect.Plan();
                }
                input.ReadMessage(Plan);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Explains the input plan based on a configurable mode.
      /// </summary>
      public sealed partial class Explain : pb::IMessage<Explain>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Explain> _parser = new pb::MessageParser<Explain>(() => new Explain());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Explain> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanRequest.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Explain() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Explain(Explain other) : this() {
          plan_ = other.plan_ != null ? other.plan_.Clone() : null;
          explainMode_ = other.explainMode_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Explain Clone() {
          return new Explain(this);
        }

        /// <summary>Field number for the "plan" field.</summary>
        public const int PlanFieldNumber = 1;
        private global::Spark.Connect.Plan plan_;
        /// <summary>
        /// (Required) The logical plan to be analyzed.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.Plan Plan {
          get { return plan_; }
          set {
            plan_ = value;
          }
        }

        /// <summary>Field number for the "explain_mode" field.</summary>
        public const int ExplainModeFieldNumber = 2;
        private global::Spark.Connect.AnalyzePlanRequest.Types.Explain.Types.ExplainMode explainMode_ = global::Spark.Connect.AnalyzePlanRequest.Types.Explain.Types.ExplainMode.Unspecified;
        /// <summary>
        /// (Required) For analyzePlan rpc calls, configure the mode to explain plan in strings.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.AnalyzePlanRequest.Types.Explain.Types.ExplainMode ExplainMode {
          get { return explainMode_; }
          set {
            explainMode_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Explain);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Explain other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Plan, other.Plan)) return false;
          if (ExplainMode != other.ExplainMode) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (plan_ != null) hash ^= Plan.GetHashCode();
          if (ExplainMode != global::Spark.Connect.AnalyzePlanRequest.Types.Explain.Types.ExplainMode.Unspecified) hash ^= ExplainMode.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (plan_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Plan);
          }
          if (ExplainMode != global::Spark.Connect.AnalyzePlanRequest.Types.Explain.Types.ExplainMode.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) ExplainMode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (plan_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Plan);
          }
          if (ExplainMode != global::Spark.Connect.AnalyzePlanRequest.Types.Explain.Types.ExplainMode.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) ExplainMode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (plan_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Plan);
          }
          if (ExplainMode != global::Spark.Connect.AnalyzePlanRequest.Types.Explain.Types.ExplainMode.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ExplainMode);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Explain other) {
          if (other == null) {
            return;
          }
          if (other.plan_ != null) {
            if (plan_ == null) {
              Plan = new global::Spark.Connect.Plan();
            }
            Plan.MergeFrom(other.Plan);
          }
          if (other.ExplainMode != global::Spark.Connect.AnalyzePlanRequest.Types.Explain.Types.ExplainMode.Unspecified) {
            ExplainMode = other.ExplainMode;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (plan_ == null) {
                  Plan = new global::Spark.Connect.Plan();
                }
                input.ReadMessage(Plan);
                break;
              }
              case 16: {
                ExplainMode = (global::Spark.Connect.AnalyzePlanRequest.Types.Explain.Types.ExplainMode) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (plan_ == null) {
                  Plan = new global::Spark.Connect.Plan();
                }
                input.ReadMessage(Plan);
                break;
              }
              case 16: {
                ExplainMode = (global::Spark.Connect.AnalyzePlanRequest.Types.Explain.Types.ExplainMode) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Explain message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// Plan explanation mode.
          /// </summary>
          public enum ExplainMode {
            [pbr::OriginalName("EXPLAIN_MODE_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// Generates only physical plan.
            /// </summary>
            [pbr::OriginalName("EXPLAIN_MODE_SIMPLE")] Simple = 1,
            /// <summary>
            /// Generates parsed logical plan, analyzed logical plan, optimized logical plan and physical plan.
            /// Parsed Logical plan is a unresolved plan that extracted from the query. Analyzed logical plans
            /// transforms which translates unresolvedAttribute and unresolvedRelation into fully typed objects.
            /// The optimized logical plan transforms through a set of optimization rules, resulting in the
            /// physical plan.
            /// </summary>
            [pbr::OriginalName("EXPLAIN_MODE_EXTENDED")] Extended = 2,
            /// <summary>
            /// Generates code for the statement, if any and a physical plan.
            /// </summary>
            [pbr::OriginalName("EXPLAIN_MODE_CODEGEN")] Codegen = 3,
            /// <summary>
            /// If plan node statistics are available, generates a logical plan and also the statistics.
            /// </summary>
            [pbr::OriginalName("EXPLAIN_MODE_COST")] Cost = 4,
            /// <summary>
            /// Generates a physical plan outline and also node details.
            /// </summary>
            [pbr::OriginalName("EXPLAIN_MODE_FORMATTED")] Formatted = 5,
          }

        }
        #endregion

      }

      public sealed partial class TreeString : pb::IMessage<TreeString>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TreeString> _parser = new pb::MessageParser<TreeString>(() => new TreeString());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<TreeString> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanRequest.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TreeString() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TreeString(TreeString other) : this() {
          plan_ = other.plan_ != null ? other.plan_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TreeString Clone() {
          return new TreeString(this);
        }

        /// <summary>Field number for the "plan" field.</summary>
        public const int PlanFieldNumber = 1;
        private global::Spark.Connect.Plan plan_;
        /// <summary>
        /// (Required) The logical plan to be analyzed.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.Plan Plan {
          get { return plan_; }
          set {
            plan_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as TreeString);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(TreeString other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Plan, other.Plan)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (plan_ != null) hash ^= Plan.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (plan_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Plan);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (plan_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Plan);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (plan_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Plan);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(TreeString other) {
          if (other == null) {
            return;
          }
          if (other.plan_ != null) {
            if (plan_ == null) {
              Plan = new global::Spark.Connect.Plan();
            }
            Plan.MergeFrom(other.Plan);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (plan_ == null) {
                  Plan = new global::Spark.Connect.Plan();
                }
                input.ReadMessage(Plan);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (plan_ == null) {
                  Plan = new global::Spark.Connect.Plan();
                }
                input.ReadMessage(Plan);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class IsLocal : pb::IMessage<IsLocal>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<IsLocal> _parser = new pb::MessageParser<IsLocal>(() => new IsLocal());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<IsLocal> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanRequest.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public IsLocal() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public IsLocal(IsLocal other) : this() {
          plan_ = other.plan_ != null ? other.plan_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public IsLocal Clone() {
          return new IsLocal(this);
        }

        /// <summary>Field number for the "plan" field.</summary>
        public const int PlanFieldNumber = 1;
        private global::Spark.Connect.Plan plan_;
        /// <summary>
        /// (Required) The logical plan to be analyzed.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.Plan Plan {
          get { return plan_; }
          set {
            plan_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as IsLocal);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(IsLocal other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Plan, other.Plan)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (plan_ != null) hash ^= Plan.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (plan_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Plan);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (plan_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Plan);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (plan_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Plan);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(IsLocal other) {
          if (other == null) {
            return;
          }
          if (other.plan_ != null) {
            if (plan_ == null) {
              Plan = new global::Spark.Connect.Plan();
            }
            Plan.MergeFrom(other.Plan);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (plan_ == null) {
                  Plan = new global::Spark.Connect.Plan();
                }
                input.ReadMessage(Plan);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (plan_ == null) {
                  Plan = new global::Spark.Connect.Plan();
                }
                input.ReadMessage(Plan);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class IsStreaming : pb::IMessage<IsStreaming>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<IsStreaming> _parser = new pb::MessageParser<IsStreaming>(() => new IsStreaming());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<IsStreaming> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanRequest.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public IsStreaming() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public IsStreaming(IsStreaming other) : this() {
          plan_ = other.plan_ != null ? other.plan_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public IsStreaming Clone() {
          return new IsStreaming(this);
        }

        /// <summary>Field number for the "plan" field.</summary>
        public const int PlanFieldNumber = 1;
        private global::Spark.Connect.Plan plan_;
        /// <summary>
        /// (Required) The logical plan to be analyzed.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.Plan Plan {
          get { return plan_; }
          set {
            plan_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as IsStreaming);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(IsStreaming other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Plan, other.Plan)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (plan_ != null) hash ^= Plan.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (plan_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Plan);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (plan_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Plan);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (plan_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Plan);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(IsStreaming other) {
          if (other == null) {
            return;
          }
          if (other.plan_ != null) {
            if (plan_ == null) {
              Plan = new global::Spark.Connect.Plan();
            }
            Plan.MergeFrom(other.Plan);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (plan_ == null) {
                  Plan = new global::Spark.Connect.Plan();
                }
                input.ReadMessage(Plan);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (plan_ == null) {
                  Plan = new global::Spark.Connect.Plan();
                }
                input.ReadMessage(Plan);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class InputFiles : pb::IMessage<InputFiles>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<InputFiles> _parser = new pb::MessageParser<InputFiles>(() => new InputFiles());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<InputFiles> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanRequest.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public InputFiles() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public InputFiles(InputFiles other) : this() {
          plan_ = other.plan_ != null ? other.plan_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public InputFiles Clone() {
          return new InputFiles(this);
        }

        /// <summary>Field number for the "plan" field.</summary>
        public const int PlanFieldNumber = 1;
        private global::Spark.Connect.Plan plan_;
        /// <summary>
        /// (Required) The logical plan to be analyzed.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.Plan Plan {
          get { return plan_; }
          set {
            plan_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as InputFiles);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(InputFiles other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Plan, other.Plan)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (plan_ != null) hash ^= Plan.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (plan_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Plan);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (plan_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Plan);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (plan_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Plan);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(InputFiles other) {
          if (other == null) {
            return;
          }
          if (other.plan_ != null) {
            if (plan_ == null) {
              Plan = new global::Spark.Connect.Plan();
            }
            Plan.MergeFrom(other.Plan);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (plan_ == null) {
                  Plan = new global::Spark.Connect.Plan();
                }
                input.ReadMessage(Plan);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (plan_ == null) {
                  Plan = new global::Spark.Connect.Plan();
                }
                input.ReadMessage(Plan);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class SparkVersion : pb::IMessage<SparkVersion>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SparkVersion> _parser = new pb::MessageParser<SparkVersion>(() => new SparkVersion());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<SparkVersion> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanRequest.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SparkVersion() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SparkVersion(SparkVersion other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SparkVersion Clone() {
          return new SparkVersion(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as SparkVersion);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(SparkVersion other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(SparkVersion other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class DDLParse : pb::IMessage<DDLParse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DDLParse> _parser = new pb::MessageParser<DDLParse>(() => new DDLParse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DDLParse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanRequest.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DDLParse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DDLParse(DDLParse other) : this() {
          ddlString_ = other.ddlString_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DDLParse Clone() {
          return new DDLParse(this);
        }

        /// <summary>Field number for the "ddl_string" field.</summary>
        public const int DdlStringFieldNumber = 1;
        private string ddlString_ = "";
        /// <summary>
        /// (Required) The DDL formatted string to be parsed.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string DdlString {
          get { return ddlString_; }
          set {
            ddlString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as DDLParse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DDLParse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DdlString != other.DdlString) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (DdlString.Length != 0) hash ^= DdlString.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (DdlString.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(DdlString);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (DdlString.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(DdlString);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (DdlString.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DdlString);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DDLParse other) {
          if (other == null) {
            return;
          }
          if (other.DdlString.Length != 0) {
            DdlString = other.DdlString;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                DdlString = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                DdlString = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Returns `true` when the logical query plans  are equal and therefore return same results.
      /// </summary>
      public sealed partial class SameSemantics : pb::IMessage<SameSemantics>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SameSemantics> _parser = new pb::MessageParser<SameSemantics>(() => new SameSemantics());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<SameSemantics> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanRequest.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SameSemantics() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SameSemantics(SameSemantics other) : this() {
          targetPlan_ = other.targetPlan_ != null ? other.targetPlan_.Clone() : null;
          otherPlan_ = other.otherPlan_ != null ? other.otherPlan_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SameSemantics Clone() {
          return new SameSemantics(this);
        }

        /// <summary>Field number for the "target_plan" field.</summary>
        public const int TargetPlanFieldNumber = 1;
        private global::Spark.Connect.Plan targetPlan_;
        /// <summary>
        /// (Required) The plan to be compared.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.Plan TargetPlan {
          get { return targetPlan_; }
          set {
            targetPlan_ = value;
          }
        }

        /// <summary>Field number for the "other_plan" field.</summary>
        public const int OtherPlanFieldNumber = 2;
        private global::Spark.Connect.Plan otherPlan_;
        /// <summary>
        /// (Required) The other plan to be compared.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.Plan OtherPlan {
          get { return otherPlan_; }
          set {
            otherPlan_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as SameSemantics);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(SameSemantics other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(TargetPlan, other.TargetPlan)) return false;
          if (!object.Equals(OtherPlan, other.OtherPlan)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (targetPlan_ != null) hash ^= TargetPlan.GetHashCode();
          if (otherPlan_ != null) hash ^= OtherPlan.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (targetPlan_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(TargetPlan);
          }
          if (otherPlan_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(OtherPlan);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (targetPlan_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(TargetPlan);
          }
          if (otherPlan_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(OtherPlan);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (targetPlan_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetPlan);
          }
          if (otherPlan_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(OtherPlan);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(SameSemantics other) {
          if (other == null) {
            return;
          }
          if (other.targetPlan_ != null) {
            if (targetPlan_ == null) {
              TargetPlan = new global::Spark.Connect.Plan();
            }
            TargetPlan.MergeFrom(other.TargetPlan);
          }
          if (other.otherPlan_ != null) {
            if (otherPlan_ == null) {
              OtherPlan = new global::Spark.Connect.Plan();
            }
            OtherPlan.MergeFrom(other.OtherPlan);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (targetPlan_ == null) {
                  TargetPlan = new global::Spark.Connect.Plan();
                }
                input.ReadMessage(TargetPlan);
                break;
              }
              case 18: {
                if (otherPlan_ == null) {
                  OtherPlan = new global::Spark.Connect.Plan();
                }
                input.ReadMessage(OtherPlan);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (targetPlan_ == null) {
                  TargetPlan = new global::Spark.Connect.Plan();
                }
                input.ReadMessage(TargetPlan);
                break;
              }
              case 18: {
                if (otherPlan_ == null) {
                  OtherPlan = new global::Spark.Connect.Plan();
                }
                input.ReadMessage(OtherPlan);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class SemanticHash : pb::IMessage<SemanticHash>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SemanticHash> _parser = new pb::MessageParser<SemanticHash>(() => new SemanticHash());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<SemanticHash> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanRequest.Descriptor.NestedTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SemanticHash() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SemanticHash(SemanticHash other) : this() {
          plan_ = other.plan_ != null ? other.plan_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SemanticHash Clone() {
          return new SemanticHash(this);
        }

        /// <summary>Field number for the "plan" field.</summary>
        public const int PlanFieldNumber = 1;
        private global::Spark.Connect.Plan plan_;
        /// <summary>
        /// (Required) The logical plan to get a hashCode.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.Plan Plan {
          get { return plan_; }
          set {
            plan_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as SemanticHash);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(SemanticHash other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Plan, other.Plan)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (plan_ != null) hash ^= Plan.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (plan_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Plan);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (plan_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Plan);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (plan_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Plan);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(SemanticHash other) {
          if (other == null) {
            return;
          }
          if (other.plan_ != null) {
            if (plan_ == null) {
              Plan = new global::Spark.Connect.Plan();
            }
            Plan.MergeFrom(other.Plan);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (plan_ == null) {
                  Plan = new global::Spark.Connect.Plan();
                }
                input.ReadMessage(Plan);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (plan_ == null) {
                  Plan = new global::Spark.Connect.Plan();
                }
                input.ReadMessage(Plan);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Persist : pb::IMessage<Persist>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Persist> _parser = new pb::MessageParser<Persist>(() => new Persist());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Persist> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanRequest.Descriptor.NestedTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Persist() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Persist(Persist other) : this() {
          relation_ = other.relation_ != null ? other.relation_.Clone() : null;
          storageLevel_ = other.storageLevel_ != null ? other.storageLevel_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Persist Clone() {
          return new Persist(this);
        }

        /// <summary>Field number for the "relation" field.</summary>
        public const int RelationFieldNumber = 1;
        private global::Spark.Connect.Relation relation_;
        /// <summary>
        /// (Required) The logical plan to persist.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.Relation Relation {
          get { return relation_; }
          set {
            relation_ = value;
          }
        }

        /// <summary>Field number for the "storage_level" field.</summary>
        public const int StorageLevelFieldNumber = 2;
        private global::Spark.Connect.StorageLevel storageLevel_;
        /// <summary>
        /// (Optional) The storage level.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.StorageLevel StorageLevel {
          get { return storageLevel_; }
          set {
            storageLevel_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Persist);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Persist other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Relation, other.Relation)) return false;
          if (!object.Equals(StorageLevel, other.StorageLevel)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (relation_ != null) hash ^= Relation.GetHashCode();
          if (storageLevel_ != null) hash ^= StorageLevel.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (relation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Relation);
          }
          if (storageLevel_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(StorageLevel);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (relation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Relation);
          }
          if (storageLevel_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(StorageLevel);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (relation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Relation);
          }
          if (storageLevel_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(StorageLevel);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Persist other) {
          if (other == null) {
            return;
          }
          if (other.relation_ != null) {
            if (relation_ == null) {
              Relation = new global::Spark.Connect.Relation();
            }
            Relation.MergeFrom(other.Relation);
          }
          if (other.storageLevel_ != null) {
            if (storageLevel_ == null) {
              StorageLevel = new global::Spark.Connect.StorageLevel();
            }
            StorageLevel.MergeFrom(other.StorageLevel);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (relation_ == null) {
                  Relation = new global::Spark.Connect.Relation();
                }
                input.ReadMessage(Relation);
                break;
              }
              case 18: {
                if (storageLevel_ == null) {
                  StorageLevel = new global::Spark.Connect.StorageLevel();
                }
                input.ReadMessage(StorageLevel);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (relation_ == null) {
                  Relation = new global::Spark.Connect.Relation();
                }
                input.ReadMessage(Relation);
                break;
              }
              case 18: {
                if (storageLevel_ == null) {
                  StorageLevel = new global::Spark.Connect.StorageLevel();
                }
                input.ReadMessage(StorageLevel);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Unpersist : pb::IMessage<Unpersist>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Unpersist> _parser = new pb::MessageParser<Unpersist>(() => new Unpersist());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Unpersist> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanRequest.Descriptor.NestedTypes[11]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Unpersist() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Unpersist(Unpersist other) : this() {
          _hasBits0 = other._hasBits0;
          relation_ = other.relation_ != null ? other.relation_.Clone() : null;
          blocking_ = other.blocking_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Unpersist Clone() {
          return new Unpersist(this);
        }

        /// <summary>Field number for the "relation" field.</summary>
        public const int RelationFieldNumber = 1;
        private global::Spark.Connect.Relation relation_;
        /// <summary>
        /// (Required) The logical plan to unpersist.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.Relation Relation {
          get { return relation_; }
          set {
            relation_ = value;
          }
        }

        /// <summary>Field number for the "blocking" field.</summary>
        public const int BlockingFieldNumber = 2;
        private readonly static bool BlockingDefaultValue = false;

        private bool blocking_;
        /// <summary>
        /// (Optional) Whether to block until all blocks are deleted.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Blocking {
          get { if ((_hasBits0 & 1) != 0) { return blocking_; } else { return BlockingDefaultValue; } }
          set {
            _hasBits0 |= 1;
            blocking_ = value;
          }
        }
        /// <summary>Gets whether the "blocking" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasBlocking {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "blocking" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearBlocking() {
          _hasBits0 &= ~1;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Unpersist);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Unpersist other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Relation, other.Relation)) return false;
          if (Blocking != other.Blocking) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (relation_ != null) hash ^= Relation.GetHashCode();
          if (HasBlocking) hash ^= Blocking.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (relation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Relation);
          }
          if (HasBlocking) {
            output.WriteRawTag(16);
            output.WriteBool(Blocking);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (relation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Relation);
          }
          if (HasBlocking) {
            output.WriteRawTag(16);
            output.WriteBool(Blocking);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (relation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Relation);
          }
          if (HasBlocking) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Unpersist other) {
          if (other == null) {
            return;
          }
          if (other.relation_ != null) {
            if (relation_ == null) {
              Relation = new global::Spark.Connect.Relation();
            }
            Relation.MergeFrom(other.Relation);
          }
          if (other.HasBlocking) {
            Blocking = other.Blocking;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (relation_ == null) {
                  Relation = new global::Spark.Connect.Relation();
                }
                input.ReadMessage(Relation);
                break;
              }
              case 16: {
                Blocking = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (relation_ == null) {
                  Relation = new global::Spark.Connect.Relation();
                }
                input.ReadMessage(Relation);
                break;
              }
              case 16: {
                Blocking = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class GetStorageLevel : pb::IMessage<GetStorageLevel>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<GetStorageLevel> _parser = new pb::MessageParser<GetStorageLevel>(() => new GetStorageLevel());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<GetStorageLevel> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanRequest.Descriptor.NestedTypes[12]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetStorageLevel() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetStorageLevel(GetStorageLevel other) : this() {
          relation_ = other.relation_ != null ? other.relation_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetStorageLevel Clone() {
          return new GetStorageLevel(this);
        }

        /// <summary>Field number for the "relation" field.</summary>
        public const int RelationFieldNumber = 1;
        private global::Spark.Connect.Relation relation_;
        /// <summary>
        /// (Required) The logical plan to get the storage level.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.Relation Relation {
          get { return relation_; }
          set {
            relation_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as GetStorageLevel);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(GetStorageLevel other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Relation, other.Relation)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (relation_ != null) hash ^= Relation.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (relation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Relation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (relation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Relation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (relation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Relation);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(GetStorageLevel other) {
          if (other == null) {
            return;
          }
          if (other.relation_ != null) {
            if (relation_ == null) {
              Relation = new global::Spark.Connect.Relation();
            }
            Relation.MergeFrom(other.Relation);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (relation_ == null) {
                  Relation = new global::Spark.Connect.Relation();
                }
                input.ReadMessage(Relation);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (relation_ == null) {
                  Relation = new global::Spark.Connect.Relation();
                }
                input.ReadMessage(Relation);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Response to performing analysis of the query. Contains relevant metadata to be able to
  /// reason about the performance.
  /// </summary>
  public sealed partial class AnalyzePlanResponse : pb::IMessage<AnalyzePlanResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnalyzePlanResponse> _parser = new pb::MessageParser<AnalyzePlanResponse>(() => new AnalyzePlanResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnalyzePlanResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spark.Connect.BaseReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyzePlanResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyzePlanResponse(AnalyzePlanResponse other) : this() {
      sessionId_ = other.sessionId_;
      switch (other.ResultCase) {
        case ResultOneofCase.Schema:
          Schema = other.Schema.Clone();
          break;
        case ResultOneofCase.Explain:
          Explain = other.Explain.Clone();
          break;
        case ResultOneofCase.TreeString:
          TreeString = other.TreeString.Clone();
          break;
        case ResultOneofCase.IsLocal:
          IsLocal = other.IsLocal.Clone();
          break;
        case ResultOneofCase.IsStreaming:
          IsStreaming = other.IsStreaming.Clone();
          break;
        case ResultOneofCase.InputFiles:
          InputFiles = other.InputFiles.Clone();
          break;
        case ResultOneofCase.SparkVersion:
          SparkVersion = other.SparkVersion.Clone();
          break;
        case ResultOneofCase.DdlParse:
          DdlParse = other.DdlParse.Clone();
          break;
        case ResultOneofCase.SameSemantics:
          SameSemantics = other.SameSemantics.Clone();
          break;
        case ResultOneofCase.SemanticHash:
          SemanticHash = other.SemanticHash.Clone();
          break;
        case ResultOneofCase.Persist:
          Persist = other.Persist.Clone();
          break;
        case ResultOneofCase.Unpersist:
          Unpersist = other.Unpersist.Clone();
          break;
        case ResultOneofCase.GetStorageLevel:
          GetStorageLevel = other.GetStorageLevel.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyzePlanResponse Clone() {
      return new AnalyzePlanResponse(this);
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "schema" field.</summary>
    public const int SchemaFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanResponse.Types.Schema Schema {
      get { return resultCase_ == ResultOneofCase.Schema ? (global::Spark.Connect.AnalyzePlanResponse.Types.Schema) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.Schema;
      }
    }

    /// <summary>Field number for the "explain" field.</summary>
    public const int ExplainFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanResponse.Types.Explain Explain {
      get { return resultCase_ == ResultOneofCase.Explain ? (global::Spark.Connect.AnalyzePlanResponse.Types.Explain) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.Explain;
      }
    }

    /// <summary>Field number for the "tree_string" field.</summary>
    public const int TreeStringFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanResponse.Types.TreeString TreeString {
      get { return resultCase_ == ResultOneofCase.TreeString ? (global::Spark.Connect.AnalyzePlanResponse.Types.TreeString) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.TreeString;
      }
    }

    /// <summary>Field number for the "is_local" field.</summary>
    public const int IsLocalFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanResponse.Types.IsLocal IsLocal {
      get { return resultCase_ == ResultOneofCase.IsLocal ? (global::Spark.Connect.AnalyzePlanResponse.Types.IsLocal) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.IsLocal;
      }
    }

    /// <summary>Field number for the "is_streaming" field.</summary>
    public const int IsStreamingFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanResponse.Types.IsStreaming IsStreaming {
      get { return resultCase_ == ResultOneofCase.IsStreaming ? (global::Spark.Connect.AnalyzePlanResponse.Types.IsStreaming) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.IsStreaming;
      }
    }

    /// <summary>Field number for the "input_files" field.</summary>
    public const int InputFilesFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanResponse.Types.InputFiles InputFiles {
      get { return resultCase_ == ResultOneofCase.InputFiles ? (global::Spark.Connect.AnalyzePlanResponse.Types.InputFiles) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.InputFiles;
      }
    }

    /// <summary>Field number for the "spark_version" field.</summary>
    public const int SparkVersionFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanResponse.Types.SparkVersion SparkVersion {
      get { return resultCase_ == ResultOneofCase.SparkVersion ? (global::Spark.Connect.AnalyzePlanResponse.Types.SparkVersion) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.SparkVersion;
      }
    }

    /// <summary>Field number for the "ddl_parse" field.</summary>
    public const int DdlParseFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanResponse.Types.DDLParse DdlParse {
      get { return resultCase_ == ResultOneofCase.DdlParse ? (global::Spark.Connect.AnalyzePlanResponse.Types.DDLParse) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.DdlParse;
      }
    }

    /// <summary>Field number for the "same_semantics" field.</summary>
    public const int SameSemanticsFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanResponse.Types.SameSemantics SameSemantics {
      get { return resultCase_ == ResultOneofCase.SameSemantics ? (global::Spark.Connect.AnalyzePlanResponse.Types.SameSemantics) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.SameSemantics;
      }
    }

    /// <summary>Field number for the "semantic_hash" field.</summary>
    public const int SemanticHashFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanResponse.Types.SemanticHash SemanticHash {
      get { return resultCase_ == ResultOneofCase.SemanticHash ? (global::Spark.Connect.AnalyzePlanResponse.Types.SemanticHash) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.SemanticHash;
      }
    }

    /// <summary>Field number for the "persist" field.</summary>
    public const int PersistFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanResponse.Types.Persist Persist {
      get { return resultCase_ == ResultOneofCase.Persist ? (global::Spark.Connect.AnalyzePlanResponse.Types.Persist) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.Persist;
      }
    }

    /// <summary>Field number for the "unpersist" field.</summary>
    public const int UnpersistFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanResponse.Types.Unpersist Unpersist {
      get { return resultCase_ == ResultOneofCase.Unpersist ? (global::Spark.Connect.AnalyzePlanResponse.Types.Unpersist) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.Unpersist;
      }
    }

    /// <summary>Field number for the "get_storage_level" field.</summary>
    public const int GetStorageLevelFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AnalyzePlanResponse.Types.GetStorageLevel GetStorageLevel {
      get { return resultCase_ == ResultOneofCase.GetStorageLevel ? (global::Spark.Connect.AnalyzePlanResponse.Types.GetStorageLevel) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.GetStorageLevel;
      }
    }

    private object result_;
    /// <summary>Enum of possible cases for the "result" oneof.</summary>
    public enum ResultOneofCase {
      None = 0,
      Schema = 2,
      Explain = 3,
      TreeString = 4,
      IsLocal = 5,
      IsStreaming = 6,
      InputFiles = 7,
      SparkVersion = 8,
      DdlParse = 9,
      SameSemantics = 10,
      SemanticHash = 11,
      Persist = 12,
      Unpersist = 13,
      GetStorageLevel = 14,
    }
    private ResultOneofCase resultCase_ = ResultOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResultOneofCase ResultCase {
      get { return resultCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      resultCase_ = ResultOneofCase.None;
      result_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnalyzePlanResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnalyzePlanResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (!object.Equals(Schema, other.Schema)) return false;
      if (!object.Equals(Explain, other.Explain)) return false;
      if (!object.Equals(TreeString, other.TreeString)) return false;
      if (!object.Equals(IsLocal, other.IsLocal)) return false;
      if (!object.Equals(IsStreaming, other.IsStreaming)) return false;
      if (!object.Equals(InputFiles, other.InputFiles)) return false;
      if (!object.Equals(SparkVersion, other.SparkVersion)) return false;
      if (!object.Equals(DdlParse, other.DdlParse)) return false;
      if (!object.Equals(SameSemantics, other.SameSemantics)) return false;
      if (!object.Equals(SemanticHash, other.SemanticHash)) return false;
      if (!object.Equals(Persist, other.Persist)) return false;
      if (!object.Equals(Unpersist, other.Unpersist)) return false;
      if (!object.Equals(GetStorageLevel, other.GetStorageLevel)) return false;
      if (ResultCase != other.ResultCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (resultCase_ == ResultOneofCase.Schema) hash ^= Schema.GetHashCode();
      if (resultCase_ == ResultOneofCase.Explain) hash ^= Explain.GetHashCode();
      if (resultCase_ == ResultOneofCase.TreeString) hash ^= TreeString.GetHashCode();
      if (resultCase_ == ResultOneofCase.IsLocal) hash ^= IsLocal.GetHashCode();
      if (resultCase_ == ResultOneofCase.IsStreaming) hash ^= IsStreaming.GetHashCode();
      if (resultCase_ == ResultOneofCase.InputFiles) hash ^= InputFiles.GetHashCode();
      if (resultCase_ == ResultOneofCase.SparkVersion) hash ^= SparkVersion.GetHashCode();
      if (resultCase_ == ResultOneofCase.DdlParse) hash ^= DdlParse.GetHashCode();
      if (resultCase_ == ResultOneofCase.SameSemantics) hash ^= SameSemantics.GetHashCode();
      if (resultCase_ == ResultOneofCase.SemanticHash) hash ^= SemanticHash.GetHashCode();
      if (resultCase_ == ResultOneofCase.Persist) hash ^= Persist.GetHashCode();
      if (resultCase_ == ResultOneofCase.Unpersist) hash ^= Unpersist.GetHashCode();
      if (resultCase_ == ResultOneofCase.GetStorageLevel) hash ^= GetStorageLevel.GetHashCode();
      hash ^= (int) resultCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      if (resultCase_ == ResultOneofCase.Schema) {
        output.WriteRawTag(18);
        output.WriteMessage(Schema);
      }
      if (resultCase_ == ResultOneofCase.Explain) {
        output.WriteRawTag(26);
        output.WriteMessage(Explain);
      }
      if (resultCase_ == ResultOneofCase.TreeString) {
        output.WriteRawTag(34);
        output.WriteMessage(TreeString);
      }
      if (resultCase_ == ResultOneofCase.IsLocal) {
        output.WriteRawTag(42);
        output.WriteMessage(IsLocal);
      }
      if (resultCase_ == ResultOneofCase.IsStreaming) {
        output.WriteRawTag(50);
        output.WriteMessage(IsStreaming);
      }
      if (resultCase_ == ResultOneofCase.InputFiles) {
        output.WriteRawTag(58);
        output.WriteMessage(InputFiles);
      }
      if (resultCase_ == ResultOneofCase.SparkVersion) {
        output.WriteRawTag(66);
        output.WriteMessage(SparkVersion);
      }
      if (resultCase_ == ResultOneofCase.DdlParse) {
        output.WriteRawTag(74);
        output.WriteMessage(DdlParse);
      }
      if (resultCase_ == ResultOneofCase.SameSemantics) {
        output.WriteRawTag(82);
        output.WriteMessage(SameSemantics);
      }
      if (resultCase_ == ResultOneofCase.SemanticHash) {
        output.WriteRawTag(90);
        output.WriteMessage(SemanticHash);
      }
      if (resultCase_ == ResultOneofCase.Persist) {
        output.WriteRawTag(98);
        output.WriteMessage(Persist);
      }
      if (resultCase_ == ResultOneofCase.Unpersist) {
        output.WriteRawTag(106);
        output.WriteMessage(Unpersist);
      }
      if (resultCase_ == ResultOneofCase.GetStorageLevel) {
        output.WriteRawTag(114);
        output.WriteMessage(GetStorageLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      if (resultCase_ == ResultOneofCase.Schema) {
        output.WriteRawTag(18);
        output.WriteMessage(Schema);
      }
      if (resultCase_ == ResultOneofCase.Explain) {
        output.WriteRawTag(26);
        output.WriteMessage(Explain);
      }
      if (resultCase_ == ResultOneofCase.TreeString) {
        output.WriteRawTag(34);
        output.WriteMessage(TreeString);
      }
      if (resultCase_ == ResultOneofCase.IsLocal) {
        output.WriteRawTag(42);
        output.WriteMessage(IsLocal);
      }
      if (resultCase_ == ResultOneofCase.IsStreaming) {
        output.WriteRawTag(50);
        output.WriteMessage(IsStreaming);
      }
      if (resultCase_ == ResultOneofCase.InputFiles) {
        output.WriteRawTag(58);
        output.WriteMessage(InputFiles);
      }
      if (resultCase_ == ResultOneofCase.SparkVersion) {
        output.WriteRawTag(66);
        output.WriteMessage(SparkVersion);
      }
      if (resultCase_ == ResultOneofCase.DdlParse) {
        output.WriteRawTag(74);
        output.WriteMessage(DdlParse);
      }
      if (resultCase_ == ResultOneofCase.SameSemantics) {
        output.WriteRawTag(82);
        output.WriteMessage(SameSemantics);
      }
      if (resultCase_ == ResultOneofCase.SemanticHash) {
        output.WriteRawTag(90);
        output.WriteMessage(SemanticHash);
      }
      if (resultCase_ == ResultOneofCase.Persist) {
        output.WriteRawTag(98);
        output.WriteMessage(Persist);
      }
      if (resultCase_ == ResultOneofCase.Unpersist) {
        output.WriteRawTag(106);
        output.WriteMessage(Unpersist);
      }
      if (resultCase_ == ResultOneofCase.GetStorageLevel) {
        output.WriteRawTag(114);
        output.WriteMessage(GetStorageLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (resultCase_ == ResultOneofCase.Schema) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schema);
      }
      if (resultCase_ == ResultOneofCase.Explain) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Explain);
      }
      if (resultCase_ == ResultOneofCase.TreeString) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TreeString);
      }
      if (resultCase_ == ResultOneofCase.IsLocal) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IsLocal);
      }
      if (resultCase_ == ResultOneofCase.IsStreaming) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IsStreaming);
      }
      if (resultCase_ == ResultOneofCase.InputFiles) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InputFiles);
      }
      if (resultCase_ == ResultOneofCase.SparkVersion) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SparkVersion);
      }
      if (resultCase_ == ResultOneofCase.DdlParse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DdlParse);
      }
      if (resultCase_ == ResultOneofCase.SameSemantics) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SameSemantics);
      }
      if (resultCase_ == ResultOneofCase.SemanticHash) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SemanticHash);
      }
      if (resultCase_ == ResultOneofCase.Persist) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Persist);
      }
      if (resultCase_ == ResultOneofCase.Unpersist) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unpersist);
      }
      if (resultCase_ == ResultOneofCase.GetStorageLevel) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetStorageLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnalyzePlanResponse other) {
      if (other == null) {
        return;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      switch (other.ResultCase) {
        case ResultOneofCase.Schema:
          if (Schema == null) {
            Schema = new global::Spark.Connect.AnalyzePlanResponse.Types.Schema();
          }
          Schema.MergeFrom(other.Schema);
          break;
        case ResultOneofCase.Explain:
          if (Explain == null) {
            Explain = new global::Spark.Connect.AnalyzePlanResponse.Types.Explain();
          }
          Explain.MergeFrom(other.Explain);
          break;
        case ResultOneofCase.TreeString:
          if (TreeString == null) {
            TreeString = new global::Spark.Connect.AnalyzePlanResponse.Types.TreeString();
          }
          TreeString.MergeFrom(other.TreeString);
          break;
        case ResultOneofCase.IsLocal:
          if (IsLocal == null) {
            IsLocal = new global::Spark.Connect.AnalyzePlanResponse.Types.IsLocal();
          }
          IsLocal.MergeFrom(other.IsLocal);
          break;
        case ResultOneofCase.IsStreaming:
          if (IsStreaming == null) {
            IsStreaming = new global::Spark.Connect.AnalyzePlanResponse.Types.IsStreaming();
          }
          IsStreaming.MergeFrom(other.IsStreaming);
          break;
        case ResultOneofCase.InputFiles:
          if (InputFiles == null) {
            InputFiles = new global::Spark.Connect.AnalyzePlanResponse.Types.InputFiles();
          }
          InputFiles.MergeFrom(other.InputFiles);
          break;
        case ResultOneofCase.SparkVersion:
          if (SparkVersion == null) {
            SparkVersion = new global::Spark.Connect.AnalyzePlanResponse.Types.SparkVersion();
          }
          SparkVersion.MergeFrom(other.SparkVersion);
          break;
        case ResultOneofCase.DdlParse:
          if (DdlParse == null) {
            DdlParse = new global::Spark.Connect.AnalyzePlanResponse.Types.DDLParse();
          }
          DdlParse.MergeFrom(other.DdlParse);
          break;
        case ResultOneofCase.SameSemantics:
          if (SameSemantics == null) {
            SameSemantics = new global::Spark.Connect.AnalyzePlanResponse.Types.SameSemantics();
          }
          SameSemantics.MergeFrom(other.SameSemantics);
          break;
        case ResultOneofCase.SemanticHash:
          if (SemanticHash == null) {
            SemanticHash = new global::Spark.Connect.AnalyzePlanResponse.Types.SemanticHash();
          }
          SemanticHash.MergeFrom(other.SemanticHash);
          break;
        case ResultOneofCase.Persist:
          if (Persist == null) {
            Persist = new global::Spark.Connect.AnalyzePlanResponse.Types.Persist();
          }
          Persist.MergeFrom(other.Persist);
          break;
        case ResultOneofCase.Unpersist:
          if (Unpersist == null) {
            Unpersist = new global::Spark.Connect.AnalyzePlanResponse.Types.Unpersist();
          }
          Unpersist.MergeFrom(other.Unpersist);
          break;
        case ResultOneofCase.GetStorageLevel:
          if (GetStorageLevel == null) {
            GetStorageLevel = new global::Spark.Connect.AnalyzePlanResponse.Types.GetStorageLevel();
          }
          GetStorageLevel.MergeFrom(other.GetStorageLevel);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
          case 18: {
            global::Spark.Connect.AnalyzePlanResponse.Types.Schema subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.Schema();
            if (resultCase_ == ResultOneofCase.Schema) {
              subBuilder.MergeFrom(Schema);
            }
            input.ReadMessage(subBuilder);
            Schema = subBuilder;
            break;
          }
          case 26: {
            global::Spark.Connect.AnalyzePlanResponse.Types.Explain subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.Explain();
            if (resultCase_ == ResultOneofCase.Explain) {
              subBuilder.MergeFrom(Explain);
            }
            input.ReadMessage(subBuilder);
            Explain = subBuilder;
            break;
          }
          case 34: {
            global::Spark.Connect.AnalyzePlanResponse.Types.TreeString subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.TreeString();
            if (resultCase_ == ResultOneofCase.TreeString) {
              subBuilder.MergeFrom(TreeString);
            }
            input.ReadMessage(subBuilder);
            TreeString = subBuilder;
            break;
          }
          case 42: {
            global::Spark.Connect.AnalyzePlanResponse.Types.IsLocal subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.IsLocal();
            if (resultCase_ == ResultOneofCase.IsLocal) {
              subBuilder.MergeFrom(IsLocal);
            }
            input.ReadMessage(subBuilder);
            IsLocal = subBuilder;
            break;
          }
          case 50: {
            global::Spark.Connect.AnalyzePlanResponse.Types.IsStreaming subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.IsStreaming();
            if (resultCase_ == ResultOneofCase.IsStreaming) {
              subBuilder.MergeFrom(IsStreaming);
            }
            input.ReadMessage(subBuilder);
            IsStreaming = subBuilder;
            break;
          }
          case 58: {
            global::Spark.Connect.AnalyzePlanResponse.Types.InputFiles subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.InputFiles();
            if (resultCase_ == ResultOneofCase.InputFiles) {
              subBuilder.MergeFrom(InputFiles);
            }
            input.ReadMessage(subBuilder);
            InputFiles = subBuilder;
            break;
          }
          case 66: {
            global::Spark.Connect.AnalyzePlanResponse.Types.SparkVersion subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.SparkVersion();
            if (resultCase_ == ResultOneofCase.SparkVersion) {
              subBuilder.MergeFrom(SparkVersion);
            }
            input.ReadMessage(subBuilder);
            SparkVersion = subBuilder;
            break;
          }
          case 74: {
            global::Spark.Connect.AnalyzePlanResponse.Types.DDLParse subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.DDLParse();
            if (resultCase_ == ResultOneofCase.DdlParse) {
              subBuilder.MergeFrom(DdlParse);
            }
            input.ReadMessage(subBuilder);
            DdlParse = subBuilder;
            break;
          }
          case 82: {
            global::Spark.Connect.AnalyzePlanResponse.Types.SameSemantics subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.SameSemantics();
            if (resultCase_ == ResultOneofCase.SameSemantics) {
              subBuilder.MergeFrom(SameSemantics);
            }
            input.ReadMessage(subBuilder);
            SameSemantics = subBuilder;
            break;
          }
          case 90: {
            global::Spark.Connect.AnalyzePlanResponse.Types.SemanticHash subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.SemanticHash();
            if (resultCase_ == ResultOneofCase.SemanticHash) {
              subBuilder.MergeFrom(SemanticHash);
            }
            input.ReadMessage(subBuilder);
            SemanticHash = subBuilder;
            break;
          }
          case 98: {
            global::Spark.Connect.AnalyzePlanResponse.Types.Persist subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.Persist();
            if (resultCase_ == ResultOneofCase.Persist) {
              subBuilder.MergeFrom(Persist);
            }
            input.ReadMessage(subBuilder);
            Persist = subBuilder;
            break;
          }
          case 106: {
            global::Spark.Connect.AnalyzePlanResponse.Types.Unpersist subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.Unpersist();
            if (resultCase_ == ResultOneofCase.Unpersist) {
              subBuilder.MergeFrom(Unpersist);
            }
            input.ReadMessage(subBuilder);
            Unpersist = subBuilder;
            break;
          }
          case 114: {
            global::Spark.Connect.AnalyzePlanResponse.Types.GetStorageLevel subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.GetStorageLevel();
            if (resultCase_ == ResultOneofCase.GetStorageLevel) {
              subBuilder.MergeFrom(GetStorageLevel);
            }
            input.ReadMessage(subBuilder);
            GetStorageLevel = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
          case 18: {
            global::Spark.Connect.AnalyzePlanResponse.Types.Schema subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.Schema();
            if (resultCase_ == ResultOneofCase.Schema) {
              subBuilder.MergeFrom(Schema);
            }
            input.ReadMessage(subBuilder);
            Schema = subBuilder;
            break;
          }
          case 26: {
            global::Spark.Connect.AnalyzePlanResponse.Types.Explain subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.Explain();
            if (resultCase_ == ResultOneofCase.Explain) {
              subBuilder.MergeFrom(Explain);
            }
            input.ReadMessage(subBuilder);
            Explain = subBuilder;
            break;
          }
          case 34: {
            global::Spark.Connect.AnalyzePlanResponse.Types.TreeString subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.TreeString();
            if (resultCase_ == ResultOneofCase.TreeString) {
              subBuilder.MergeFrom(TreeString);
            }
            input.ReadMessage(subBuilder);
            TreeString = subBuilder;
            break;
          }
          case 42: {
            global::Spark.Connect.AnalyzePlanResponse.Types.IsLocal subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.IsLocal();
            if (resultCase_ == ResultOneofCase.IsLocal) {
              subBuilder.MergeFrom(IsLocal);
            }
            input.ReadMessage(subBuilder);
            IsLocal = subBuilder;
            break;
          }
          case 50: {
            global::Spark.Connect.AnalyzePlanResponse.Types.IsStreaming subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.IsStreaming();
            if (resultCase_ == ResultOneofCase.IsStreaming) {
              subBuilder.MergeFrom(IsStreaming);
            }
            input.ReadMessage(subBuilder);
            IsStreaming = subBuilder;
            break;
          }
          case 58: {
            global::Spark.Connect.AnalyzePlanResponse.Types.InputFiles subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.InputFiles();
            if (resultCase_ == ResultOneofCase.InputFiles) {
              subBuilder.MergeFrom(InputFiles);
            }
            input.ReadMessage(subBuilder);
            InputFiles = subBuilder;
            break;
          }
          case 66: {
            global::Spark.Connect.AnalyzePlanResponse.Types.SparkVersion subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.SparkVersion();
            if (resultCase_ == ResultOneofCase.SparkVersion) {
              subBuilder.MergeFrom(SparkVersion);
            }
            input.ReadMessage(subBuilder);
            SparkVersion = subBuilder;
            break;
          }
          case 74: {
            global::Spark.Connect.AnalyzePlanResponse.Types.DDLParse subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.DDLParse();
            if (resultCase_ == ResultOneofCase.DdlParse) {
              subBuilder.MergeFrom(DdlParse);
            }
            input.ReadMessage(subBuilder);
            DdlParse = subBuilder;
            break;
          }
          case 82: {
            global::Spark.Connect.AnalyzePlanResponse.Types.SameSemantics subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.SameSemantics();
            if (resultCase_ == ResultOneofCase.SameSemantics) {
              subBuilder.MergeFrom(SameSemantics);
            }
            input.ReadMessage(subBuilder);
            SameSemantics = subBuilder;
            break;
          }
          case 90: {
            global::Spark.Connect.AnalyzePlanResponse.Types.SemanticHash subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.SemanticHash();
            if (resultCase_ == ResultOneofCase.SemanticHash) {
              subBuilder.MergeFrom(SemanticHash);
            }
            input.ReadMessage(subBuilder);
            SemanticHash = subBuilder;
            break;
          }
          case 98: {
            global::Spark.Connect.AnalyzePlanResponse.Types.Persist subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.Persist();
            if (resultCase_ == ResultOneofCase.Persist) {
              subBuilder.MergeFrom(Persist);
            }
            input.ReadMessage(subBuilder);
            Persist = subBuilder;
            break;
          }
          case 106: {
            global::Spark.Connect.AnalyzePlanResponse.Types.Unpersist subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.Unpersist();
            if (resultCase_ == ResultOneofCase.Unpersist) {
              subBuilder.MergeFrom(Unpersist);
            }
            input.ReadMessage(subBuilder);
            Unpersist = subBuilder;
            break;
          }
          case 114: {
            global::Spark.Connect.AnalyzePlanResponse.Types.GetStorageLevel subBuilder = new global::Spark.Connect.AnalyzePlanResponse.Types.GetStorageLevel();
            if (resultCase_ == ResultOneofCase.GetStorageLevel) {
              subBuilder.MergeFrom(GetStorageLevel);
            }
            input.ReadMessage(subBuilder);
            GetStorageLevel = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AnalyzePlanResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class Schema : pb::IMessage<Schema>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Schema> _parser = new pb::MessageParser<Schema>(() => new Schema());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Schema> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Schema() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Schema(Schema other) : this() {
          schema_ = other.schema_ != null ? other.schema_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Schema Clone() {
          return new Schema(this);
        }

        /// <summary>Field number for the "schema" field.</summary>
        public const int Schema_FieldNumber = 1;
        private global::Spark.Connect.DataType schema_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.DataType Schema_ {
          get { return schema_; }
          set {
            schema_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Schema);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Schema other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Schema_, other.Schema_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (schema_ != null) hash ^= Schema_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (schema_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Schema_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (schema_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Schema_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (schema_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schema_);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Schema other) {
          if (other == null) {
            return;
          }
          if (other.schema_ != null) {
            if (schema_ == null) {
              Schema_ = new global::Spark.Connect.DataType();
            }
            Schema_.MergeFrom(other.Schema_);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (schema_ == null) {
                  Schema_ = new global::Spark.Connect.DataType();
                }
                input.ReadMessage(Schema_);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (schema_ == null) {
                  Schema_ = new global::Spark.Connect.DataType();
                }
                input.ReadMessage(Schema_);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Explain : pb::IMessage<Explain>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Explain> _parser = new pb::MessageParser<Explain>(() => new Explain());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Explain> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanResponse.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Explain() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Explain(Explain other) : this() {
          explainString_ = other.explainString_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Explain Clone() {
          return new Explain(this);
        }

        /// <summary>Field number for the "explain_string" field.</summary>
        public const int ExplainStringFieldNumber = 1;
        private string explainString_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ExplainString {
          get { return explainString_; }
          set {
            explainString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Explain);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Explain other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ExplainString != other.ExplainString) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (ExplainString.Length != 0) hash ^= ExplainString.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ExplainString.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ExplainString);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ExplainString.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ExplainString);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (ExplainString.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ExplainString);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Explain other) {
          if (other == null) {
            return;
          }
          if (other.ExplainString.Length != 0) {
            ExplainString = other.ExplainString;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ExplainString = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                ExplainString = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class TreeString : pb::IMessage<TreeString>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TreeString> _parser = new pb::MessageParser<TreeString>(() => new TreeString());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<TreeString> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanResponse.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TreeString() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TreeString(TreeString other) : this() {
          treeString_ = other.treeString_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TreeString Clone() {
          return new TreeString(this);
        }

        /// <summary>Field number for the "tree_string" field.</summary>
        public const int TreeString_FieldNumber = 1;
        private string treeString_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string TreeString_ {
          get { return treeString_; }
          set {
            treeString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as TreeString);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(TreeString other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TreeString_ != other.TreeString_) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (TreeString_.Length != 0) hash ^= TreeString_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (TreeString_.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TreeString_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (TreeString_.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TreeString_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (TreeString_.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TreeString_);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(TreeString other) {
          if (other == null) {
            return;
          }
          if (other.TreeString_.Length != 0) {
            TreeString_ = other.TreeString_;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TreeString_ = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                TreeString_ = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class IsLocal : pb::IMessage<IsLocal>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<IsLocal> _parser = new pb::MessageParser<IsLocal>(() => new IsLocal());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<IsLocal> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanResponse.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public IsLocal() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public IsLocal(IsLocal other) : this() {
          isLocal_ = other.isLocal_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public IsLocal Clone() {
          return new IsLocal(this);
        }

        /// <summary>Field number for the "is_local" field.</summary>
        public const int IsLocal_FieldNumber = 1;
        private bool isLocal_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool IsLocal_ {
          get { return isLocal_; }
          set {
            isLocal_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as IsLocal);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(IsLocal other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (IsLocal_ != other.IsLocal_) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (IsLocal_ != false) hash ^= IsLocal_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (IsLocal_ != false) {
            output.WriteRawTag(8);
            output.WriteBool(IsLocal_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (IsLocal_ != false) {
            output.WriteRawTag(8);
            output.WriteBool(IsLocal_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (IsLocal_ != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(IsLocal other) {
          if (other == null) {
            return;
          }
          if (other.IsLocal_ != false) {
            IsLocal_ = other.IsLocal_;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                IsLocal_ = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                IsLocal_ = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class IsStreaming : pb::IMessage<IsStreaming>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<IsStreaming> _parser = new pb::MessageParser<IsStreaming>(() => new IsStreaming());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<IsStreaming> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanResponse.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public IsStreaming() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public IsStreaming(IsStreaming other) : this() {
          isStreaming_ = other.isStreaming_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public IsStreaming Clone() {
          return new IsStreaming(this);
        }

        /// <summary>Field number for the "is_streaming" field.</summary>
        public const int IsStreaming_FieldNumber = 1;
        private bool isStreaming_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool IsStreaming_ {
          get { return isStreaming_; }
          set {
            isStreaming_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as IsStreaming);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(IsStreaming other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (IsStreaming_ != other.IsStreaming_) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (IsStreaming_ != false) hash ^= IsStreaming_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (IsStreaming_ != false) {
            output.WriteRawTag(8);
            output.WriteBool(IsStreaming_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (IsStreaming_ != false) {
            output.WriteRawTag(8);
            output.WriteBool(IsStreaming_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (IsStreaming_ != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(IsStreaming other) {
          if (other == null) {
            return;
          }
          if (other.IsStreaming_ != false) {
            IsStreaming_ = other.IsStreaming_;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                IsStreaming_ = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                IsStreaming_ = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class InputFiles : pb::IMessage<InputFiles>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<InputFiles> _parser = new pb::MessageParser<InputFiles>(() => new InputFiles());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<InputFiles> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanResponse.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public InputFiles() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public InputFiles(InputFiles other) : this() {
          files_ = other.files_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public InputFiles Clone() {
          return new InputFiles(this);
        }

        /// <summary>Field number for the "files" field.</summary>
        public const int FilesFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_files_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> files_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// A best-effort snapshot of the files that compose this Dataset
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> Files {
          get { return files_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as InputFiles);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(InputFiles other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!files_.Equals(other.files_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= files_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          files_.WriteTo(output, _repeated_files_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          files_.WriteTo(ref output, _repeated_files_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += files_.CalculateSize(_repeated_files_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(InputFiles other) {
          if (other == null) {
            return;
          }
          files_.Add(other.files_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                files_.AddEntriesFrom(input, _repeated_files_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                files_.AddEntriesFrom(ref input, _repeated_files_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class SparkVersion : pb::IMessage<SparkVersion>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SparkVersion> _parser = new pb::MessageParser<SparkVersion>(() => new SparkVersion());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<SparkVersion> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanResponse.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SparkVersion() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SparkVersion(SparkVersion other) : this() {
          version_ = other.version_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SparkVersion Clone() {
          return new SparkVersion(this);
        }

        /// <summary>Field number for the "version" field.</summary>
        public const int VersionFieldNumber = 1;
        private string version_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Version {
          get { return version_; }
          set {
            version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as SparkVersion);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(SparkVersion other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Version != other.Version) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Version.Length != 0) hash ^= Version.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Version.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Version);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Version.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Version);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Version.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(SparkVersion other) {
          if (other == null) {
            return;
          }
          if (other.Version.Length != 0) {
            Version = other.Version;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Version = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Version = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class DDLParse : pb::IMessage<DDLParse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DDLParse> _parser = new pb::MessageParser<DDLParse>(() => new DDLParse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DDLParse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanResponse.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DDLParse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DDLParse(DDLParse other) : this() {
          parsed_ = other.parsed_ != null ? other.parsed_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DDLParse Clone() {
          return new DDLParse(this);
        }

        /// <summary>Field number for the "parsed" field.</summary>
        public const int ParsedFieldNumber = 1;
        private global::Spark.Connect.DataType parsed_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.DataType Parsed {
          get { return parsed_; }
          set {
            parsed_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as DDLParse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DDLParse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Parsed, other.Parsed)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (parsed_ != null) hash ^= Parsed.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (parsed_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Parsed);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (parsed_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Parsed);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (parsed_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Parsed);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DDLParse other) {
          if (other == null) {
            return;
          }
          if (other.parsed_ != null) {
            if (parsed_ == null) {
              Parsed = new global::Spark.Connect.DataType();
            }
            Parsed.MergeFrom(other.Parsed);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (parsed_ == null) {
                  Parsed = new global::Spark.Connect.DataType();
                }
                input.ReadMessage(Parsed);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (parsed_ == null) {
                  Parsed = new global::Spark.Connect.DataType();
                }
                input.ReadMessage(Parsed);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class SameSemantics : pb::IMessage<SameSemantics>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SameSemantics> _parser = new pb::MessageParser<SameSemantics>(() => new SameSemantics());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<SameSemantics> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanResponse.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SameSemantics() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SameSemantics(SameSemantics other) : this() {
          result_ = other.result_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SameSemantics Clone() {
          return new SameSemantics(this);
        }

        /// <summary>Field number for the "result" field.</summary>
        public const int ResultFieldNumber = 1;
        private bool result_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Result {
          get { return result_; }
          set {
            result_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as SameSemantics);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(SameSemantics other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Result != other.Result) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Result != false) hash ^= Result.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Result != false) {
            output.WriteRawTag(8);
            output.WriteBool(Result);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Result != false) {
            output.WriteRawTag(8);
            output.WriteBool(Result);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Result != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(SameSemantics other) {
          if (other == null) {
            return;
          }
          if (other.Result != false) {
            Result = other.Result;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Result = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Result = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class SemanticHash : pb::IMessage<SemanticHash>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SemanticHash> _parser = new pb::MessageParser<SemanticHash>(() => new SemanticHash());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<SemanticHash> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanResponse.Descriptor.NestedTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SemanticHash() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SemanticHash(SemanticHash other) : this() {
          result_ = other.result_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SemanticHash Clone() {
          return new SemanticHash(this);
        }

        /// <summary>Field number for the "result" field.</summary>
        public const int ResultFieldNumber = 1;
        private int result_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Result {
          get { return result_; }
          set {
            result_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as SemanticHash);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(SemanticHash other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Result != other.Result) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Result != 0) hash ^= Result.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Result != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Result);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Result != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Result);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Result != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(SemanticHash other) {
          if (other == null) {
            return;
          }
          if (other.Result != 0) {
            Result = other.Result;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Result = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Result = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Persist : pb::IMessage<Persist>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Persist> _parser = new pb::MessageParser<Persist>(() => new Persist());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Persist> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanResponse.Descriptor.NestedTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Persist() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Persist(Persist other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Persist Clone() {
          return new Persist(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Persist);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Persist other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Persist other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class Unpersist : pb::IMessage<Unpersist>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Unpersist> _parser = new pb::MessageParser<Unpersist>(() => new Unpersist());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Unpersist> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanResponse.Descriptor.NestedTypes[11]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Unpersist() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Unpersist(Unpersist other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Unpersist Clone() {
          return new Unpersist(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Unpersist);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Unpersist other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Unpersist other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class GetStorageLevel : pb::IMessage<GetStorageLevel>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<GetStorageLevel> _parser = new pb::MessageParser<GetStorageLevel>(() => new GetStorageLevel());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<GetStorageLevel> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AnalyzePlanResponse.Descriptor.NestedTypes[12]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetStorageLevel() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetStorageLevel(GetStorageLevel other) : this() {
          storageLevel_ = other.storageLevel_ != null ? other.storageLevel_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetStorageLevel Clone() {
          return new GetStorageLevel(this);
        }

        /// <summary>Field number for the "storage_level" field.</summary>
        public const int StorageLevelFieldNumber = 1;
        private global::Spark.Connect.StorageLevel storageLevel_;
        /// <summary>
        /// (Required) The StorageLevel as a result of get_storage_level request.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.StorageLevel StorageLevel {
          get { return storageLevel_; }
          set {
            storageLevel_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as GetStorageLevel);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(GetStorageLevel other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(StorageLevel, other.StorageLevel)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (storageLevel_ != null) hash ^= StorageLevel.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (storageLevel_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(StorageLevel);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (storageLevel_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(StorageLevel);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (storageLevel_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(StorageLevel);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(GetStorageLevel other) {
          if (other == null) {
            return;
          }
          if (other.storageLevel_ != null) {
            if (storageLevel_ == null) {
              StorageLevel = new global::Spark.Connect.StorageLevel();
            }
            StorageLevel.MergeFrom(other.StorageLevel);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (storageLevel_ == null) {
                  StorageLevel = new global::Spark.Connect.StorageLevel();
                }
                input.ReadMessage(StorageLevel);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (storageLevel_ == null) {
                  StorageLevel = new global::Spark.Connect.StorageLevel();
                }
                input.ReadMessage(StorageLevel);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// A request to be executed by the service.
  /// </summary>
  public sealed partial class ExecutePlanRequest : pb::IMessage<ExecutePlanRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExecutePlanRequest> _parser = new pb::MessageParser<ExecutePlanRequest>(() => new ExecutePlanRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExecutePlanRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spark.Connect.BaseReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecutePlanRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecutePlanRequest(ExecutePlanRequest other) : this() {
      sessionId_ = other.sessionId_;
      userContext_ = other.userContext_ != null ? other.userContext_.Clone() : null;
      plan_ = other.plan_ != null ? other.plan_.Clone() : null;
      clientType_ = other.clientType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecutePlanRequest Clone() {
      return new ExecutePlanRequest(this);
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private string sessionId_ = "";
    /// <summary>
    /// (Required)
    ///
    /// The session_id specifies a spark session for a user id (which is specified
    /// by user_context.user_id). The session_id is set by the client to be able to
    /// collate streaming responses from different queries within the dedicated session.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_context" field.</summary>
    public const int UserContextFieldNumber = 2;
    private global::Spark.Connect.UserContext userContext_;
    /// <summary>
    /// (Required) User context
    ///
    /// user_context.user_id and session+id both identify a unique remote spark session on the
    /// server side.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.UserContext UserContext {
      get { return userContext_; }
      set {
        userContext_ = value;
      }
    }

    /// <summary>Field number for the "plan" field.</summary>
    public const int PlanFieldNumber = 3;
    private global::Spark.Connect.Plan plan_;
    /// <summary>
    /// (Required) The logical plan to be executed / analyzed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.Plan Plan {
      get { return plan_; }
      set {
        plan_ = value;
      }
    }

    /// <summary>Field number for the "client_type" field.</summary>
    public const int ClientTypeFieldNumber = 4;
    private readonly static string ClientTypeDefaultValue = "";

    private string clientType_;
    /// <summary>
    /// Provides optional information about the client sending the request. This field
    /// can be used for language or version specific information and is only intended for
    /// logging purposes and will not be interpreted by the server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientType {
      get { return clientType_ ?? ClientTypeDefaultValue; }
      set {
        clientType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "client_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientType {
      get { return clientType_ != null; }
    }
    /// <summary>Clears the value of the "client_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientType() {
      clientType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExecutePlanRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExecutePlanRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (!object.Equals(UserContext, other.UserContext)) return false;
      if (!object.Equals(Plan, other.Plan)) return false;
      if (ClientType != other.ClientType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (userContext_ != null) hash ^= UserContext.GetHashCode();
      if (plan_ != null) hash ^= Plan.GetHashCode();
      if (HasClientType) hash ^= ClientType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      if (userContext_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserContext);
      }
      if (plan_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Plan);
      }
      if (HasClientType) {
        output.WriteRawTag(34);
        output.WriteString(ClientType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      if (userContext_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserContext);
      }
      if (plan_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Plan);
      }
      if (HasClientType) {
        output.WriteRawTag(34);
        output.WriteString(ClientType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (userContext_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserContext);
      }
      if (plan_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Plan);
      }
      if (HasClientType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExecutePlanRequest other) {
      if (other == null) {
        return;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.userContext_ != null) {
        if (userContext_ == null) {
          UserContext = new global::Spark.Connect.UserContext();
        }
        UserContext.MergeFrom(other.UserContext);
      }
      if (other.plan_ != null) {
        if (plan_ == null) {
          Plan = new global::Spark.Connect.Plan();
        }
        Plan.MergeFrom(other.Plan);
      }
      if (other.HasClientType) {
        ClientType = other.ClientType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
          case 18: {
            if (userContext_ == null) {
              UserContext = new global::Spark.Connect.UserContext();
            }
            input.ReadMessage(UserContext);
            break;
          }
          case 26: {
            if (plan_ == null) {
              Plan = new global::Spark.Connect.Plan();
            }
            input.ReadMessage(Plan);
            break;
          }
          case 34: {
            ClientType = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
          case 18: {
            if (userContext_ == null) {
              UserContext = new global::Spark.Connect.UserContext();
            }
            input.ReadMessage(UserContext);
            break;
          }
          case 26: {
            if (plan_ == null) {
              Plan = new global::Spark.Connect.Plan();
            }
            input.ReadMessage(Plan);
            break;
          }
          case 34: {
            ClientType = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The response of a query, can be one or more for each request. Responses belonging to the
  /// same input query, carry the same `session_id`.
  /// </summary>
  public sealed partial class ExecutePlanResponse : pb::IMessage<ExecutePlanResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExecutePlanResponse> _parser = new pb::MessageParser<ExecutePlanResponse>(() => new ExecutePlanResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExecutePlanResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spark.Connect.BaseReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecutePlanResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecutePlanResponse(ExecutePlanResponse other) : this() {
      sessionId_ = other.sessionId_;
      metrics_ = other.metrics_ != null ? other.metrics_.Clone() : null;
      observedMetrics_ = other.observedMetrics_.Clone();
      schema_ = other.schema_ != null ? other.schema_.Clone() : null;
      switch (other.ResponseTypeCase) {
        case ResponseTypeOneofCase.ArrowBatch:
          ArrowBatch = other.ArrowBatch.Clone();
          break;
        case ResponseTypeOneofCase.SqlCommandResult:
          SqlCommandResult = other.SqlCommandResult.Clone();
          break;
        case ResponseTypeOneofCase.Extension:
          Extension = other.Extension.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecutePlanResponse Clone() {
      return new ExecutePlanResponse(this);
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "arrow_batch" field.</summary>
    public const int ArrowBatchFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.ExecutePlanResponse.Types.ArrowBatch ArrowBatch {
      get { return responseTypeCase_ == ResponseTypeOneofCase.ArrowBatch ? (global::Spark.Connect.ExecutePlanResponse.Types.ArrowBatch) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.ArrowBatch;
      }
    }

    /// <summary>Field number for the "sql_command_result" field.</summary>
    public const int SqlCommandResultFieldNumber = 5;
    /// <summary>
    /// Special case for executing SQL commands.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.ExecutePlanResponse.Types.SqlCommandResult SqlCommandResult {
      get { return responseTypeCase_ == ResponseTypeOneofCase.SqlCommandResult ? (global::Spark.Connect.ExecutePlanResponse.Types.SqlCommandResult) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.SqlCommandResult;
      }
    }

    /// <summary>Field number for the "extension" field.</summary>
    public const int ExtensionFieldNumber = 999;
    /// <summary>
    /// Support arbitrary result objects.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Any Extension {
      get { return responseTypeCase_ == ResponseTypeOneofCase.Extension ? (global::Google.Protobuf.WellKnownTypes.Any) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.Extension;
      }
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 4;
    private global::Spark.Connect.ExecutePlanResponse.Types.Metrics metrics_;
    /// <summary>
    /// Metrics for the query execution. Typically, this field is only present in the last
    /// batch of results and then represent the overall state of the query execution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.ExecutePlanResponse.Types.Metrics Metrics {
      get { return metrics_; }
      set {
        metrics_ = value;
      }
    }

    /// <summary>Field number for the "observed_metrics" field.</summary>
    public const int ObservedMetricsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Spark.Connect.ExecutePlanResponse.Types.ObservedMetrics> _repeated_observedMetrics_codec
        = pb::FieldCodec.ForMessage(50, global::Spark.Connect.ExecutePlanResponse.Types.ObservedMetrics.Parser);
    private readonly pbc::RepeatedField<global::Spark.Connect.ExecutePlanResponse.Types.ObservedMetrics> observedMetrics_ = new pbc::RepeatedField<global::Spark.Connect.ExecutePlanResponse.Types.ObservedMetrics>();
    /// <summary>
    /// The metrics observed during the execution of the query plan.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Spark.Connect.ExecutePlanResponse.Types.ObservedMetrics> ObservedMetrics {
      get { return observedMetrics_; }
    }

    /// <summary>Field number for the "schema" field.</summary>
    public const int SchemaFieldNumber = 7;
    private global::Spark.Connect.DataType schema_;
    /// <summary>
    /// (Optional) The Spark schema. This field is available when `collect` is called.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.DataType Schema {
      get { return schema_; }
      set {
        schema_ = value;
      }
    }

    private object responseType_;
    /// <summary>Enum of possible cases for the "response_type" oneof.</summary>
    public enum ResponseTypeOneofCase {
      None = 0,
      ArrowBatch = 2,
      SqlCommandResult = 5,
      Extension = 999,
    }
    private ResponseTypeOneofCase responseTypeCase_ = ResponseTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResponseTypeOneofCase ResponseTypeCase {
      get { return responseTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResponseType() {
      responseTypeCase_ = ResponseTypeOneofCase.None;
      responseType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExecutePlanResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExecutePlanResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (!object.Equals(ArrowBatch, other.ArrowBatch)) return false;
      if (!object.Equals(SqlCommandResult, other.SqlCommandResult)) return false;
      if (!object.Equals(Extension, other.Extension)) return false;
      if (!object.Equals(Metrics, other.Metrics)) return false;
      if(!observedMetrics_.Equals(other.observedMetrics_)) return false;
      if (!object.Equals(Schema, other.Schema)) return false;
      if (ResponseTypeCase != other.ResponseTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.ArrowBatch) hash ^= ArrowBatch.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.SqlCommandResult) hash ^= SqlCommandResult.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.Extension) hash ^= Extension.GetHashCode();
      if (metrics_ != null) hash ^= Metrics.GetHashCode();
      hash ^= observedMetrics_.GetHashCode();
      if (schema_ != null) hash ^= Schema.GetHashCode();
      hash ^= (int) responseTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ArrowBatch) {
        output.WriteRawTag(18);
        output.WriteMessage(ArrowBatch);
      }
      if (metrics_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Metrics);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.SqlCommandResult) {
        output.WriteRawTag(42);
        output.WriteMessage(SqlCommandResult);
      }
      observedMetrics_.WriteTo(output, _repeated_observedMetrics_codec);
      if (schema_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Schema);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.Extension) {
        output.WriteRawTag(186, 62);
        output.WriteMessage(Extension);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ArrowBatch) {
        output.WriteRawTag(18);
        output.WriteMessage(ArrowBatch);
      }
      if (metrics_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Metrics);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.SqlCommandResult) {
        output.WriteRawTag(42);
        output.WriteMessage(SqlCommandResult);
      }
      observedMetrics_.WriteTo(ref output, _repeated_observedMetrics_codec);
      if (schema_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Schema);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.Extension) {
        output.WriteRawTag(186, 62);
        output.WriteMessage(Extension);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ArrowBatch) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArrowBatch);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.SqlCommandResult) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SqlCommandResult);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.Extension) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Extension);
      }
      if (metrics_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metrics);
      }
      size += observedMetrics_.CalculateSize(_repeated_observedMetrics_codec);
      if (schema_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schema);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExecutePlanResponse other) {
      if (other == null) {
        return;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.metrics_ != null) {
        if (metrics_ == null) {
          Metrics = new global::Spark.Connect.ExecutePlanResponse.Types.Metrics();
        }
        Metrics.MergeFrom(other.Metrics);
      }
      observedMetrics_.Add(other.observedMetrics_);
      if (other.schema_ != null) {
        if (schema_ == null) {
          Schema = new global::Spark.Connect.DataType();
        }
        Schema.MergeFrom(other.Schema);
      }
      switch (other.ResponseTypeCase) {
        case ResponseTypeOneofCase.ArrowBatch:
          if (ArrowBatch == null) {
            ArrowBatch = new global::Spark.Connect.ExecutePlanResponse.Types.ArrowBatch();
          }
          ArrowBatch.MergeFrom(other.ArrowBatch);
          break;
        case ResponseTypeOneofCase.SqlCommandResult:
          if (SqlCommandResult == null) {
            SqlCommandResult = new global::Spark.Connect.ExecutePlanResponse.Types.SqlCommandResult();
          }
          SqlCommandResult.MergeFrom(other.SqlCommandResult);
          break;
        case ResponseTypeOneofCase.Extension:
          if (Extension == null) {
            Extension = new global::Google.Protobuf.WellKnownTypes.Any();
          }
          Extension.MergeFrom(other.Extension);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
          case 18: {
            global::Spark.Connect.ExecutePlanResponse.Types.ArrowBatch subBuilder = new global::Spark.Connect.ExecutePlanResponse.Types.ArrowBatch();
            if (responseTypeCase_ == ResponseTypeOneofCase.ArrowBatch) {
              subBuilder.MergeFrom(ArrowBatch);
            }
            input.ReadMessage(subBuilder);
            ArrowBatch = subBuilder;
            break;
          }
          case 34: {
            if (metrics_ == null) {
              Metrics = new global::Spark.Connect.ExecutePlanResponse.Types.Metrics();
            }
            input.ReadMessage(Metrics);
            break;
          }
          case 42: {
            global::Spark.Connect.ExecutePlanResponse.Types.SqlCommandResult subBuilder = new global::Spark.Connect.ExecutePlanResponse.Types.SqlCommandResult();
            if (responseTypeCase_ == ResponseTypeOneofCase.SqlCommandResult) {
              subBuilder.MergeFrom(SqlCommandResult);
            }
            input.ReadMessage(subBuilder);
            SqlCommandResult = subBuilder;
            break;
          }
          case 50: {
            observedMetrics_.AddEntriesFrom(input, _repeated_observedMetrics_codec);
            break;
          }
          case 58: {
            if (schema_ == null) {
              Schema = new global::Spark.Connect.DataType();
            }
            input.ReadMessage(Schema);
            break;
          }
          case 7994: {
            global::Google.Protobuf.WellKnownTypes.Any subBuilder = new global::Google.Protobuf.WellKnownTypes.Any();
            if (responseTypeCase_ == ResponseTypeOneofCase.Extension) {
              subBuilder.MergeFrom(Extension);
            }
            input.ReadMessage(subBuilder);
            Extension = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
          case 18: {
            global::Spark.Connect.ExecutePlanResponse.Types.ArrowBatch subBuilder = new global::Spark.Connect.ExecutePlanResponse.Types.ArrowBatch();
            if (responseTypeCase_ == ResponseTypeOneofCase.ArrowBatch) {
              subBuilder.MergeFrom(ArrowBatch);
            }
            input.ReadMessage(subBuilder);
            ArrowBatch = subBuilder;
            break;
          }
          case 34: {
            if (metrics_ == null) {
              Metrics = new global::Spark.Connect.ExecutePlanResponse.Types.Metrics();
            }
            input.ReadMessage(Metrics);
            break;
          }
          case 42: {
            global::Spark.Connect.ExecutePlanResponse.Types.SqlCommandResult subBuilder = new global::Spark.Connect.ExecutePlanResponse.Types.SqlCommandResult();
            if (responseTypeCase_ == ResponseTypeOneofCase.SqlCommandResult) {
              subBuilder.MergeFrom(SqlCommandResult);
            }
            input.ReadMessage(subBuilder);
            SqlCommandResult = subBuilder;
            break;
          }
          case 50: {
            observedMetrics_.AddEntriesFrom(ref input, _repeated_observedMetrics_codec);
            break;
          }
          case 58: {
            if (schema_ == null) {
              Schema = new global::Spark.Connect.DataType();
            }
            input.ReadMessage(Schema);
            break;
          }
          case 7994: {
            global::Google.Protobuf.WellKnownTypes.Any subBuilder = new global::Google.Protobuf.WellKnownTypes.Any();
            if (responseTypeCase_ == ResponseTypeOneofCase.Extension) {
              subBuilder.MergeFrom(Extension);
            }
            input.ReadMessage(subBuilder);
            Extension = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ExecutePlanResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// A SQL command returns an opaque Relation that can be directly used as input for the next
      /// call.
      /// </summary>
      public sealed partial class SqlCommandResult : pb::IMessage<SqlCommandResult>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SqlCommandResult> _parser = new pb::MessageParser<SqlCommandResult>(() => new SqlCommandResult());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<SqlCommandResult> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.ExecutePlanResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SqlCommandResult() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SqlCommandResult(SqlCommandResult other) : this() {
          relation_ = other.relation_ != null ? other.relation_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SqlCommandResult Clone() {
          return new SqlCommandResult(this);
        }

        /// <summary>Field number for the "relation" field.</summary>
        public const int RelationFieldNumber = 1;
        private global::Spark.Connect.Relation relation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.Relation Relation {
          get { return relation_; }
          set {
            relation_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as SqlCommandResult);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(SqlCommandResult other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Relation, other.Relation)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (relation_ != null) hash ^= Relation.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (relation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Relation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (relation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Relation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (relation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Relation);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(SqlCommandResult other) {
          if (other == null) {
            return;
          }
          if (other.relation_ != null) {
            if (relation_ == null) {
              Relation = new global::Spark.Connect.Relation();
            }
            Relation.MergeFrom(other.Relation);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (relation_ == null) {
                  Relation = new global::Spark.Connect.Relation();
                }
                input.ReadMessage(Relation);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (relation_ == null) {
                  Relation = new global::Spark.Connect.Relation();
                }
                input.ReadMessage(Relation);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Batch results of metrics.
      /// </summary>
      public sealed partial class ArrowBatch : pb::IMessage<ArrowBatch>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ArrowBatch> _parser = new pb::MessageParser<ArrowBatch>(() => new ArrowBatch());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ArrowBatch> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.ExecutePlanResponse.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ArrowBatch() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ArrowBatch(ArrowBatch other) : this() {
          rowCount_ = other.rowCount_;
          data_ = other.data_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ArrowBatch Clone() {
          return new ArrowBatch(this);
        }

        /// <summary>Field number for the "row_count" field.</summary>
        public const int RowCountFieldNumber = 1;
        private long rowCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long RowCount {
          get { return rowCount_; }
          set {
            rowCount_ = value;
          }
        }

        /// <summary>Field number for the "data" field.</summary>
        public const int DataFieldNumber = 2;
        private pb::ByteString data_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pb::ByteString Data {
          get { return data_; }
          set {
            data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ArrowBatch);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ArrowBatch other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (RowCount != other.RowCount) return false;
          if (Data != other.Data) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (RowCount != 0L) hash ^= RowCount.GetHashCode();
          if (Data.Length != 0) hash ^= Data.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (RowCount != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(RowCount);
          }
          if (Data.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (RowCount != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(RowCount);
          }
          if (Data.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (RowCount != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(RowCount);
          }
          if (Data.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ArrowBatch other) {
          if (other == null) {
            return;
          }
          if (other.RowCount != 0L) {
            RowCount = other.RowCount;
          }
          if (other.Data.Length != 0) {
            Data = other.Data;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                RowCount = input.ReadInt64();
                break;
              }
              case 18: {
                Data = input.ReadBytes();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                RowCount = input.ReadInt64();
                break;
              }
              case 18: {
                Data = input.ReadBytes();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Metrics : pb::IMessage<Metrics>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Metrics> _parser = new pb::MessageParser<Metrics>(() => new Metrics());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Metrics> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.ExecutePlanResponse.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Metrics() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Metrics(Metrics other) : this() {
          metrics_ = other.metrics_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Metrics Clone() {
          return new Metrics(this);
        }

        /// <summary>Field number for the "metrics" field.</summary>
        public const int Metrics_FieldNumber = 1;
        private static readonly pb::FieldCodec<global::Spark.Connect.ExecutePlanResponse.Types.Metrics.Types.MetricObject> _repeated_metrics_codec
            = pb::FieldCodec.ForMessage(10, global::Spark.Connect.ExecutePlanResponse.Types.Metrics.Types.MetricObject.Parser);
        private readonly pbc::RepeatedField<global::Spark.Connect.ExecutePlanResponse.Types.Metrics.Types.MetricObject> metrics_ = new pbc::RepeatedField<global::Spark.Connect.ExecutePlanResponse.Types.Metrics.Types.MetricObject>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Spark.Connect.ExecutePlanResponse.Types.Metrics.Types.MetricObject> Metrics_ {
          get { return metrics_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Metrics);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Metrics other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!metrics_.Equals(other.metrics_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= metrics_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          metrics_.WriteTo(output, _repeated_metrics_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          metrics_.WriteTo(ref output, _repeated_metrics_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += metrics_.CalculateSize(_repeated_metrics_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Metrics other) {
          if (other == null) {
            return;
          }
          metrics_.Add(other.metrics_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                metrics_.AddEntriesFrom(input, _repeated_metrics_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                metrics_.AddEntriesFrom(ref input, _repeated_metrics_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Metrics message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          public sealed partial class MetricObject : pb::IMessage<MetricObject>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<MetricObject> _parser = new pb::MessageParser<MetricObject>(() => new MetricObject());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<MetricObject> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Spark.Connect.ExecutePlanResponse.Types.Metrics.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MetricObject() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MetricObject(MetricObject other) : this() {
              name_ = other.name_;
              planId_ = other.planId_;
              parent_ = other.parent_;
              executionMetrics_ = other.executionMetrics_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MetricObject Clone() {
              return new MetricObject(this);
            }

            /// <summary>Field number for the "name" field.</summary>
            public const int NameFieldNumber = 1;
            private string name_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string Name {
              get { return name_; }
              set {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "plan_id" field.</summary>
            public const int PlanIdFieldNumber = 2;
            private long planId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public long PlanId {
              get { return planId_; }
              set {
                planId_ = value;
              }
            }

            /// <summary>Field number for the "parent" field.</summary>
            public const int ParentFieldNumber = 3;
            private long parent_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public long Parent {
              get { return parent_; }
              set {
                parent_ = value;
              }
            }

            /// <summary>Field number for the "execution_metrics" field.</summary>
            public const int ExecutionMetricsFieldNumber = 4;
            private static readonly pbc::MapField<string, global::Spark.Connect.ExecutePlanResponse.Types.Metrics.Types.MetricValue>.Codec _map_executionMetrics_codec
                = new pbc::MapField<string, global::Spark.Connect.ExecutePlanResponse.Types.Metrics.Types.MetricValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Spark.Connect.ExecutePlanResponse.Types.Metrics.Types.MetricValue.Parser), 34);
            private readonly pbc::MapField<string, global::Spark.Connect.ExecutePlanResponse.Types.Metrics.Types.MetricValue> executionMetrics_ = new pbc::MapField<string, global::Spark.Connect.ExecutePlanResponse.Types.Metrics.Types.MetricValue>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::MapField<string, global::Spark.Connect.ExecutePlanResponse.Types.Metrics.Types.MetricValue> ExecutionMetrics {
              get { return executionMetrics_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as MetricObject);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(MetricObject other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Name != other.Name) return false;
              if (PlanId != other.PlanId) return false;
              if (Parent != other.Parent) return false;
              if (!ExecutionMetrics.Equals(other.ExecutionMetrics)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (Name.Length != 0) hash ^= Name.GetHashCode();
              if (PlanId != 0L) hash ^= PlanId.GetHashCode();
              if (Parent != 0L) hash ^= Parent.GetHashCode();
              hash ^= ExecutionMetrics.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Name.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Name);
              }
              if (PlanId != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(PlanId);
              }
              if (Parent != 0L) {
                output.WriteRawTag(24);
                output.WriteInt64(Parent);
              }
              executionMetrics_.WriteTo(output, _map_executionMetrics_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Name.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Name);
              }
              if (PlanId != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(PlanId);
              }
              if (Parent != 0L) {
                output.WriteRawTag(24);
                output.WriteInt64(Parent);
              }
              executionMetrics_.WriteTo(ref output, _map_executionMetrics_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (Name.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
              }
              if (PlanId != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlanId);
              }
              if (Parent != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(Parent);
              }
              size += executionMetrics_.CalculateSize(_map_executionMetrics_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(MetricObject other) {
              if (other == null) {
                return;
              }
              if (other.Name.Length != 0) {
                Name = other.Name;
              }
              if (other.PlanId != 0L) {
                PlanId = other.PlanId;
              }
              if (other.Parent != 0L) {
                Parent = other.Parent;
              }
              executionMetrics_.MergeFrom(other.executionMetrics_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Name = input.ReadString();
                    break;
                  }
                  case 16: {
                    PlanId = input.ReadInt64();
                    break;
                  }
                  case 24: {
                    Parent = input.ReadInt64();
                    break;
                  }
                  case 34: {
                    executionMetrics_.AddEntriesFrom(input, _map_executionMetrics_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Name = input.ReadString();
                    break;
                  }
                  case 16: {
                    PlanId = input.ReadInt64();
                    break;
                  }
                  case 24: {
                    Parent = input.ReadInt64();
                    break;
                  }
                  case 34: {
                    executionMetrics_.AddEntriesFrom(ref input, _map_executionMetrics_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class MetricValue : pb::IMessage<MetricValue>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<MetricValue> _parser = new pb::MessageParser<MetricValue>(() => new MetricValue());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<MetricValue> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Spark.Connect.ExecutePlanResponse.Types.Metrics.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MetricValue() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MetricValue(MetricValue other) : this() {
              name_ = other.name_;
              value_ = other.value_;
              metricType_ = other.metricType_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MetricValue Clone() {
              return new MetricValue(this);
            }

            /// <summary>Field number for the "name" field.</summary>
            public const int NameFieldNumber = 1;
            private string name_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string Name {
              get { return name_; }
              set {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "value" field.</summary>
            public const int ValueFieldNumber = 2;
            private long value_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public long Value {
              get { return value_; }
              set {
                value_ = value;
              }
            }

            /// <summary>Field number for the "metric_type" field.</summary>
            public const int MetricTypeFieldNumber = 3;
            private string metricType_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string MetricType {
              get { return metricType_; }
              set {
                metricType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as MetricValue);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(MetricValue other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Name != other.Name) return false;
              if (Value != other.Value) return false;
              if (MetricType != other.MetricType) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (Name.Length != 0) hash ^= Name.GetHashCode();
              if (Value != 0L) hash ^= Value.GetHashCode();
              if (MetricType.Length != 0) hash ^= MetricType.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Name.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Name);
              }
              if (Value != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(Value);
              }
              if (MetricType.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(MetricType);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Name.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Name);
              }
              if (Value != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(Value);
              }
              if (MetricType.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(MetricType);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (Name.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
              }
              if (Value != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(Value);
              }
              if (MetricType.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(MetricType);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(MetricValue other) {
              if (other == null) {
                return;
              }
              if (other.Name.Length != 0) {
                Name = other.Name;
              }
              if (other.Value != 0L) {
                Value = other.Value;
              }
              if (other.MetricType.Length != 0) {
                MetricType = other.MetricType;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Name = input.ReadString();
                    break;
                  }
                  case 16: {
                    Value = input.ReadInt64();
                    break;
                  }
                  case 26: {
                    MetricType = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Name = input.ReadString();
                    break;
                  }
                  case 16: {
                    Value = input.ReadInt64();
                    break;
                  }
                  case 26: {
                    MetricType = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      public sealed partial class ObservedMetrics : pb::IMessage<ObservedMetrics>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ObservedMetrics> _parser = new pb::MessageParser<ObservedMetrics>(() => new ObservedMetrics());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ObservedMetrics> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.ExecutePlanResponse.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ObservedMetrics() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ObservedMetrics(ObservedMetrics other) : this() {
          name_ = other.name_;
          values_ = other.values_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ObservedMetrics Clone() {
          return new ObservedMetrics(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "values" field.</summary>
        public const int ValuesFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Spark.Connect.Expression.Types.Literal> _repeated_values_codec
            = pb::FieldCodec.ForMessage(18, global::Spark.Connect.Expression.Types.Literal.Parser);
        private readonly pbc::RepeatedField<global::Spark.Connect.Expression.Types.Literal> values_ = new pbc::RepeatedField<global::Spark.Connect.Expression.Types.Literal>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Spark.Connect.Expression.Types.Literal> Values {
          get { return values_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ObservedMetrics);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ObservedMetrics other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if(!values_.Equals(other.values_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          hash ^= values_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          values_.WriteTo(output, _repeated_values_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          values_.WriteTo(ref output, _repeated_values_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          size += values_.CalculateSize(_repeated_values_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ObservedMetrics other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          values_.Add(other.values_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                values_.AddEntriesFrom(input, _repeated_values_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                values_.AddEntriesFrom(ref input, _repeated_values_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// The key-value pair for the config request and response.
  /// </summary>
  public sealed partial class KeyValue : pb::IMessage<KeyValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeyValue> _parser = new pb::MessageParser<KeyValue>(() => new KeyValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KeyValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spark.Connect.BaseReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyValue(KeyValue other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyValue Clone() {
      return new KeyValue(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    /// <summary>
    /// (Required) The key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private readonly static string ValueDefaultValue = "";

    private string value_;
    /// <summary>
    /// (Optional) The value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Value {
      get { return value_ ?? ValueDefaultValue; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasValue {
      get { return value_ != null; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValue() {
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KeyValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KeyValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KeyValue other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request to update or fetch the configurations.
  /// </summary>
  public sealed partial class ConfigRequest : pb::IMessage<ConfigRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConfigRequest> _parser = new pb::MessageParser<ConfigRequest>(() => new ConfigRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConfigRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spark.Connect.BaseReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConfigRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConfigRequest(ConfigRequest other) : this() {
      sessionId_ = other.sessionId_;
      userContext_ = other.userContext_ != null ? other.userContext_.Clone() : null;
      operation_ = other.operation_ != null ? other.operation_.Clone() : null;
      clientType_ = other.clientType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConfigRequest Clone() {
      return new ConfigRequest(this);
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private string sessionId_ = "";
    /// <summary>
    /// (Required)
    ///
    /// The session_id specifies a spark session for a user id (which is specified
    /// by user_context.user_id). The session_id is set by the client to be able to
    /// collate streaming responses from different queries within the dedicated session.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_context" field.</summary>
    public const int UserContextFieldNumber = 2;
    private global::Spark.Connect.UserContext userContext_;
    /// <summary>
    /// (Required) User context
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.UserContext UserContext {
      get { return userContext_; }
      set {
        userContext_ = value;
      }
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 3;
    private global::Spark.Connect.ConfigRequest.Types.Operation operation_;
    /// <summary>
    /// (Required) The operation for the config.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.ConfigRequest.Types.Operation Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    /// <summary>Field number for the "client_type" field.</summary>
    public const int ClientTypeFieldNumber = 4;
    private readonly static string ClientTypeDefaultValue = "";

    private string clientType_;
    /// <summary>
    /// Provides optional information about the client sending the request. This field
    /// can be used for language or version specific information and is only intended for
    /// logging purposes and will not be interpreted by the server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientType {
      get { return clientType_ ?? ClientTypeDefaultValue; }
      set {
        clientType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "client_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientType {
      get { return clientType_ != null; }
    }
    /// <summary>Clears the value of the "client_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientType() {
      clientType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConfigRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConfigRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (!object.Equals(UserContext, other.UserContext)) return false;
      if (!object.Equals(Operation, other.Operation)) return false;
      if (ClientType != other.ClientType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (userContext_ != null) hash ^= UserContext.GetHashCode();
      if (operation_ != null) hash ^= Operation.GetHashCode();
      if (HasClientType) hash ^= ClientType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      if (userContext_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserContext);
      }
      if (operation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Operation);
      }
      if (HasClientType) {
        output.WriteRawTag(34);
        output.WriteString(ClientType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      if (userContext_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserContext);
      }
      if (operation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Operation);
      }
      if (HasClientType) {
        output.WriteRawTag(34);
        output.WriteString(ClientType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (userContext_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserContext);
      }
      if (operation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Operation);
      }
      if (HasClientType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConfigRequest other) {
      if (other == null) {
        return;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.userContext_ != null) {
        if (userContext_ == null) {
          UserContext = new global::Spark.Connect.UserContext();
        }
        UserContext.MergeFrom(other.UserContext);
      }
      if (other.operation_ != null) {
        if (operation_ == null) {
          Operation = new global::Spark.Connect.ConfigRequest.Types.Operation();
        }
        Operation.MergeFrom(other.Operation);
      }
      if (other.HasClientType) {
        ClientType = other.ClientType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
          case 18: {
            if (userContext_ == null) {
              UserContext = new global::Spark.Connect.UserContext();
            }
            input.ReadMessage(UserContext);
            break;
          }
          case 26: {
            if (operation_ == null) {
              Operation = new global::Spark.Connect.ConfigRequest.Types.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
          case 34: {
            ClientType = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
          case 18: {
            if (userContext_ == null) {
              UserContext = new global::Spark.Connect.UserContext();
            }
            input.ReadMessage(UserContext);
            break;
          }
          case 26: {
            if (operation_ == null) {
              Operation = new global::Spark.Connect.ConfigRequest.Types.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
          case 34: {
            ClientType = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ConfigRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class Operation : pb::IMessage<Operation>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Operation> _parser = new pb::MessageParser<Operation>(() => new Operation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Operation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.ConfigRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Operation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Operation(Operation other) : this() {
          switch (other.OpTypeCase) {
            case OpTypeOneofCase.Set:
              Set = other.Set.Clone();
              break;
            case OpTypeOneofCase.Get:
              Get = other.Get.Clone();
              break;
            case OpTypeOneofCase.GetWithDefault:
              GetWithDefault = other.GetWithDefault.Clone();
              break;
            case OpTypeOneofCase.GetOption:
              GetOption = other.GetOption.Clone();
              break;
            case OpTypeOneofCase.GetAll:
              GetAll = other.GetAll.Clone();
              break;
            case OpTypeOneofCase.Unset:
              Unset = other.Unset.Clone();
              break;
            case OpTypeOneofCase.IsModifiable:
              IsModifiable = other.IsModifiable.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Operation Clone() {
          return new Operation(this);
        }

        /// <summary>Field number for the "set" field.</summary>
        public const int SetFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.ConfigRequest.Types.Set Set {
          get { return opTypeCase_ == OpTypeOneofCase.Set ? (global::Spark.Connect.ConfigRequest.Types.Set) opType_ : null; }
          set {
            opType_ = value;
            opTypeCase_ = value == null ? OpTypeOneofCase.None : OpTypeOneofCase.Set;
          }
        }

        /// <summary>Field number for the "get" field.</summary>
        public const int GetFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.ConfigRequest.Types.Get Get {
          get { return opTypeCase_ == OpTypeOneofCase.Get ? (global::Spark.Connect.ConfigRequest.Types.Get) opType_ : null; }
          set {
            opType_ = value;
            opTypeCase_ = value == null ? OpTypeOneofCase.None : OpTypeOneofCase.Get;
          }
        }

        /// <summary>Field number for the "get_with_default" field.</summary>
        public const int GetWithDefaultFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.ConfigRequest.Types.GetWithDefault GetWithDefault {
          get { return opTypeCase_ == OpTypeOneofCase.GetWithDefault ? (global::Spark.Connect.ConfigRequest.Types.GetWithDefault) opType_ : null; }
          set {
            opType_ = value;
            opTypeCase_ = value == null ? OpTypeOneofCase.None : OpTypeOneofCase.GetWithDefault;
          }
        }

        /// <summary>Field number for the "get_option" field.</summary>
        public const int GetOptionFieldNumber = 4;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.ConfigRequest.Types.GetOption GetOption {
          get { return opTypeCase_ == OpTypeOneofCase.GetOption ? (global::Spark.Connect.ConfigRequest.Types.GetOption) opType_ : null; }
          set {
            opType_ = value;
            opTypeCase_ = value == null ? OpTypeOneofCase.None : OpTypeOneofCase.GetOption;
          }
        }

        /// <summary>Field number for the "get_all" field.</summary>
        public const int GetAllFieldNumber = 5;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.ConfigRequest.Types.GetAll GetAll {
          get { return opTypeCase_ == OpTypeOneofCase.GetAll ? (global::Spark.Connect.ConfigRequest.Types.GetAll) opType_ : null; }
          set {
            opType_ = value;
            opTypeCase_ = value == null ? OpTypeOneofCase.None : OpTypeOneofCase.GetAll;
          }
        }

        /// <summary>Field number for the "unset" field.</summary>
        public const int UnsetFieldNumber = 6;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.ConfigRequest.Types.Unset Unset {
          get { return opTypeCase_ == OpTypeOneofCase.Unset ? (global::Spark.Connect.ConfigRequest.Types.Unset) opType_ : null; }
          set {
            opType_ = value;
            opTypeCase_ = value == null ? OpTypeOneofCase.None : OpTypeOneofCase.Unset;
          }
        }

        /// <summary>Field number for the "is_modifiable" field.</summary>
        public const int IsModifiableFieldNumber = 7;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.ConfigRequest.Types.IsModifiable IsModifiable {
          get { return opTypeCase_ == OpTypeOneofCase.IsModifiable ? (global::Spark.Connect.ConfigRequest.Types.IsModifiable) opType_ : null; }
          set {
            opType_ = value;
            opTypeCase_ = value == null ? OpTypeOneofCase.None : OpTypeOneofCase.IsModifiable;
          }
        }

        private object opType_;
        /// <summary>Enum of possible cases for the "op_type" oneof.</summary>
        public enum OpTypeOneofCase {
          None = 0,
          Set = 1,
          Get = 2,
          GetWithDefault = 3,
          GetOption = 4,
          GetAll = 5,
          Unset = 6,
          IsModifiable = 7,
        }
        private OpTypeOneofCase opTypeCase_ = OpTypeOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OpTypeOneofCase OpTypeCase {
          get { return opTypeCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearOpType() {
          opTypeCase_ = OpTypeOneofCase.None;
          opType_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Operation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Operation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Set, other.Set)) return false;
          if (!object.Equals(Get, other.Get)) return false;
          if (!object.Equals(GetWithDefault, other.GetWithDefault)) return false;
          if (!object.Equals(GetOption, other.GetOption)) return false;
          if (!object.Equals(GetAll, other.GetAll)) return false;
          if (!object.Equals(Unset, other.Unset)) return false;
          if (!object.Equals(IsModifiable, other.IsModifiable)) return false;
          if (OpTypeCase != other.OpTypeCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (opTypeCase_ == OpTypeOneofCase.Set) hash ^= Set.GetHashCode();
          if (opTypeCase_ == OpTypeOneofCase.Get) hash ^= Get.GetHashCode();
          if (opTypeCase_ == OpTypeOneofCase.GetWithDefault) hash ^= GetWithDefault.GetHashCode();
          if (opTypeCase_ == OpTypeOneofCase.GetOption) hash ^= GetOption.GetHashCode();
          if (opTypeCase_ == OpTypeOneofCase.GetAll) hash ^= GetAll.GetHashCode();
          if (opTypeCase_ == OpTypeOneofCase.Unset) hash ^= Unset.GetHashCode();
          if (opTypeCase_ == OpTypeOneofCase.IsModifiable) hash ^= IsModifiable.GetHashCode();
          hash ^= (int) opTypeCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (opTypeCase_ == OpTypeOneofCase.Set) {
            output.WriteRawTag(10);
            output.WriteMessage(Set);
          }
          if (opTypeCase_ == OpTypeOneofCase.Get) {
            output.WriteRawTag(18);
            output.WriteMessage(Get);
          }
          if (opTypeCase_ == OpTypeOneofCase.GetWithDefault) {
            output.WriteRawTag(26);
            output.WriteMessage(GetWithDefault);
          }
          if (opTypeCase_ == OpTypeOneofCase.GetOption) {
            output.WriteRawTag(34);
            output.WriteMessage(GetOption);
          }
          if (opTypeCase_ == OpTypeOneofCase.GetAll) {
            output.WriteRawTag(42);
            output.WriteMessage(GetAll);
          }
          if (opTypeCase_ == OpTypeOneofCase.Unset) {
            output.WriteRawTag(50);
            output.WriteMessage(Unset);
          }
          if (opTypeCase_ == OpTypeOneofCase.IsModifiable) {
            output.WriteRawTag(58);
            output.WriteMessage(IsModifiable);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (opTypeCase_ == OpTypeOneofCase.Set) {
            output.WriteRawTag(10);
            output.WriteMessage(Set);
          }
          if (opTypeCase_ == OpTypeOneofCase.Get) {
            output.WriteRawTag(18);
            output.WriteMessage(Get);
          }
          if (opTypeCase_ == OpTypeOneofCase.GetWithDefault) {
            output.WriteRawTag(26);
            output.WriteMessage(GetWithDefault);
          }
          if (opTypeCase_ == OpTypeOneofCase.GetOption) {
            output.WriteRawTag(34);
            output.WriteMessage(GetOption);
          }
          if (opTypeCase_ == OpTypeOneofCase.GetAll) {
            output.WriteRawTag(42);
            output.WriteMessage(GetAll);
          }
          if (opTypeCase_ == OpTypeOneofCase.Unset) {
            output.WriteRawTag(50);
            output.WriteMessage(Unset);
          }
          if (opTypeCase_ == OpTypeOneofCase.IsModifiable) {
            output.WriteRawTag(58);
            output.WriteMessage(IsModifiable);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (opTypeCase_ == OpTypeOneofCase.Set) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Set);
          }
          if (opTypeCase_ == OpTypeOneofCase.Get) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Get);
          }
          if (opTypeCase_ == OpTypeOneofCase.GetWithDefault) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetWithDefault);
          }
          if (opTypeCase_ == OpTypeOneofCase.GetOption) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetOption);
          }
          if (opTypeCase_ == OpTypeOneofCase.GetAll) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetAll);
          }
          if (opTypeCase_ == OpTypeOneofCase.Unset) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unset);
          }
          if (opTypeCase_ == OpTypeOneofCase.IsModifiable) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(IsModifiable);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Operation other) {
          if (other == null) {
            return;
          }
          switch (other.OpTypeCase) {
            case OpTypeOneofCase.Set:
              if (Set == null) {
                Set = new global::Spark.Connect.ConfigRequest.Types.Set();
              }
              Set.MergeFrom(other.Set);
              break;
            case OpTypeOneofCase.Get:
              if (Get == null) {
                Get = new global::Spark.Connect.ConfigRequest.Types.Get();
              }
              Get.MergeFrom(other.Get);
              break;
            case OpTypeOneofCase.GetWithDefault:
              if (GetWithDefault == null) {
                GetWithDefault = new global::Spark.Connect.ConfigRequest.Types.GetWithDefault();
              }
              GetWithDefault.MergeFrom(other.GetWithDefault);
              break;
            case OpTypeOneofCase.GetOption:
              if (GetOption == null) {
                GetOption = new global::Spark.Connect.ConfigRequest.Types.GetOption();
              }
              GetOption.MergeFrom(other.GetOption);
              break;
            case OpTypeOneofCase.GetAll:
              if (GetAll == null) {
                GetAll = new global::Spark.Connect.ConfigRequest.Types.GetAll();
              }
              GetAll.MergeFrom(other.GetAll);
              break;
            case OpTypeOneofCase.Unset:
              if (Unset == null) {
                Unset = new global::Spark.Connect.ConfigRequest.Types.Unset();
              }
              Unset.MergeFrom(other.Unset);
              break;
            case OpTypeOneofCase.IsModifiable:
              if (IsModifiable == null) {
                IsModifiable = new global::Spark.Connect.ConfigRequest.Types.IsModifiable();
              }
              IsModifiable.MergeFrom(other.IsModifiable);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Spark.Connect.ConfigRequest.Types.Set subBuilder = new global::Spark.Connect.ConfigRequest.Types.Set();
                if (opTypeCase_ == OpTypeOneofCase.Set) {
                  subBuilder.MergeFrom(Set);
                }
                input.ReadMessage(subBuilder);
                Set = subBuilder;
                break;
              }
              case 18: {
                global::Spark.Connect.ConfigRequest.Types.Get subBuilder = new global::Spark.Connect.ConfigRequest.Types.Get();
                if (opTypeCase_ == OpTypeOneofCase.Get) {
                  subBuilder.MergeFrom(Get);
                }
                input.ReadMessage(subBuilder);
                Get = subBuilder;
                break;
              }
              case 26: {
                global::Spark.Connect.ConfigRequest.Types.GetWithDefault subBuilder = new global::Spark.Connect.ConfigRequest.Types.GetWithDefault();
                if (opTypeCase_ == OpTypeOneofCase.GetWithDefault) {
                  subBuilder.MergeFrom(GetWithDefault);
                }
                input.ReadMessage(subBuilder);
                GetWithDefault = subBuilder;
                break;
              }
              case 34: {
                global::Spark.Connect.ConfigRequest.Types.GetOption subBuilder = new global::Spark.Connect.ConfigRequest.Types.GetOption();
                if (opTypeCase_ == OpTypeOneofCase.GetOption) {
                  subBuilder.MergeFrom(GetOption);
                }
                input.ReadMessage(subBuilder);
                GetOption = subBuilder;
                break;
              }
              case 42: {
                global::Spark.Connect.ConfigRequest.Types.GetAll subBuilder = new global::Spark.Connect.ConfigRequest.Types.GetAll();
                if (opTypeCase_ == OpTypeOneofCase.GetAll) {
                  subBuilder.MergeFrom(GetAll);
                }
                input.ReadMessage(subBuilder);
                GetAll = subBuilder;
                break;
              }
              case 50: {
                global::Spark.Connect.ConfigRequest.Types.Unset subBuilder = new global::Spark.Connect.ConfigRequest.Types.Unset();
                if (opTypeCase_ == OpTypeOneofCase.Unset) {
                  subBuilder.MergeFrom(Unset);
                }
                input.ReadMessage(subBuilder);
                Unset = subBuilder;
                break;
              }
              case 58: {
                global::Spark.Connect.ConfigRequest.Types.IsModifiable subBuilder = new global::Spark.Connect.ConfigRequest.Types.IsModifiable();
                if (opTypeCase_ == OpTypeOneofCase.IsModifiable) {
                  subBuilder.MergeFrom(IsModifiable);
                }
                input.ReadMessage(subBuilder);
                IsModifiable = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                global::Spark.Connect.ConfigRequest.Types.Set subBuilder = new global::Spark.Connect.ConfigRequest.Types.Set();
                if (opTypeCase_ == OpTypeOneofCase.Set) {
                  subBuilder.MergeFrom(Set);
                }
                input.ReadMessage(subBuilder);
                Set = subBuilder;
                break;
              }
              case 18: {
                global::Spark.Connect.ConfigRequest.Types.Get subBuilder = new global::Spark.Connect.ConfigRequest.Types.Get();
                if (opTypeCase_ == OpTypeOneofCase.Get) {
                  subBuilder.MergeFrom(Get);
                }
                input.ReadMessage(subBuilder);
                Get = subBuilder;
                break;
              }
              case 26: {
                global::Spark.Connect.ConfigRequest.Types.GetWithDefault subBuilder = new global::Spark.Connect.ConfigRequest.Types.GetWithDefault();
                if (opTypeCase_ == OpTypeOneofCase.GetWithDefault) {
                  subBuilder.MergeFrom(GetWithDefault);
                }
                input.ReadMessage(subBuilder);
                GetWithDefault = subBuilder;
                break;
              }
              case 34: {
                global::Spark.Connect.ConfigRequest.Types.GetOption subBuilder = new global::Spark.Connect.ConfigRequest.Types.GetOption();
                if (opTypeCase_ == OpTypeOneofCase.GetOption) {
                  subBuilder.MergeFrom(GetOption);
                }
                input.ReadMessage(subBuilder);
                GetOption = subBuilder;
                break;
              }
              case 42: {
                global::Spark.Connect.ConfigRequest.Types.GetAll subBuilder = new global::Spark.Connect.ConfigRequest.Types.GetAll();
                if (opTypeCase_ == OpTypeOneofCase.GetAll) {
                  subBuilder.MergeFrom(GetAll);
                }
                input.ReadMessage(subBuilder);
                GetAll = subBuilder;
                break;
              }
              case 50: {
                global::Spark.Connect.ConfigRequest.Types.Unset subBuilder = new global::Spark.Connect.ConfigRequest.Types.Unset();
                if (opTypeCase_ == OpTypeOneofCase.Unset) {
                  subBuilder.MergeFrom(Unset);
                }
                input.ReadMessage(subBuilder);
                Unset = subBuilder;
                break;
              }
              case 58: {
                global::Spark.Connect.ConfigRequest.Types.IsModifiable subBuilder = new global::Spark.Connect.ConfigRequest.Types.IsModifiable();
                if (opTypeCase_ == OpTypeOneofCase.IsModifiable) {
                  subBuilder.MergeFrom(IsModifiable);
                }
                input.ReadMessage(subBuilder);
                IsModifiable = subBuilder;
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Set : pb::IMessage<Set>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Set> _parser = new pb::MessageParser<Set>(() => new Set());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Set> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.ConfigRequest.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Set() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Set(Set other) : this() {
          pairs_ = other.pairs_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Set Clone() {
          return new Set(this);
        }

        /// <summary>Field number for the "pairs" field.</summary>
        public const int PairsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Spark.Connect.KeyValue> _repeated_pairs_codec
            = pb::FieldCodec.ForMessage(10, global::Spark.Connect.KeyValue.Parser);
        private readonly pbc::RepeatedField<global::Spark.Connect.KeyValue> pairs_ = new pbc::RepeatedField<global::Spark.Connect.KeyValue>();
        /// <summary>
        /// (Required) The config key-value pairs to set.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Spark.Connect.KeyValue> Pairs {
          get { return pairs_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Set);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Set other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!pairs_.Equals(other.pairs_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= pairs_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          pairs_.WriteTo(output, _repeated_pairs_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          pairs_.WriteTo(ref output, _repeated_pairs_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += pairs_.CalculateSize(_repeated_pairs_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Set other) {
          if (other == null) {
            return;
          }
          pairs_.Add(other.pairs_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                pairs_.AddEntriesFrom(input, _repeated_pairs_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                pairs_.AddEntriesFrom(ref input, _repeated_pairs_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Get : pb::IMessage<Get>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Get> _parser = new pb::MessageParser<Get>(() => new Get());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Get> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.ConfigRequest.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Get() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Get(Get other) : this() {
          keys_ = other.keys_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Get Clone() {
          return new Get(this);
        }

        /// <summary>Field number for the "keys" field.</summary>
        public const int KeysFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_keys_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> keys_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// (Required) The config keys to get.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> Keys {
          get { return keys_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Get);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Get other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!keys_.Equals(other.keys_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= keys_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          keys_.WriteTo(output, _repeated_keys_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          keys_.WriteTo(ref output, _repeated_keys_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += keys_.CalculateSize(_repeated_keys_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Get other) {
          if (other == null) {
            return;
          }
          keys_.Add(other.keys_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                keys_.AddEntriesFrom(input, _repeated_keys_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                keys_.AddEntriesFrom(ref input, _repeated_keys_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class GetWithDefault : pb::IMessage<GetWithDefault>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<GetWithDefault> _parser = new pb::MessageParser<GetWithDefault>(() => new GetWithDefault());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<GetWithDefault> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.ConfigRequest.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetWithDefault() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetWithDefault(GetWithDefault other) : this() {
          pairs_ = other.pairs_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetWithDefault Clone() {
          return new GetWithDefault(this);
        }

        /// <summary>Field number for the "pairs" field.</summary>
        public const int PairsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Spark.Connect.KeyValue> _repeated_pairs_codec
            = pb::FieldCodec.ForMessage(10, global::Spark.Connect.KeyValue.Parser);
        private readonly pbc::RepeatedField<global::Spark.Connect.KeyValue> pairs_ = new pbc::RepeatedField<global::Spark.Connect.KeyValue>();
        /// <summary>
        /// (Required) The config key-value paris to get. The value will be used as the default value.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Spark.Connect.KeyValue> Pairs {
          get { return pairs_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as GetWithDefault);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(GetWithDefault other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!pairs_.Equals(other.pairs_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= pairs_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          pairs_.WriteTo(output, _repeated_pairs_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          pairs_.WriteTo(ref output, _repeated_pairs_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += pairs_.CalculateSize(_repeated_pairs_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(GetWithDefault other) {
          if (other == null) {
            return;
          }
          pairs_.Add(other.pairs_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                pairs_.AddEntriesFrom(input, _repeated_pairs_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                pairs_.AddEntriesFrom(ref input, _repeated_pairs_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class GetOption : pb::IMessage<GetOption>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<GetOption> _parser = new pb::MessageParser<GetOption>(() => new GetOption());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<GetOption> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.ConfigRequest.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetOption() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetOption(GetOption other) : this() {
          keys_ = other.keys_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetOption Clone() {
          return new GetOption(this);
        }

        /// <summary>Field number for the "keys" field.</summary>
        public const int KeysFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_keys_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> keys_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// (Required) The config keys to get optionally.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> Keys {
          get { return keys_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as GetOption);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(GetOption other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!keys_.Equals(other.keys_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= keys_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          keys_.WriteTo(output, _repeated_keys_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          keys_.WriteTo(ref output, _repeated_keys_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += keys_.CalculateSize(_repeated_keys_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(GetOption other) {
          if (other == null) {
            return;
          }
          keys_.Add(other.keys_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                keys_.AddEntriesFrom(input, _repeated_keys_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                keys_.AddEntriesFrom(ref input, _repeated_keys_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class GetAll : pb::IMessage<GetAll>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<GetAll> _parser = new pb::MessageParser<GetAll>(() => new GetAll());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<GetAll> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.ConfigRequest.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetAll() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetAll(GetAll other) : this() {
          prefix_ = other.prefix_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetAll Clone() {
          return new GetAll(this);
        }

        /// <summary>Field number for the "prefix" field.</summary>
        public const int PrefixFieldNumber = 1;
        private readonly static string PrefixDefaultValue = "";

        private string prefix_;
        /// <summary>
        /// (Optional) The prefix of the config key to get.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Prefix {
          get { return prefix_ ?? PrefixDefaultValue; }
          set {
            prefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "prefix" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPrefix {
          get { return prefix_ != null; }
        }
        /// <summary>Clears the value of the "prefix" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPrefix() {
          prefix_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as GetAll);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(GetAll other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Prefix != other.Prefix) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasPrefix) hash ^= Prefix.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasPrefix) {
            output.WriteRawTag(10);
            output.WriteString(Prefix);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasPrefix) {
            output.WriteRawTag(10);
            output.WriteString(Prefix);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasPrefix) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Prefix);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(GetAll other) {
          if (other == null) {
            return;
          }
          if (other.HasPrefix) {
            Prefix = other.Prefix;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Prefix = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Prefix = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Unset : pb::IMessage<Unset>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Unset> _parser = new pb::MessageParser<Unset>(() => new Unset());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Unset> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.ConfigRequest.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Unset() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Unset(Unset other) : this() {
          keys_ = other.keys_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Unset Clone() {
          return new Unset(this);
        }

        /// <summary>Field number for the "keys" field.</summary>
        public const int KeysFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_keys_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> keys_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// (Required) The config keys to unset.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> Keys {
          get { return keys_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Unset);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Unset other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!keys_.Equals(other.keys_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= keys_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          keys_.WriteTo(output, _repeated_keys_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          keys_.WriteTo(ref output, _repeated_keys_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += keys_.CalculateSize(_repeated_keys_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Unset other) {
          if (other == null) {
            return;
          }
          keys_.Add(other.keys_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                keys_.AddEntriesFrom(input, _repeated_keys_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                keys_.AddEntriesFrom(ref input, _repeated_keys_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class IsModifiable : pb::IMessage<IsModifiable>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<IsModifiable> _parser = new pb::MessageParser<IsModifiable>(() => new IsModifiable());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<IsModifiable> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.ConfigRequest.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public IsModifiable() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public IsModifiable(IsModifiable other) : this() {
          keys_ = other.keys_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public IsModifiable Clone() {
          return new IsModifiable(this);
        }

        /// <summary>Field number for the "keys" field.</summary>
        public const int KeysFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_keys_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> keys_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// (Required) The config keys to check the config is modifiable.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> Keys {
          get { return keys_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as IsModifiable);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(IsModifiable other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!keys_.Equals(other.keys_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= keys_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          keys_.WriteTo(output, _repeated_keys_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          keys_.WriteTo(ref output, _repeated_keys_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += keys_.CalculateSize(_repeated_keys_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(IsModifiable other) {
          if (other == null) {
            return;
          }
          keys_.Add(other.keys_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                keys_.AddEntriesFrom(input, _repeated_keys_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                keys_.AddEntriesFrom(ref input, _repeated_keys_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Response to the config request.
  /// </summary>
  public sealed partial class ConfigResponse : pb::IMessage<ConfigResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConfigResponse> _parser = new pb::MessageParser<ConfigResponse>(() => new ConfigResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConfigResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spark.Connect.BaseReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConfigResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConfigResponse(ConfigResponse other) : this() {
      sessionId_ = other.sessionId_;
      pairs_ = other.pairs_.Clone();
      warnings_ = other.warnings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConfigResponse Clone() {
      return new ConfigResponse(this);
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pairs" field.</summary>
    public const int PairsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Spark.Connect.KeyValue> _repeated_pairs_codec
        = pb::FieldCodec.ForMessage(18, global::Spark.Connect.KeyValue.Parser);
    private readonly pbc::RepeatedField<global::Spark.Connect.KeyValue> pairs_ = new pbc::RepeatedField<global::Spark.Connect.KeyValue>();
    /// <summary>
    /// (Optional) The result key-value pairs.
    ///
    /// Available when the operation is 'Get', 'GetWithDefault', 'GetOption', 'GetAll'.
    /// Also available for the operation 'IsModifiable' with boolean string "true" and "false".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Spark.Connect.KeyValue> Pairs {
      get { return pairs_; }
    }

    /// <summary>Field number for the "warnings" field.</summary>
    public const int WarningsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_warnings_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> warnings_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// (Optional)
    ///
    /// Warning messages for deprecated or unsupported configurations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Warnings {
      get { return warnings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConfigResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConfigResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if(!pairs_.Equals(other.pairs_)) return false;
      if(!warnings_.Equals(other.warnings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      hash ^= pairs_.GetHashCode();
      hash ^= warnings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      pairs_.WriteTo(output, _repeated_pairs_codec);
      warnings_.WriteTo(output, _repeated_warnings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      pairs_.WriteTo(ref output, _repeated_pairs_codec);
      warnings_.WriteTo(ref output, _repeated_warnings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      size += pairs_.CalculateSize(_repeated_pairs_codec);
      size += warnings_.CalculateSize(_repeated_warnings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConfigResponse other) {
      if (other == null) {
        return;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      pairs_.Add(other.pairs_);
      warnings_.Add(other.warnings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
          case 18: {
            pairs_.AddEntriesFrom(input, _repeated_pairs_codec);
            break;
          }
          case 26: {
            warnings_.AddEntriesFrom(input, _repeated_warnings_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
          case 18: {
            pairs_.AddEntriesFrom(ref input, _repeated_pairs_codec);
            break;
          }
          case 26: {
            warnings_.AddEntriesFrom(ref input, _repeated_warnings_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request to transfer client-local artifacts.
  /// </summary>
  public sealed partial class AddArtifactsRequest : pb::IMessage<AddArtifactsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AddArtifactsRequest> _parser = new pb::MessageParser<AddArtifactsRequest>(() => new AddArtifactsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AddArtifactsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spark.Connect.BaseReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddArtifactsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddArtifactsRequest(AddArtifactsRequest other) : this() {
      sessionId_ = other.sessionId_;
      userContext_ = other.userContext_ != null ? other.userContext_.Clone() : null;
      clientType_ = other.clientType_;
      switch (other.PayloadCase) {
        case PayloadOneofCase.Batch:
          Batch = other.Batch.Clone();
          break;
        case PayloadOneofCase.BeginChunk:
          BeginChunk = other.BeginChunk.Clone();
          break;
        case PayloadOneofCase.Chunk:
          Chunk = other.Chunk.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddArtifactsRequest Clone() {
      return new AddArtifactsRequest(this);
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private string sessionId_ = "";
    /// <summary>
    /// (Required)
    ///
    /// The session_id specifies a spark session for a user id (which is specified
    /// by user_context.user_id). The session_id is set by the client to be able to
    /// collate streaming responses from different queries within the dedicated session.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_context" field.</summary>
    public const int UserContextFieldNumber = 2;
    private global::Spark.Connect.UserContext userContext_;
    /// <summary>
    /// User context
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.UserContext UserContext {
      get { return userContext_; }
      set {
        userContext_ = value;
      }
    }

    /// <summary>Field number for the "client_type" field.</summary>
    public const int ClientTypeFieldNumber = 6;
    private readonly static string ClientTypeDefaultValue = "";

    private string clientType_;
    /// <summary>
    /// Provides optional information about the client sending the request. This field
    /// can be used for language or version specific information and is only intended for
    /// logging purposes and will not be interpreted by the server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientType {
      get { return clientType_ ?? ClientTypeDefaultValue; }
      set {
        clientType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "client_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientType {
      get { return clientType_ != null; }
    }
    /// <summary>Clears the value of the "client_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientType() {
      clientType_ = null;
    }

    /// <summary>Field number for the "batch" field.</summary>
    public const int BatchFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AddArtifactsRequest.Types.Batch Batch {
      get { return payloadCase_ == PayloadOneofCase.Batch ? (global::Spark.Connect.AddArtifactsRequest.Types.Batch) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Batch;
      }
    }

    /// <summary>Field number for the "begin_chunk" field.</summary>
    public const int BeginChunkFieldNumber = 4;
    /// <summary>
    /// The metadata and the initial chunk of a large artifact chunked into multiple requests.
    /// The server side is notified about the total size of the large artifact as well as the
    /// number of chunks to expect.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AddArtifactsRequest.Types.BeginChunkedArtifact BeginChunk {
      get { return payloadCase_ == PayloadOneofCase.BeginChunk ? (global::Spark.Connect.AddArtifactsRequest.Types.BeginChunkedArtifact) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.BeginChunk;
      }
    }

    /// <summary>Field number for the "chunk" field.</summary>
    public const int ChunkFieldNumber = 5;
    /// <summary>
    /// A chunk of an artifact excluding metadata. This can be any chunk of a large artifact
    /// excluding the first chunk (which is included in `BeginChunkedArtifact`).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Spark.Connect.AddArtifactsRequest.Types.ArtifactChunk Chunk {
      get { return payloadCase_ == PayloadOneofCase.Chunk ? (global::Spark.Connect.AddArtifactsRequest.Types.ArtifactChunk) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Chunk;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      Batch = 3,
      BeginChunk = 4,
      Chunk = 5,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AddArtifactsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AddArtifactsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (!object.Equals(UserContext, other.UserContext)) return false;
      if (ClientType != other.ClientType) return false;
      if (!object.Equals(Batch, other.Batch)) return false;
      if (!object.Equals(BeginChunk, other.BeginChunk)) return false;
      if (!object.Equals(Chunk, other.Chunk)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (userContext_ != null) hash ^= UserContext.GetHashCode();
      if (HasClientType) hash ^= ClientType.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Batch) hash ^= Batch.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.BeginChunk) hash ^= BeginChunk.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Chunk) hash ^= Chunk.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      if (userContext_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserContext);
      }
      if (payloadCase_ == PayloadOneofCase.Batch) {
        output.WriteRawTag(26);
        output.WriteMessage(Batch);
      }
      if (payloadCase_ == PayloadOneofCase.BeginChunk) {
        output.WriteRawTag(34);
        output.WriteMessage(BeginChunk);
      }
      if (payloadCase_ == PayloadOneofCase.Chunk) {
        output.WriteRawTag(42);
        output.WriteMessage(Chunk);
      }
      if (HasClientType) {
        output.WriteRawTag(50);
        output.WriteString(ClientType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      if (userContext_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserContext);
      }
      if (payloadCase_ == PayloadOneofCase.Batch) {
        output.WriteRawTag(26);
        output.WriteMessage(Batch);
      }
      if (payloadCase_ == PayloadOneofCase.BeginChunk) {
        output.WriteRawTag(34);
        output.WriteMessage(BeginChunk);
      }
      if (payloadCase_ == PayloadOneofCase.Chunk) {
        output.WriteRawTag(42);
        output.WriteMessage(Chunk);
      }
      if (HasClientType) {
        output.WriteRawTag(50);
        output.WriteString(ClientType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (userContext_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserContext);
      }
      if (HasClientType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientType);
      }
      if (payloadCase_ == PayloadOneofCase.Batch) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Batch);
      }
      if (payloadCase_ == PayloadOneofCase.BeginChunk) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BeginChunk);
      }
      if (payloadCase_ == PayloadOneofCase.Chunk) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Chunk);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AddArtifactsRequest other) {
      if (other == null) {
        return;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.userContext_ != null) {
        if (userContext_ == null) {
          UserContext = new global::Spark.Connect.UserContext();
        }
        UserContext.MergeFrom(other.UserContext);
      }
      if (other.HasClientType) {
        ClientType = other.ClientType;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.Batch:
          if (Batch == null) {
            Batch = new global::Spark.Connect.AddArtifactsRequest.Types.Batch();
          }
          Batch.MergeFrom(other.Batch);
          break;
        case PayloadOneofCase.BeginChunk:
          if (BeginChunk == null) {
            BeginChunk = new global::Spark.Connect.AddArtifactsRequest.Types.BeginChunkedArtifact();
          }
          BeginChunk.MergeFrom(other.BeginChunk);
          break;
        case PayloadOneofCase.Chunk:
          if (Chunk == null) {
            Chunk = new global::Spark.Connect.AddArtifactsRequest.Types.ArtifactChunk();
          }
          Chunk.MergeFrom(other.Chunk);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
          case 18: {
            if (userContext_ == null) {
              UserContext = new global::Spark.Connect.UserContext();
            }
            input.ReadMessage(UserContext);
            break;
          }
          case 26: {
            global::Spark.Connect.AddArtifactsRequest.Types.Batch subBuilder = new global::Spark.Connect.AddArtifactsRequest.Types.Batch();
            if (payloadCase_ == PayloadOneofCase.Batch) {
              subBuilder.MergeFrom(Batch);
            }
            input.ReadMessage(subBuilder);
            Batch = subBuilder;
            break;
          }
          case 34: {
            global::Spark.Connect.AddArtifactsRequest.Types.BeginChunkedArtifact subBuilder = new global::Spark.Connect.AddArtifactsRequest.Types.BeginChunkedArtifact();
            if (payloadCase_ == PayloadOneofCase.BeginChunk) {
              subBuilder.MergeFrom(BeginChunk);
            }
            input.ReadMessage(subBuilder);
            BeginChunk = subBuilder;
            break;
          }
          case 42: {
            global::Spark.Connect.AddArtifactsRequest.Types.ArtifactChunk subBuilder = new global::Spark.Connect.AddArtifactsRequest.Types.ArtifactChunk();
            if (payloadCase_ == PayloadOneofCase.Chunk) {
              subBuilder.MergeFrom(Chunk);
            }
            input.ReadMessage(subBuilder);
            Chunk = subBuilder;
            break;
          }
          case 50: {
            ClientType = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
          case 18: {
            if (userContext_ == null) {
              UserContext = new global::Spark.Connect.UserContext();
            }
            input.ReadMessage(UserContext);
            break;
          }
          case 26: {
            global::Spark.Connect.AddArtifactsRequest.Types.Batch subBuilder = new global::Spark.Connect.AddArtifactsRequest.Types.Batch();
            if (payloadCase_ == PayloadOneofCase.Batch) {
              subBuilder.MergeFrom(Batch);
            }
            input.ReadMessage(subBuilder);
            Batch = subBuilder;
            break;
          }
          case 34: {
            global::Spark.Connect.AddArtifactsRequest.Types.BeginChunkedArtifact subBuilder = new global::Spark.Connect.AddArtifactsRequest.Types.BeginChunkedArtifact();
            if (payloadCase_ == PayloadOneofCase.BeginChunk) {
              subBuilder.MergeFrom(BeginChunk);
            }
            input.ReadMessage(subBuilder);
            BeginChunk = subBuilder;
            break;
          }
          case 42: {
            global::Spark.Connect.AddArtifactsRequest.Types.ArtifactChunk subBuilder = new global::Spark.Connect.AddArtifactsRequest.Types.ArtifactChunk();
            if (payloadCase_ == PayloadOneofCase.Chunk) {
              subBuilder.MergeFrom(Chunk);
            }
            input.ReadMessage(subBuilder);
            Chunk = subBuilder;
            break;
          }
          case 50: {
            ClientType = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AddArtifactsRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// A chunk of an Artifact.
      /// </summary>
      public sealed partial class ArtifactChunk : pb::IMessage<ArtifactChunk>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ArtifactChunk> _parser = new pb::MessageParser<ArtifactChunk>(() => new ArtifactChunk());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ArtifactChunk> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AddArtifactsRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ArtifactChunk() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ArtifactChunk(ArtifactChunk other) : this() {
          data_ = other.data_;
          crc_ = other.crc_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ArtifactChunk Clone() {
          return new ArtifactChunk(this);
        }

        /// <summary>Field number for the "data" field.</summary>
        public const int DataFieldNumber = 1;
        private pb::ByteString data_ = pb::ByteString.Empty;
        /// <summary>
        /// Data chunk.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pb::ByteString Data {
          get { return data_; }
          set {
            data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "crc" field.</summary>
        public const int CrcFieldNumber = 2;
        private long crc_;
        /// <summary>
        /// CRC to allow server to verify integrity of the chunk.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long Crc {
          get { return crc_; }
          set {
            crc_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ArtifactChunk);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ArtifactChunk other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Data != other.Data) return false;
          if (Crc != other.Crc) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Data.Length != 0) hash ^= Data.GetHashCode();
          if (Crc != 0L) hash ^= Crc.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Data.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Data);
          }
          if (Crc != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Crc);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Data.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Data);
          }
          if (Crc != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Crc);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Data.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
          }
          if (Crc != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Crc);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ArtifactChunk other) {
          if (other == null) {
            return;
          }
          if (other.Data.Length != 0) {
            Data = other.Data;
          }
          if (other.Crc != 0L) {
            Crc = other.Crc;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Data = input.ReadBytes();
                break;
              }
              case 16: {
                Crc = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Data = input.ReadBytes();
                break;
              }
              case 16: {
                Crc = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// An artifact that is contained in a single `ArtifactChunk`.
      /// Generally, this message represents tiny artifacts such as REPL-generated class files.
      /// </summary>
      public sealed partial class SingleChunkArtifact : pb::IMessage<SingleChunkArtifact>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SingleChunkArtifact> _parser = new pb::MessageParser<SingleChunkArtifact>(() => new SingleChunkArtifact());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<SingleChunkArtifact> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AddArtifactsRequest.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SingleChunkArtifact() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SingleChunkArtifact(SingleChunkArtifact other) : this() {
          name_ = other.name_;
          data_ = other.data_ != null ? other.data_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SingleChunkArtifact Clone() {
          return new SingleChunkArtifact(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        /// <summary>
        /// The name of the artifact is expected in the form of a "Relative Path" that is made up of a
        /// sequence of directories and the final file element.
        /// Examples of "Relative Path"s: "jars/test.jar", "classes/xyz.class", "abc.xyz", "a/b/X.jar".
        /// The server is expected to maintain the hierarchy of files as defined by their name. (i.e
        /// The relative path of the file on the server's filesystem will be the same as the name of
        /// the provided artifact)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "data" field.</summary>
        public const int DataFieldNumber = 2;
        private global::Spark.Connect.AddArtifactsRequest.Types.ArtifactChunk data_;
        /// <summary>
        /// A single data chunk.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.AddArtifactsRequest.Types.ArtifactChunk Data {
          get { return data_; }
          set {
            data_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as SingleChunkArtifact);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(SingleChunkArtifact other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (!object.Equals(Data, other.Data)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (data_ != null) hash ^= Data.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (data_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (data_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (data_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(SingleChunkArtifact other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.data_ != null) {
            if (data_ == null) {
              Data = new global::Spark.Connect.AddArtifactsRequest.Types.ArtifactChunk();
            }
            Data.MergeFrom(other.Data);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                if (data_ == null) {
                  Data = new global::Spark.Connect.AddArtifactsRequest.Types.ArtifactChunk();
                }
                input.ReadMessage(Data);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                if (data_ == null) {
                  Data = new global::Spark.Connect.AddArtifactsRequest.Types.ArtifactChunk();
                }
                input.ReadMessage(Data);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// A number of `SingleChunkArtifact` batched into a single RPC.
      /// </summary>
      public sealed partial class Batch : pb::IMessage<Batch>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Batch> _parser = new pb::MessageParser<Batch>(() => new Batch());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Batch> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AddArtifactsRequest.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Batch() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Batch(Batch other) : this() {
          artifacts_ = other.artifacts_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Batch Clone() {
          return new Batch(this);
        }

        /// <summary>Field number for the "artifacts" field.</summary>
        public const int ArtifactsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Spark.Connect.AddArtifactsRequest.Types.SingleChunkArtifact> _repeated_artifacts_codec
            = pb::FieldCodec.ForMessage(10, global::Spark.Connect.AddArtifactsRequest.Types.SingleChunkArtifact.Parser);
        private readonly pbc::RepeatedField<global::Spark.Connect.AddArtifactsRequest.Types.SingleChunkArtifact> artifacts_ = new pbc::RepeatedField<global::Spark.Connect.AddArtifactsRequest.Types.SingleChunkArtifact>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Spark.Connect.AddArtifactsRequest.Types.SingleChunkArtifact> Artifacts {
          get { return artifacts_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Batch);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Batch other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!artifacts_.Equals(other.artifacts_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= artifacts_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          artifacts_.WriteTo(output, _repeated_artifacts_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          artifacts_.WriteTo(ref output, _repeated_artifacts_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += artifacts_.CalculateSize(_repeated_artifacts_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Batch other) {
          if (other == null) {
            return;
          }
          artifacts_.Add(other.artifacts_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                artifacts_.AddEntriesFrom(input, _repeated_artifacts_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                artifacts_.AddEntriesFrom(ref input, _repeated_artifacts_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Signals the beginning/start of a chunked artifact.
      /// A large artifact is transferred through a payload of `BeginChunkedArtifact` followed by a
      /// sequence of `ArtifactChunk`s.
      /// </summary>
      public sealed partial class BeginChunkedArtifact : pb::IMessage<BeginChunkedArtifact>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<BeginChunkedArtifact> _parser = new pb::MessageParser<BeginChunkedArtifact>(() => new BeginChunkedArtifact());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<BeginChunkedArtifact> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AddArtifactsRequest.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BeginChunkedArtifact() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BeginChunkedArtifact(BeginChunkedArtifact other) : this() {
          name_ = other.name_;
          totalBytes_ = other.totalBytes_;
          numChunks_ = other.numChunks_;
          initialChunk_ = other.initialChunk_ != null ? other.initialChunk_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BeginChunkedArtifact Clone() {
          return new BeginChunkedArtifact(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        /// <summary>
        /// Name of the artifact undergoing chunking. Follows the same conventions as the `name` in
        /// the `Artifact` message.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "total_bytes" field.</summary>
        public const int TotalBytesFieldNumber = 2;
        private long totalBytes_;
        /// <summary>
        /// Total size of the artifact in bytes.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long TotalBytes {
          get { return totalBytes_; }
          set {
            totalBytes_ = value;
          }
        }

        /// <summary>Field number for the "num_chunks" field.</summary>
        public const int NumChunksFieldNumber = 3;
        private long numChunks_;
        /// <summary>
        /// Number of chunks the artifact is split into.
        /// This includes the `initial_chunk`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long NumChunks {
          get { return numChunks_; }
          set {
            numChunks_ = value;
          }
        }

        /// <summary>Field number for the "initial_chunk" field.</summary>
        public const int InitialChunkFieldNumber = 4;
        private global::Spark.Connect.AddArtifactsRequest.Types.ArtifactChunk initialChunk_;
        /// <summary>
        /// The first/initial chunk.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Spark.Connect.AddArtifactsRequest.Types.ArtifactChunk InitialChunk {
          get { return initialChunk_; }
          set {
            initialChunk_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as BeginChunkedArtifact);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(BeginChunkedArtifact other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (TotalBytes != other.TotalBytes) return false;
          if (NumChunks != other.NumChunks) return false;
          if (!object.Equals(InitialChunk, other.InitialChunk)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (TotalBytes != 0L) hash ^= TotalBytes.GetHashCode();
          if (NumChunks != 0L) hash ^= NumChunks.GetHashCode();
          if (initialChunk_ != null) hash ^= InitialChunk.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (TotalBytes != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(TotalBytes);
          }
          if (NumChunks != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(NumChunks);
          }
          if (initialChunk_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(InitialChunk);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (TotalBytes != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(TotalBytes);
          }
          if (NumChunks != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(NumChunks);
          }
          if (initialChunk_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(InitialChunk);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (TotalBytes != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalBytes);
          }
          if (NumChunks != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(NumChunks);
          }
          if (initialChunk_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(InitialChunk);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(BeginChunkedArtifact other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.TotalBytes != 0L) {
            TotalBytes = other.TotalBytes;
          }
          if (other.NumChunks != 0L) {
            NumChunks = other.NumChunks;
          }
          if (other.initialChunk_ != null) {
            if (initialChunk_ == null) {
              InitialChunk = new global::Spark.Connect.AddArtifactsRequest.Types.ArtifactChunk();
            }
            InitialChunk.MergeFrom(other.InitialChunk);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 16: {
                TotalBytes = input.ReadInt64();
                break;
              }
              case 24: {
                NumChunks = input.ReadInt64();
                break;
              }
              case 34: {
                if (initialChunk_ == null) {
                  InitialChunk = new global::Spark.Connect.AddArtifactsRequest.Types.ArtifactChunk();
                }
                input.ReadMessage(InitialChunk);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 16: {
                TotalBytes = input.ReadInt64();
                break;
              }
              case 24: {
                NumChunks = input.ReadInt64();
                break;
              }
              case 34: {
                if (initialChunk_ == null) {
                  InitialChunk = new global::Spark.Connect.AddArtifactsRequest.Types.ArtifactChunk();
                }
                input.ReadMessage(InitialChunk);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Response to adding an artifact. Contains relevant metadata to verify successful transfer of
  /// artifact(s).
  /// </summary>
  public sealed partial class AddArtifactsResponse : pb::IMessage<AddArtifactsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AddArtifactsResponse> _parser = new pb::MessageParser<AddArtifactsResponse>(() => new AddArtifactsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AddArtifactsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spark.Connect.BaseReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddArtifactsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddArtifactsResponse(AddArtifactsResponse other) : this() {
      artifacts_ = other.artifacts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddArtifactsResponse Clone() {
      return new AddArtifactsResponse(this);
    }

    /// <summary>Field number for the "artifacts" field.</summary>
    public const int ArtifactsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Spark.Connect.AddArtifactsResponse.Types.ArtifactSummary> _repeated_artifacts_codec
        = pb::FieldCodec.ForMessage(10, global::Spark.Connect.AddArtifactsResponse.Types.ArtifactSummary.Parser);
    private readonly pbc::RepeatedField<global::Spark.Connect.AddArtifactsResponse.Types.ArtifactSummary> artifacts_ = new pbc::RepeatedField<global::Spark.Connect.AddArtifactsResponse.Types.ArtifactSummary>();
    /// <summary>
    /// The list of artifact(s) seen by the server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Spark.Connect.AddArtifactsResponse.Types.ArtifactSummary> Artifacts {
      get { return artifacts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AddArtifactsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AddArtifactsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!artifacts_.Equals(other.artifacts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= artifacts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      artifacts_.WriteTo(output, _repeated_artifacts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      artifacts_.WriteTo(ref output, _repeated_artifacts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += artifacts_.CalculateSize(_repeated_artifacts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AddArtifactsResponse other) {
      if (other == null) {
        return;
      }
      artifacts_.Add(other.artifacts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            artifacts_.AddEntriesFrom(input, _repeated_artifacts_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            artifacts_.AddEntriesFrom(ref input, _repeated_artifacts_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AddArtifactsResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Metadata of an artifact.
      /// </summary>
      public sealed partial class ArtifactSummary : pb::IMessage<ArtifactSummary>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ArtifactSummary> _parser = new pb::MessageParser<ArtifactSummary>(() => new ArtifactSummary());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ArtifactSummary> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Spark.Connect.AddArtifactsResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ArtifactSummary() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ArtifactSummary(ArtifactSummary other) : this() {
          name_ = other.name_;
          isCrcSuccessful_ = other.isCrcSuccessful_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ArtifactSummary Clone() {
          return new ArtifactSummary(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "is_crc_successful" field.</summary>
        public const int IsCrcSuccessfulFieldNumber = 2;
        private bool isCrcSuccessful_;
        /// <summary>
        /// Whether the CRC (Cyclic Redundancy Check) is successful on server verification.
        /// The server discards any artifact that fails the CRC.
        /// If false, the client may choose to resend the artifact specified by `name`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool IsCrcSuccessful {
          get { return isCrcSuccessful_; }
          set {
            isCrcSuccessful_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ArtifactSummary);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ArtifactSummary other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (IsCrcSuccessful != other.IsCrcSuccessful) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (IsCrcSuccessful != false) hash ^= IsCrcSuccessful.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (IsCrcSuccessful != false) {
            output.WriteRawTag(16);
            output.WriteBool(IsCrcSuccessful);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (IsCrcSuccessful != false) {
            output.WriteRawTag(16);
            output.WriteBool(IsCrcSuccessful);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (IsCrcSuccessful != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ArtifactSummary other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.IsCrcSuccessful != false) {
            IsCrcSuccessful = other.IsCrcSuccessful;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 16: {
                IsCrcSuccessful = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 16: {
                IsCrcSuccessful = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
