// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: spark/connect/common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spark.Connect {

  /// <summary>Holder for reflection information generated from spark/connect/common.proto</summary>
  public static partial class CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for spark/connect/common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpzcGFyay9jb25uZWN0L2NvbW1vbi5wcm90bxINc3BhcmsuY29ubmVjdCJ1",
            "CgxTdG9yYWdlTGV2ZWwSEAoIdXNlX2Rpc2sYASABKAgSEgoKdXNlX21lbW9y",
            "eRgCIAEoCBIUCgx1c2Vfb2ZmX2hlYXAYAyABKAgSFAoMZGVzZXJpYWxpemVk",
            "GAQgASgIEhMKC3JlcGxpY2F0aW9uGAUgASgFQiIKHm9yZy5hcGFjaGUuc3Bh",
            "cmsuY29ubmVjdC5wcm90b1ABYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spark.Connect.StorageLevel), global::Spark.Connect.StorageLevel.Parser, new[]{ "UseDisk", "UseMemory", "UseOffHeap", "Deserialized", "Replication" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// StorageLevel for persisting Datasets/Tables.
  /// </summary>
  public sealed partial class StorageLevel : pb::IMessage<StorageLevel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StorageLevel> _parser = new pb::MessageParser<StorageLevel>(() => new StorageLevel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StorageLevel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spark.Connect.CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StorageLevel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StorageLevel(StorageLevel other) : this() {
      useDisk_ = other.useDisk_;
      useMemory_ = other.useMemory_;
      useOffHeap_ = other.useOffHeap_;
      deserialized_ = other.deserialized_;
      replication_ = other.replication_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StorageLevel Clone() {
      return new StorageLevel(this);
    }

    /// <summary>Field number for the "use_disk" field.</summary>
    public const int UseDiskFieldNumber = 1;
    private bool useDisk_;
    /// <summary>
    /// (Required) Whether the cache should use disk or not.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseDisk {
      get { return useDisk_; }
      set {
        useDisk_ = value;
      }
    }

    /// <summary>Field number for the "use_memory" field.</summary>
    public const int UseMemoryFieldNumber = 2;
    private bool useMemory_;
    /// <summary>
    /// (Required) Whether the cache should use memory or not.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseMemory {
      get { return useMemory_; }
      set {
        useMemory_ = value;
      }
    }

    /// <summary>Field number for the "use_off_heap" field.</summary>
    public const int UseOffHeapFieldNumber = 3;
    private bool useOffHeap_;
    /// <summary>
    /// (Required) Whether the cache should use off-heap or not.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseOffHeap {
      get { return useOffHeap_; }
      set {
        useOffHeap_ = value;
      }
    }

    /// <summary>Field number for the "deserialized" field.</summary>
    public const int DeserializedFieldNumber = 4;
    private bool deserialized_;
    /// <summary>
    /// (Required) Whether the cached data is deserialized or not.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Deserialized {
      get { return deserialized_; }
      set {
        deserialized_ = value;
      }
    }

    /// <summary>Field number for the "replication" field.</summary>
    public const int ReplicationFieldNumber = 5;
    private int replication_;
    /// <summary>
    /// (Required) The number of replicas.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Replication {
      get { return replication_; }
      set {
        replication_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StorageLevel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StorageLevel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UseDisk != other.UseDisk) return false;
      if (UseMemory != other.UseMemory) return false;
      if (UseOffHeap != other.UseOffHeap) return false;
      if (Deserialized != other.Deserialized) return false;
      if (Replication != other.Replication) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (UseDisk != false) hash ^= UseDisk.GetHashCode();
      if (UseMemory != false) hash ^= UseMemory.GetHashCode();
      if (UseOffHeap != false) hash ^= UseOffHeap.GetHashCode();
      if (Deserialized != false) hash ^= Deserialized.GetHashCode();
      if (Replication != 0) hash ^= Replication.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UseDisk != false) {
        output.WriteRawTag(8);
        output.WriteBool(UseDisk);
      }
      if (UseMemory != false) {
        output.WriteRawTag(16);
        output.WriteBool(UseMemory);
      }
      if (UseOffHeap != false) {
        output.WriteRawTag(24);
        output.WriteBool(UseOffHeap);
      }
      if (Deserialized != false) {
        output.WriteRawTag(32);
        output.WriteBool(Deserialized);
      }
      if (Replication != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Replication);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UseDisk != false) {
        output.WriteRawTag(8);
        output.WriteBool(UseDisk);
      }
      if (UseMemory != false) {
        output.WriteRawTag(16);
        output.WriteBool(UseMemory);
      }
      if (UseOffHeap != false) {
        output.WriteRawTag(24);
        output.WriteBool(UseOffHeap);
      }
      if (Deserialized != false) {
        output.WriteRawTag(32);
        output.WriteBool(Deserialized);
      }
      if (Replication != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Replication);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (UseDisk != false) {
        size += 1 + 1;
      }
      if (UseMemory != false) {
        size += 1 + 1;
      }
      if (UseOffHeap != false) {
        size += 1 + 1;
      }
      if (Deserialized != false) {
        size += 1 + 1;
      }
      if (Replication != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Replication);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StorageLevel other) {
      if (other == null) {
        return;
      }
      if (other.UseDisk != false) {
        UseDisk = other.UseDisk;
      }
      if (other.UseMemory != false) {
        UseMemory = other.UseMemory;
      }
      if (other.UseOffHeap != false) {
        UseOffHeap = other.UseOffHeap;
      }
      if (other.Deserialized != false) {
        Deserialized = other.Deserialized;
      }
      if (other.Replication != 0) {
        Replication = other.Replication;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UseDisk = input.ReadBool();
            break;
          }
          case 16: {
            UseMemory = input.ReadBool();
            break;
          }
          case 24: {
            UseOffHeap = input.ReadBool();
            break;
          }
          case 32: {
            Deserialized = input.ReadBool();
            break;
          }
          case 40: {
            Replication = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UseDisk = input.ReadBool();
            break;
          }
          case 16: {
            UseMemory = input.ReadBool();
            break;
          }
          case 24: {
            UseOffHeap = input.ReadBool();
            break;
          }
          case 32: {
            Deserialized = input.ReadBool();
            break;
          }
          case 40: {
            Replication = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
